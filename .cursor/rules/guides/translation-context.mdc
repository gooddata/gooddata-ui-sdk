---
description: "Ensures all translation strings in JSON files have clear and accurate context to aid AI translation tools in providing more accurate translations."
globs: libs/**/en-US.json
alwaysApply: false
severity: error
tags:
  - i18n
  - translations
  - documentation
---
# Translation Context Rule

## Purpose

Ensures all translation strings in JSON files have clear and accurate context
to aid AI translation tools in providing more accurate translations.

## Instructions

1.  Review code usage to understand where and how the string is used.
2.  Analyze the string identifier for contextual clues (e.g., namespacing).
3.  Examine surrounding strings to understand relationships.
4.  Combine insights into a clear, concise comment.
5.  Remove any translation-specific notes from the comment mentioning how to treat ICU placeholders, 'â€¦' character, HTML tags or any other redundant or irrelevant notes.
6.  For the fields that contain an ICU syntax, provide example output that the string will be rendered as.
7.  Ensure the comment is never empty.
8.  Review and update existing comments as needed.
9.  Update the JSON file with the context.

## Examples

-   **Identifier**: `gs.header.search`
    -   **Value**: "Search"
    -   **Context**: "Global header: Label for the search button in the application's global header, used to open the search menu."

-   **Identifier**: `gs.date.at`
    -   **Value**: "at"
    -   **Context**: "Date and time expression: Used to indicate a specific time, e.g., 'Meeting at 3 PM'."

-   **Identifier**: `gs.items.count`
    -   **Value**: "{count, plural, one {# item} other {# items}}"
    -   **Context**: "Indicates the number of items. Example for ICU pluralization: if count is 1, output is '1 item'; if count is 5, output is '5 items'."

## Testing and Validation

-   Verify that the context provided in `comment` fields demonstrably improves the accuracy and naturalness of translations, whether generated by AI or human translators.
-   Regularly solicit feedback from translators specifically on the clarity, sufficiency, and usefulness of the `comment` fields for their work.
-   Periodically audit a sample of `comment` fields, especially for complex or ambiguous strings, to ensure they remain accurate and helpful as the product evolves and prevent outdated context from causing translation issues.
-   Document any recurring issues or patterns in the comments that may need to be addressed in the codebase.

## File Editing Restrictions

-   Only edit `en-US.json` files (source of truth).
-   Edit only the `comment` field of the strings in JSON.
-   Do not edit localized files (e.g., `en-GB.json`) as they are generated by a third-party tool.
-   All translation changes should go through the appropriate translation management system.

## Schema Validation

Translation strings should conform to the following schema:

```json
{
  "type": "object",
  "properties": {
    "comment": {
      "type": "string",
      "description": "Contextual information about the translation string. The information is used for the AI translation tools to provide more accurate translations.",
      "minLength": 1,
      "errorMessage": "Comment must not be empty"
    }
  },
  "required": ["comment"],
  "additionalProperties": true
}
```