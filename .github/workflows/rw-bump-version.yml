# (C) 2024 GoodData Corporation

# This workflow is triggered by a workflow call. It will bump the version of the repository and push the changes to the source branch.
# It will also return the version which was created.
# if the 'skip-bump' input is set to true, it will just return the current version without bumping it.

name: rw ~ Rush ~ Bump version
on:
    workflow_call:
        inputs:
            source-branch:
                required: true
                description: "The name of the source branch"
                type: string
            bump:
                required: false
                description: "The type of version bump (major, minor, patch, prerelease)"
                type: string
            prerelease-id:
                required: false
                default: null
                description: "The prerelease ID (alpha, beta, etc.)"
                type: string
            skip-bump:
                required: false
                default: false
                description: "Skip bumping the version and just return the current version"
                type: boolean
        outputs:
            version:
                description: "Version which was created"
                # Ternary operation to decide which job's output to use based on the 'skip-bump' input.
                value: ${{ inputs.skip-bump == true && jobs.get-version.outputs.version || jobs.bump-version-and-commit.outputs.version }}

jobs:
    get-version:
      if: ${{ inputs.skip-bump }}
      runs-on: [ubuntu-latest]
      outputs:
        version: ${{ steps.version.outputs.version }}
      steps:
        - name: Setup node
          uses: actions/setup-node@v4
          with:
            node-version: 22.13.0
        - name: Checkout code
          uses: actions/checkout@v4
          with:
              ref: ${{ inputs.source-branch }}
              token: ${{ secrets.TOKEN_GITHUB_YENKINS_ADMIN }}

        - name: Get version
          uses: gooddata/gooddata-ui-sdk/.github/actions/get-version-action@master
          id: version

    bump-version-and-commit:
        if: ${{ !inputs.skip-bump && inputs.bump }}
        runs-on: [ubuntu-latest]
        outputs:
            version: ${{ steps.version.outputs.version }}
        steps:
            - name: Setup node
              uses: actions/setup-node@v4
              with:
                node-version: 22.13.0
            - name: Checkout code
              uses: actions/checkout@v4
              with:
                  ref: ${{ inputs.source-branch }}
                  token: ${{ secrets.TOKEN_GITHUB_YENKINS_ADMIN }}

            - name: Add repository to git safe directories to avoid dubious ownership issue
              run: git config --global --add safe.directory $GITHUB_WORKSPACE

            - name: Install rush
              run: npm install -g @microsoft/rush

            - name: Config user
              run: |
                  git config --global user.email "git-action@gooddata.com"
                  git config --global user.name "git-action"

            - name: Rush bump version and override prerelease-id
              if: ${{ inputs.prerelease-id}}
              env:
                  BUMP: ${{ inputs.bump }}
                  PRERELEASE_ID: ${{ inputs.prerelease-id }}
              run: rush version --bump --override-bump $BUMP --override-prerelease-id $PRERELEASE_ID

            - name: Rush bump version
              if: ${{ !inputs.prerelease-id}}
              env:
                  BUMP: ${{ inputs.bump }}
              run: rush version --bump --override-bump $BUMP


            - name: Get version
              uses: gooddata/gooddata-ui-sdk/.github/actions/get-version-action@master
              id: version

            - name: Git commit and push
              run: |
                # add changelogs
                git add libs/sdk-ui-all/CHANGELOG.* || true
                git ls-files | grep '\.json' | xargs git add

                git commit -a -m "chore: bump versions to $VERSION" -m "" -m "TRIVIAL"
                git push origin ${{ inputs.source-branch }}
              env:
                VERSION: ${{ steps.version.outputs.version }}
