// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AttributeFilterHandler getAttribute() should return the attribute after successful initialization 1`] = `
Object {
  "description": "",
  "displayForms": undefined,
  "id": "attr.product.id",
  "production": true,
  "ref": Object {
    "uri": "/gdc/md/referenceworkspace/obj/1054",
  },
  "title": "Product",
  "type": "attribute",
  "uri": "/gdc/md/referenceworkspace/obj/1054",
}
`;

exports[`AttributeFilterHandler getAttribute() should return the attribute after successful loadAttribute() call 1`] = `
Object {
  "description": "",
  "displayForms": undefined,
  "id": "attr.product.id",
  "production": true,
  "ref": Object {
    "uri": "/gdc/md/referenceworkspace/obj/1054",
  },
  "title": "Product",
  "type": "attribute",
  "uri": "/gdc/md/referenceworkspace/obj/1054",
}
`;

exports[`AttributeFilterHandler getAttributeDataSet() should return the attribute data set after successful initialization 1`] = `
Object {
  "deprecated": false,
  "description": "",
  "id": "dataSet1",
  "production": true,
  "ref": Object {
    "uri": "dataSet1",
  },
  "title": "Dataset",
  "type": "dataSet",
  "unlisted": false,
  "uri": "dataSet1",
}
`;

exports[`AttributeFilterHandler getAttributeDataSet() should return the attribute data set after successful loadAttribute() call 1`] = `
Object {
  "deprecated": false,
  "description": "",
  "id": "dataSet1",
  "production": true,
  "ref": Object {
    "uri": "dataSet1",
  },
  "title": "Dataset",
  "type": "dataSet",
  "unlisted": false,
  "uri": "dataSet1",
}
`;

exports[`AttributeFilterHandler getAttributeError() should return error 1`] = `[Error: NOT_FOUND]`;

exports[`AttributeFilterHandler getAttributeStatus() should return proper status for failed load: after the load 1`] = `"canceled"`;

exports[`AttributeFilterHandler getAttributeStatus() should return proper status for failed load: before the load 1`] = `"pending"`;

exports[`AttributeFilterHandler getAttributeStatus() should return proper status for failed load: during the load 1`] = `"loading"`;

exports[`AttributeFilterHandler getAttributeStatus() should return proper status for successful load: after the load 1`] = `"success"`;

exports[`AttributeFilterHandler getAttributeStatus() should return proper status for successful load: before the load 1`] = `"pending"`;

exports[`AttributeFilterHandler getAttributeStatus() should return proper status for successful load: during the load 1`] = `"loading"`;

exports[`AttributeFilterHandler loadAttribute() should trigger onLoadAttributeStart() callback: with parameters 1`] = `
Array [
  Object {
    "correlation": "start",
  },
]
`;

exports[`AttributeFilterHandler loadAttribute() that failed should trigger onLoadAttributeError() callback: with parameters 1`] = `
Array [
  Object {
    "correlation": "error",
    "error": [Error: NOT_FOUND],
  },
]
`;

exports[`AttributeFilterHandler loadAttribute() that was canceled by another loadAttribute() call should trigger onLoadAttributeCancel() callback: with parameters 1`] = `
Array [
  Object {
    "correlation": "cancel",
  },
]
`;

exports[`AttributeFilterHandler loadAttribute() that was canceled by cancelAttributeLoad() call should trigger onLoadAttributeCancel() callback: with parameters 1`] = `
Array [
  Object {
    "correlation": "cancel",
  },
]
`;

exports[`AttributeFilterHandler loadAttribute() that was successful should trigger onLoadAttributeSuccess() callback: with parameters 1`] = `
Array [
  Object {
    "attribute": Object {
      "description": "",
      "displayForms": undefined,
      "id": "attr.product.id",
      "production": true,
      "ref": Object {
        "uri": "/gdc/md/referenceworkspace/obj/1054",
      },
      "title": "Product",
      "type": "attribute",
      "uri": "/gdc/md/referenceworkspace/obj/1054",
    },
    "correlation": "success",
    "dataSet": Object {
      "deprecated": false,
      "description": "",
      "id": "dataSet1",
      "production": true,
      "ref": Object {
        "uri": "dataSet1",
      },
      "title": "Dataset",
      "type": "dataSet",
      "unlisted": false,
      "uri": "dataSet1",
    },
  },
]
`;
