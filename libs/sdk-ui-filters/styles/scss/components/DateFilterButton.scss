// (C) 2019-2024 GoodData Corporation
@use "sass:list";
@use "sass:map";
@use "@gooddata/sdk-ui-kit/styles/scss/variables";
@use "@gooddata/sdk-ui-kit/styles/scss/button";
@use "@gooddata/sdk-ui-kit/styles/scss/Button/variables" as button-variables;
@use "@gooddata/sdk-ui-kit/styles/scss/mixins";
@use "@gooddata/sdk-ui-kit/styles/scss/typo-mixins";

$transition-length: 0.2s;
$separator-icon: "data:image/svg+xml,%3Csvg width='7' height='26' viewBox='0 0 7 26' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M0 4h2v2H0V4zm0-4h2v2H0V0zm5 4h2v2H5V4zm0-4h2v2H5V0zm0 8h2v2H5V8zM0 8h2v2H0V8zm0 4h2v2H0v-2zm5 4h2v2H5v-2zm-5 0h2v2H0v-2zm5 4h2v2H5v-2zm-5 0h2v2H0v-2zm5 4h2v2H5v-2zm-5 0h2v2H0v-2zm5-12h2v2H5v-2z' fill='%23B0BECA' fill-rule='evenodd'/%3E%3C/svg%3E%0A";
$gd-dashboards-filterBar-filterButton-backgroundColor: var(
    --gd-dashboards-filterBar-filterButton-backgroundColor,
    transparent
);

.gd-date-filter-button {
    @include typo-mixins.gd-font-base;

    display: flex;
    gap: 7px;
    position: relative;
    height: 42px;
    margin: 7px 11px 7px 0;
    padding: 5px 10px;
    line-height: 16px;
    cursor: pointer;
    user-select: none;
    font-size: 12px;
    // stylelint-disable-next-line declaration-no-important
    max-width: none !important;

    &.disabled {
        &:hover,
        &:focus,
        &:active,
        &:hover::after,
        &:focus::after,
        &:active::after {
            cursor: default;
            user-select: auto;
            box-shadow: none;
            background: transparent;
            border-color: transparent;
            text-decoration: none;
        }

        .button-subtitle::after {
            content: none;
        }
    }

    &::before,
    &::after {
        content: "";
        position: absolute;
        transition: all $transition-length;
    }

    &::before {
        z-index: 1;
        top: 8px;
        left: -4px;
        width: 7px;
        height: 26px;
        background: url($separator-icon) no-repeat;
        opacity: 0;
    }

    &::after {
        content: "";
        position: absolute;
        top: 0;
        right: 0;
        bottom: 0;
        left: 0;
        border: 1px solid transparent;
        background: $gd-dashboards-filterBar-filterButton-backgroundColor;
        transform: translateZ(-1px);
        border-radius: 3px;
    }

    &:hover {
        &::after {
            border-color: button-variables.$button-normal-hover-border-color;
        }

        .edit-mode-on & {
            @media #{variables.$large-up} {
                // refactor
                // stylelint-disable-next-line max-nesting-depth
                &::before {
                    opacity: 1;
                }
                // refactor
                // stylelint-disable-next-line max-nesting-depth
                &::after {
                    // refactor
                    // stylelint-disable-next-line max-line-length
                    box-shadow: 0 1px 3px 0 button-variables.$button-shadow-lighter,
                        0 2px 9px 0 button-variables.$button-shadow-darker;
                    border-color: button-variables.$button-normal-active-border-color;
                }
            }

            &::before {
                z-index: 1;
                top: 8px;
                left: -4px;
                width: 7px;
                height: 26px;
                background: url($separator-icon) no-repeat;
                opacity: 0;
            }
        }
    }

    &:active,
    &.is-active {
        &::after {
            &,
            .edit-mode-on & {
                box-shadow: inset 0 1px 0 0 button-variables.$button-normal-active-shadow;
                border-color: var(
                    --gd-palette-complementary-5-from-theme,
                    button-variables.$button-normal-hover-border-color
                );

                // refactor
                // stylelint-disable-next-line max-line-length
                @include mixins.gradient-linear(
                    button-variables.$button-normal-active-gradient-top,
                    button-variables.$button-normal-active-gradient-bottom
                );
            }
        }
    }

    &.is-active {
        .button-title,
        .button-subtitle {
            &::after {
                content: "\e613";
            }
        }
    }

    .edit-mode-on & {
        @media #{variables.$large-up} {
            cursor: grab;

            &::after {
                left: -10px;
            }

            &.is-active {
                // refactor
                // stylelint-disable-next-line max-nesting-depth
                &::before {
                    opacity: 1;
                }
            }
        }
    }

    .is-dragging & {
        &,
        &:hover,
        &:active,
        &.is-active {
            &::after {
                box-shadow: none;
                background-color: var(--gd-palette-complementary-1-from-theme, #eff2f4);
                border-color: transparent;
            }
        }

        .button-title,
        .button-subtitle {
            &::after {
                content: "\e612";
            }
        }
    }

    .button-content {
        position: relative;
        z-index: 1;
        display: flex;
        justify-content: center;
        max-width: 100%;
        height: 100%;
        flex-direction: column;

        .overlay & {
            align-items: center;
            height: 100%;
            flex-direction: row;
        }
    }

    .button-title,
    .button-subtitle {
        white-space: nowrap;
        max-width: 100%;

        &::after {
            content: "\e612";
            display: none;
            vertical-align: top;
            color: variables.$gd-color-state-blank;
            transition: $transition-length;
            margin-left: 0.5em;
            font-family: variables.$gd-font-indigo;
            font-weight: normal;
            font-size: inherit;
        }

        &:only-child::after {
            display: inline-block;
        }

        .drag-preview &::after {
            display: none;
        }
    }

    .button-title {
        overflow: hidden;
        color: variables.$gd-color-link;

        .gd-bubble-trigger,
        .shortened {
            display: inline-flex;
        }

        .shortened {
            max-width: 100%;
        }

        .overlay & {
            flex: 0 0 auto;
            color: variables.$gd-color-label;
            max-width: 100%;
            margin-right: 5px;

            &::after {
                content: ":";
            }
        }
    }

    .button-subtitle {
        display: inline-flex;
        overflow: hidden;
        color: var(--gd-palette-complementary-8, variables.$default-gd-color-text);
        font-weight: bold;
        text-overflow: ellipsis;

        .overlay & {
            flex: 1 1 auto;
            max-width: none;

            &::after {
                position: absolute;
                top: 50%;
                right: -20px;
                transform: translateY(-50%);
                font-size: 18px;
            }
        }

        &::after {
            display: inline-block;
        }
    }

    &.dropdown-button,
    .gd-list-item {
        &.is-unrelated {
            color: variables.$gd-color-negative;
        }
    }

    &:focus-visible {
        outline: auto 5px Highlight; /* For Firefox */
        // stylelint-disable-next-line declaration-block-no-duplicate-properties
        outline: auto 5px -webkit-focus-ring-color; /* For Chrome */
    }
}

// remove button in mobile
.gd-mobile-dropdown-overlay .gd-date-filter-button-mobile {
    display: none;
}

// display the duplicate button in mobile content
.gd-mobile-dropdown-content .gd-date-filter-button-mobile {
    display: block;
    width: auto;
    height: auto;
    margin: 0;
    padding: 10px;
    box-shadow: 0 1px 2px 0 var(--gd-shadow-color-from-theme, rgba(20, 56, 93, 0.1));
    line-height: 25px;
    border-width: 1px 0;
    border-top: 1px solid variables.$gd-border-color;
    border-bottom: 1px solid variables.$gd-border-color;
    font-size: list.nth(map.get(variables.$gd-typo, font-sizes), 4);
    text-align: left;
    background-color: variables.$gd-color-white;

    &::after {
        display: none;
    }

    &::before {
        right: 4px;
    }
}
