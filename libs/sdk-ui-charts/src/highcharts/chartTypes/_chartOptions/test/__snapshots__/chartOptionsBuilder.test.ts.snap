// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`chartOptionsBuilder > outline chart fill > getChartOptions > Heatmap configuration > getChartOptions for heatmap > getHeatmapDataClasses > should return 7 data classes with valid color 1`] = `
[
  {
    "color": "rgb(212,246,255)",
    "from": 0,
    "to": 4.285714285714286,
  },
  {
    "color": "rgb(197,236,248)",
    "from": 4.285714285714286,
    "to": 8.571428571428571,
  },
  {
    "color": "rgb(138,217,241)",
    "from": 8.571428571428571,
    "to": 12.857142857142858,
  },
  {
    "color": "rgb(79,198,234)",
    "from": 12.857142857142858,
    "to": 17.142857142857142,
  },
  {
    "color": "rgb(20,178,226)",
    "from": 17.142857142857142,
    "to": 21.428571428571427,
  },
  {
    "color": "rgb(22,151,192)",
    "from": 21.428571428571427,
    "to": 25.71428571428571,
  },
  {
    "color": "rgb(0,110,145)",
    "from": 25.71428571428571,
    "to": 30,
  },
]
`;

exports[`chartOptionsBuilder > outline chart fill > getChartOptions > Heatmap configuration > getChartOptions for heatmap > getHeatmapDataClasses > should return empty array when there are no values in series 1`] = `[]`;

exports[`chartOptionsBuilder > outline chart fill > getChartOptions > Heatmap configuration > getChartOptions for heatmap > getHeatmapDataClasses > should return single dataClass when series have only one value 1`] = `
[
  {
    "color": "rgb(197,236,248)",
    "from": 10,
    "to": 10,
  },
]
`;

exports[`chartOptionsBuilder > outline chart fill > getDrillableSeries > in usecase of bar chart with 3 measures and view by attribute > with first and last drillable measures > should assign correct drillIntersection to pointData with drilldown true 1`] = `
[
  [
    {
      "header": {
        "measureHeaderItem": {
          "format": "#,##0.00",
          "identifier": "af2Ewj9Re2vK",
          "localIdentifier": "lostMetric",
          "name": "<button>Lost</button> ...",
          "ref": {
            "uri": "/gdc/md/d20eyb3wfs0xe5l0lfscdnrnyhq1t42q/obj/1283",
          },
          "uri": "/gdc/md/d20eyb3wfs0xe5l0lfscdnrnyhq1t42q/obj/1283",
        },
      },
    },
    {
      "header": {
        "attributeHeader": {
          "formOf": {
            "identifier": "created",
            "name": "Year created",
            "ref": {
              "uri": "/gdc/md/d20eyb3wfs0xe5l0lfscdnrnyhq1t42q/obj/157",
            },
            "uri": "/gdc/md/d20eyb3wfs0xe5l0lfscdnrnyhq1t42q/obj/157",
          },
          "identifier": "created.aag81lMifn6q",
          "localIdentifier": "yearCreatedAttribute",
          "name": "Year (Created)",
          "ref": {
            "uri": "/gdc/md/d20eyb3wfs0xe5l0lfscdnrnyhq1t42q/obj/158",
          },
          "uri": "/gdc/md/d20eyb3wfs0xe5l0lfscdnrnyhq1t42q/obj/158",
        },
        "attributeHeaderItem": {
          "name": "<button>2008</button>",
          "uri": "/gdc/md/d20eyb3wfs0xe5l0lfscdnrnyhq1t42q/obj/158/elements?id=2008",
        },
      },
    },
  ],
  undefined,
  [
    {
      "header": {
        "measureHeaderItem": {
          "format": "#,##0.00",
          "identifier": "alUEwmBtbwSh",
          "localIdentifier": "expectedMetric",
          "name": "Expected",
          "ref": {
            "uri": "/gdc/md/d20eyb3wfs0xe5l0lfscdnrnyhq1t42q/obj/1285",
          },
          "uri": "/gdc/md/d20eyb3wfs0xe5l0lfscdnrnyhq1t42q/obj/1285",
        },
      },
    },
    {
      "header": {
        "attributeHeader": {
          "formOf": {
            "identifier": "created",
            "name": "Year created",
            "ref": {
              "uri": "/gdc/md/d20eyb3wfs0xe5l0lfscdnrnyhq1t42q/obj/157",
            },
            "uri": "/gdc/md/d20eyb3wfs0xe5l0lfscdnrnyhq1t42q/obj/157",
          },
          "identifier": "created.aag81lMifn6q",
          "localIdentifier": "yearCreatedAttribute",
          "name": "Year (Created)",
          "ref": {
            "uri": "/gdc/md/d20eyb3wfs0xe5l0lfscdnrnyhq1t42q/obj/158",
          },
          "uri": "/gdc/md/d20eyb3wfs0xe5l0lfscdnrnyhq1t42q/obj/158",
        },
        "attributeHeaderItem": {
          "name": "<button>2008</button>",
          "uri": "/gdc/md/d20eyb3wfs0xe5l0lfscdnrnyhq1t42q/obj/158/elements?id=2008",
        },
      },
    },
  ],
]
`;

exports[`chartOptionsBuilder > outline chart fill > getDrillableSeries > in usecase of bar chart with stack by and view by attributes > should fill correct series color 1`] = `
[
  "rgb(232,247,252)",
  "rgb(230,249,244)",
]
`;

exports[`chartOptionsBuilder > outline chart fill > getDrillableSeries > in usecase of bubble chart with 3 measures and attribute > should assign correct drillIntersection to pointData with drilldown true 1`] = `
{
  "drillIntersection": [
    {
      "header": {
        "measureHeaderItem": {
          "format": "#,##0.00",
          "identifier": "ab0bydLaaisS",
          "localIdentifier": "784a5018a51049078e8f7e86247e08a3",
          "name": "_Snapshot [EOP-2]",
          "ref": {
            "uri": "/gdc/md/hzyl5wlh8rnu0ixmbzlaqpzf09ttb7c8/obj/67097",
          },
          "uri": "/gdc/md/hzyl5wlh8rnu0ixmbzlaqpzf09ttb7c8/obj/67097",
        },
      },
    },
    {
      "header": {
        "measureHeaderItem": {
          "format": "#,##0",
          "identifier": "aaYh6Voua2yj",
          "localIdentifier": "9e5c3cd9a93f4476a93d3494cedc6010",
          "name": "# of Open Opps.",
          "ref": {
            "uri": "/gdc/md/hzyl5wlh8rnu0ixmbzlaqpzf09ttb7c8/obj/13465",
          },
          "uri": "/gdc/md/hzyl5wlh8rnu0ixmbzlaqpzf09ttb7c8/obj/13465",
        },
      },
    },
    {
      "header": {
        "measureHeaderItem": {
          "format": "$#,#00.00",
          "identifier": "ab4EFOAmhjOx",
          "localIdentifier": "71d50cf1d13746099b7f506576d78e4a",
          "name": "Remaining Quota",
          "ref": {
            "uri": "/gdc/md/hzyl5wlh8rnu0ixmbzlaqpzf09ttb7c8/obj/1543",
          },
          "uri": "/gdc/md/hzyl5wlh8rnu0ixmbzlaqpzf09ttb7c8/obj/1543",
        },
      },
    },
    {
      "header": {
        "attributeHeader": {
          "formOf": {
            "identifier": "attr.owner.id",
            "name": "Sales Rep",
            "ref": {
              "uri": "/gdc/md/hzyl5wlh8rnu0ixmbzlaqpzf09ttb7c8/obj/1025",
            },
            "uri": "/gdc/md/hzyl5wlh8rnu0ixmbzlaqpzf09ttb7c8/obj/1025",
          },
          "identifier": "label.owner.id.name",
          "localIdentifier": "49a659fbd7c541a69284769d53a2be7f",
          "name": "Owner Name",
          "ref": {
            "uri": "/gdc/md/hzyl5wlh8rnu0ixmbzlaqpzf09ttb7c8/obj/1028",
          },
          "uri": "/gdc/md/hzyl5wlh8rnu0ixmbzlaqpzf09ttb7c8/obj/1028",
        },
        "attributeHeaderItem": {
          "name": "Jessica Traven",
          "uri": "/gdc/md/hzyl5wlh8rnu0ixmbzlaqpzf09ttb7c8/obj/1025/elements?id=1235",
        },
      },
    },
  ],
  "drilldown": true,
  "format": "$#,#00.00",
  "x": 245,
  "y": 32,
  "z": 2280481.04,
}
`;

exports[`chartOptionsBuilder > outline chart fill > getDrillableSeries > in usecase of scatter plot with 2 measures and attribute > should assign correct drillIntersection to pointData with drilldown true 1`] = `
[
  [
    {
      "header": {
        "measureHeaderItem": {
          "format": "#,##0.00",
          "identifier": "af2Ewj9Re2vK",
          "localIdentifier": "lostMetric",
          "name": "<button>Lost</button> ...",
          "ref": {
            "uri": "/gdc/md/d20eyb3wfs0xe5l0lfscdnrnyhq1t42q/obj/1283",
          },
          "uri": "/gdc/md/d20eyb3wfs0xe5l0lfscdnrnyhq1t42q/obj/1283",
        },
      },
    },
    {
      "header": {
        "measureHeaderItem": {
          "format": "#,##0.00",
          "identifier": "afSEwRwdbMeQ",
          "localIdentifier": "wonMetric",
          "name": "Won",
          "ref": {
            "uri": "/gdc/md/d20eyb3wfs0xe5l0lfscdnrnyhq1t42q/obj/1284",
          },
          "uri": "/gdc/md/d20eyb3wfs0xe5l0lfscdnrnyhq1t42q/obj/1284",
        },
      },
    },
    {
      "header": {
        "attributeHeader": {
          "formOf": {
            "identifier": "created",
            "name": "Year created",
            "ref": {
              "uri": "/gdc/md/d20eyb3wfs0xe5l0lfscdnrnyhq1t42q/obj/157",
            },
            "uri": "/gdc/md/d20eyb3wfs0xe5l0lfscdnrnyhq1t42q/obj/157",
          },
          "identifier": "created.aag81lMifn6q",
          "localIdentifier": "yearCreatedAttribute",
          "name": "Year (Created)",
          "ref": {
            "uri": "/gdc/md/d20eyb3wfs0xe5l0lfscdnrnyhq1t42q/obj/158",
          },
          "uri": "/gdc/md/d20eyb3wfs0xe5l0lfscdnrnyhq1t42q/obj/158",
        },
        "attributeHeaderItem": {
          "name": "<button>2008</button>",
          "uri": "/gdc/md/d20eyb3wfs0xe5l0lfscdnrnyhq1t42q/obj/158/elements?id=2008",
        },
      },
    },
  ],
]
`;

exports[`chartOptionsBuilder > outline chart fill > getSeries > in use case of bubble > should fill X, Y and Z with valid values when measure buckets are not empty 1`] = `
[
  {
    "color": "rgb(20,178,226)",
    "data": [
      {
        "format": "$#,#00.00",
        "x": 0,
        "y": 33,
        "z": 2424413.8,
      },
    ],
    "legendIndex": 0,
    "name": "Adam Bradley",
    "seriesIndex": 0,
  },
  {
    "color": "rgb(0,193,141)",
    "data": [
      {
        "format": "$#,#00.00",
        "x": 0,
        "y": 29,
        "z": 1963436.86,
      },
    ],
    "legendIndex": 1,
    "name": "Alejandro Vabiano",
    "seriesIndex": 1,
  },
  {
    "color": "rgb(229,77,66)",
    "data": [
      {
        "format": "$#,#00.00",
        "x": 0,
        "y": 35,
        "z": 2100205.16,
      },
    ],
    "legendIndex": 2,
    "name": "Alexsandr Fyodr",
    "seriesIndex": 2,
  },
  {
    "color": "rgb(241,134,0)",
    "data": [
      {
        "format": "$#,#00.00",
        "x": 0,
        "y": 30,
        "z": 2364179.19,
      },
    ],
    "legendIndex": 3,
    "name": "Cory Owens",
    "seriesIndex": 3,
  },
  {
    "color": "rgb(171,85,163)",
    "data": [
      {
        "format": "$#,#00.00",
        "x": 0,
        "y": 30,
        "z": 1776567.88,
      },
    ],
    "legendIndex": 4,
    "name": "Dale Perdadtin",
    "seriesIndex": 4,
  },
  {
    "color": "rgb(244,213,33)",
    "data": [
      {
        "format": "$#,#00.00",
        "x": 0,
        "y": 35,
        "z": 2615259.07,
      },
    ],
    "legendIndex": 5,
    "name": "Dave Bostadt",
    "seriesIndex": 5,
  },
  {
    "color": "rgb(148,161,174)",
    "data": [
      {
        "format": "$#,#00.00",
        "x": 0,
        "y": 29,
        "z": 1471667.02,
      },
    ],
    "legendIndex": 6,
    "name": "Ellen Jones",
    "seriesIndex": 6,
  },
  {
    "color": "rgb(107,191,216)",
    "data": [
      {
        "format": "$#,#00.00",
        "x": 0,
        "y": 31,
        "z": 2161030.33,
      },
    ],
    "legendIndex": 7,
    "name": "Huey Jonas",
    "seriesIndex": 7,
  },
  {
    "color": "rgb(181,136,177)",
    "data": [
      {
        "format": "$#,#00.00",
        "x": 0,
        "y": 32,
        "z": 2280481.04,
      },
    ],
    "legendIndex": 8,
    "name": "Jessica Traven",
    "seriesIndex": 8,
  },
  {
    "color": "rgb(238,135,128)",
    "data": [
      {
        "format": "$#,#00.00",
        "x": 0,
        "y": 26,
        "z": 1769560.54,
      },
    ],
    "legendIndex": 9,
    "name": "John Jovi",
    "seriesIndex": 9,
  },
  {
    "color": "rgb(241,171,84)",
    "data": [
      {
        "format": "$#,#00.00",
        "x": 0,
        "y": 42,
        "z": 2346482.16,
      },
    ],
    "legendIndex": 10,
    "name": "Jon Jons",
    "seriesIndex": 10,
  },
  {
    "color": "rgb(133,209,188)",
    "data": [
      {
        "format": "$#,#00.00",
        "x": 0,
        "y": 30,
        "z": 1705084.84,
      },
    ],
    "legendIndex": 11,
    "name": "Lea Forbes",
    "seriesIndex": 11,
  },
  {
    "color": "rgb(41,117,170)",
    "data": [
      {
        "format": "$#,#00.00",
        "x": 0,
        "y": 30,
        "z": 2345090.98,
      },
    ],
    "legendIndex": 12,
    "name": "Monique Babonas",
    "seriesIndex": 12,
  },
  {
    "color": "rgb(4,140,103)",
    "data": [
      {
        "format": "$#,#00.00",
        "x": 0,
        "y": 64,
        "z": 131675.42,
      },
    ],
    "legendIndex": 13,
    "name": "Paul Gomez",
    "seriesIndex": 13,
  },
  {
    "color": "rgb(181,60,51)",
    "data": [
      {
        "format": "$#,#00.00",
        "x": 0,
        "y": 88,
        "z": 1668600.86,
      },
    ],
    "legendIndex": 14,
    "name": "Paul Jacobs",
    "seriesIndex": 14,
  },
  {
    "color": "rgb(163,101,46)",
    "data": [
      {
        "format": "$#,#00.00",
        "x": 0,
        "y": 93,
        "z": 1649882.14,
      },
    ],
    "legendIndex": 15,
    "name": "Ravi Deetri",
    "seriesIndex": 15,
  },
  {
    "color": "rgb(140,57,132)",
    "data": [
      {
        "format": "$#,#00.00",
        "x": 0,
        "y": 70,
        "z": 1229206.9,
      },
    ],
    "legendIndex": 16,
    "name": "Thomas Gones",
    "seriesIndex": 16,
  },
  {
    "color": "rgb(136,219,244)",
    "data": [
      {
        "format": "$#,#00.00",
        "x": 0,
        "y": 71,
        "z": 457045.18,
      },
    ],
    "legendIndex": 17,
    "name": "Tom Stickler",
    "seriesIndex": 17,
  },
  {
    "color": "rgb(189,234,222)",
    "data": [
      {
        "format": "$#,#00.00",
        "x": 0,
        "y": 60,
        "z": 801178.61,
      },
    ],
    "legendIndex": 18,
    "name": "Trevor Deegan",
    "seriesIndex": 18,
  },
  {
    "color": "rgb(239,197,194)",
    "data": [
      {
        "format": "$#,#00.00",
        "x": 0,
        "y": 60,
        "z": 1065164.57,
      },
    ],
    "legendIndex": 19,
    "name": "Victor Crushetz",
    "seriesIndex": 19,
  },
]
`;

exports[`chartOptionsBuilder > outline chart fill > getSeries > in use case of bubble > should update seriesIndex correctly when one of X, Y or Z has null data 1`] = `
[
  {
    "color": "rgb(171,85,163)",
    "data": [
      {
        "format": "$#,#00.00",
        "x": 546,
        "y": 30,
        "z": 1776567.88,
      },
    ],
    "legendIndex": 0,
    "name": "Dale Perdadtin",
    "seriesIndex": 4,
  },
  {
    "color": "rgb(244,213,33)",
    "data": [
      {
        "format": "$#,#00.00",
        "x": 12,
        "y": 35,
        "z": 2615259.07,
      },
    ],
    "legendIndex": 1,
    "name": "Dave Bostadt",
    "seriesIndex": 5,
  },
  {
    "color": "rgb(148,161,174)",
    "data": [
      {
        "format": "$#,#00.00",
        "x": 199,
        "y": 29,
        "z": 1471667.02,
      },
    ],
    "legendIndex": 2,
    "name": "Ellen Jones",
    "seriesIndex": 6,
  },
  {
    "color": "rgb(107,191,216)",
    "data": [
      {
        "format": "$#,#00.00",
        "x": 475,
        "y": 31,
        "z": 2161030.33,
      },
    ],
    "legendIndex": 3,
    "name": "Huey Jonas",
    "seriesIndex": 7,
  },
  {
    "color": "rgb(181,136,177)",
    "data": [
      {
        "format": "$#,#00.00",
        "x": 245,
        "y": 32,
        "z": 2280481.04,
      },
    ],
    "legendIndex": 4,
    "name": "Jessica Traven",
    "seriesIndex": 8,
  },
  {
    "color": "rgb(238,135,128)",
    "data": [
      {
        "format": "$#,#00.00",
        "x": 347,
        "y": 26,
        "z": 1769560.54,
      },
    ],
    "legendIndex": 5,
    "name": "John Jovi",
    "seriesIndex": 9,
  },
  {
    "color": "rgb(241,171,84)",
    "data": [
      {
        "format": "$#,#00.00",
        "x": 345,
        "y": 42,
        "z": 2346482.16,
      },
    ],
    "legendIndex": 6,
    "name": "Jon Jons",
    "seriesIndex": 10,
  },
  {
    "color": "rgb(133,209,188)",
    "data": [
      {
        "format": "$#,#00.00",
        "x": 34,
        "y": 30,
        "z": 1705084.84,
      },
    ],
    "legendIndex": 7,
    "name": "Lea Forbes",
    "seriesIndex": 11,
  },
  {
    "color": "rgb(41,117,170)",
    "data": [
      {
        "format": "$#,#00.00",
        "x": 323,
        "y": 30,
        "z": 2345090.98,
      },
    ],
    "legendIndex": 8,
    "name": "Monique Babonas",
    "seriesIndex": 12,
  },
  {
    "color": "rgb(4,140,103)",
    "data": [
      {
        "format": "$#,#00.00",
        "x": 346,
        "y": 64,
        "z": 131675.42,
      },
    ],
    "legendIndex": 9,
    "name": "Paul Gomez",
    "seriesIndex": 13,
  },
  {
    "color": "rgb(181,60,51)",
    "data": [
      {
        "format": "$#,#00.00",
        "x": 457,
        "y": 88,
        "z": 1668600.86,
      },
    ],
    "legendIndex": 10,
    "name": "Paul Jacobs",
    "seriesIndex": 14,
  },
  {
    "color": "rgb(163,101,46)",
    "data": [
      {
        "format": "$#,#00.00",
        "x": 451,
        "y": 93,
        "z": 1649882.14,
      },
    ],
    "legendIndex": 11,
    "name": "Ravi Deetri",
    "seriesIndex": 15,
  },
  {
    "color": "rgb(140,57,132)",
    "data": [
      {
        "format": "$#,#00.00",
        "x": 232,
        "y": 70,
        "z": 1229206.9,
      },
    ],
    "legendIndex": 12,
    "name": "Thomas Gones",
    "seriesIndex": 16,
  },
  {
    "color": "rgb(136,219,244)",
    "data": [
      {
        "format": "$#,#00.00",
        "x": 311,
        "y": 71,
        "z": 457045.18,
      },
    ],
    "legendIndex": 13,
    "name": "Tom Stickler",
    "seriesIndex": 17,
  },
  {
    "color": "rgb(189,234,222)",
    "data": [
      {
        "format": "$#,#00.00",
        "x": 700,
        "y": 60,
        "z": 801178.61,
      },
    ],
    "legendIndex": 14,
    "name": "Trevor Deegan",
    "seriesIndex": 18,
  },
  {
    "color": "rgb(239,197,194)",
    "data": [
      {
        "format": "$#,#00.00",
        "x": 246,
        "y": 60,
        "z": 1065164.57,
      },
    ],
    "legendIndex": 15,
    "name": "Victor Crushetz",
    "seriesIndex": 19,
  },
]
`;

exports[`chartOptionsBuilder > outline chart fill > getSeries > in use case of treemap > with one measure and stack by attribute > should fill correct series data 1`] = `
[
  {
    "borderColor": "rgb(20,178,226)",
    "color": "rgb(232,247,252)",
    "format": "#,##0.00",
    "id": "0",
    "legendIndex": 0,
    "name": "Amount",
    "showInLegend": true,
  },
  {
    "color": "rgb(20,178,226)",
    "format": "#,##0.00",
    "name": "Direct Sales",
    "parent": "0",
    "showInLegend": false,
    "value": 80406324.96,
    "x": 0,
    "y": 0,
  },
  {
    "color": "rgb(114,209,238)",
    "format": "#,##0.00",
    "name": "Inside Sales",
    "parent": "0",
    "showInLegend": false,
    "value": 36219131.58,
    "x": 0,
    "y": 1,
  },
]
`;

exports[`chartOptionsBuilder > outline chart fill > getSeries > in use case of treemap > with one measure and view by attribute > should fill correct series data 1`] = `
[
  {
    "borderColor": "rgb(20,178,226)",
    "color": "rgb(232,247,252)",
    "format": "#,##0.00",
    "legendIndex": 0,
    "name": "Direct Sales",
    "value": 80406324.96,
  },
  {
    "borderColor": "rgb(0,193,141)",
    "color": "rgb(230,249,244)",
    "format": "#,##0.00",
    "legendIndex": 1,
    "name": "Inside Sales",
    "value": 36219131.58,
  },
]
`;

exports[`chartOptionsBuilder > outline chart fill > getSeries > in use case of treemap > with one measure, view by and stack by attribute > should fill correct series data 1`] = `6`;

exports[`chartOptionsBuilder > outline chart fill > getSeries > in use case of treemap > with only one measure > should fill correct series color 1`] = `"rgb(232,247,252)"`;

exports[`chartOptionsBuilder > outline chart fill > getSeries > in use case of treemap > with only one measure > should fill correct series data 1`] = `
{
  "borderColor": "rgb(20,178,226)",
  "color": "rgb(232,247,252)",
  "format": "#,##0.00",
  "legendIndex": 0,
  "name": "Amount",
  "value": 116625456.54,
}
`;

exports[`chartOptionsBuilder > outline chart fill > getSeries > in use case of treemap > with two measures and stack by attribute including client sorting > should fill correct series data 1`] = `6`;

exports[`chartOptionsBuilder > outline chart fill > getSeries > in usecase of bar chart with 3 measures and view by attribute > should fill correct series color 1`] = `
[
  "rgb(232,247,252)",
  "rgb(230,249,244)",
  "rgb(252,237,236)",
]
`;

exports[`chartOptionsBuilder > outline chart fill > getSeries > in usecase of bar chart with stack by and view by attributes > should fill correct series color 1`] = `
[
  "rgb(232,247,252)",
  "rgb(230,249,244)",
]
`;

exports[`chartOptionsBuilder > outline chart fill > getSeriesItemData > in usecase of pie chart and treemap with metrics only > should fill correct pointData color 1`] = `
[
  "rgb(232,247,252)",
  "rgb(230,249,244)",
  "rgb(252,237,236)",
]
`;

exports[`chartOptionsBuilder > outline chart fill > getSeriesItemData > in usecase of pie chart and treemap with metrics only > should fill correct pointData color 2`] = `
[
  "rgb(232,247,252)",
  "rgb(230,249,244)",
  "rgb(252,237,236)",
]
`;

exports[`chartOptionsBuilder > outline chart fill > getSeriesItemData > in usecase of pie chart with an attribute > should fill correct pointData color 1`] = `
[
  "rgb(232,247,252)",
  "rgb(230,249,244)",
]
`;

exports[`chartOptionsBuilder > outline chart fill > getSeriesItemData > in usecase of pie chart with an attribute > should fill correct pointData color 2`] = `
[
  "rgb(232,247,252)",
  "rgb(230,249,244)",
]
`;

exports[`chartOptionsBuilder > pattern chart fill > getChartOptions > Heatmap configuration > getChartOptions for heatmap > getHeatmapDataClasses > should return 7 data classes with valid color 1`] = `
[
  {
    "color": "rgb(212,246,255)",
    "from": 0,
    "to": 4.285714285714286,
  },
  {
    "color": "rgb(197,236,248)",
    "from": 4.285714285714286,
    "to": 8.571428571428571,
  },
  {
    "color": "rgb(138,217,241)",
    "from": 8.571428571428571,
    "to": 12.857142857142858,
  },
  {
    "color": "rgb(79,198,234)",
    "from": 12.857142857142858,
    "to": 17.142857142857142,
  },
  {
    "color": "rgb(20,178,226)",
    "from": 17.142857142857142,
    "to": 21.428571428571427,
  },
  {
    "color": "rgb(22,151,192)",
    "from": 21.428571428571427,
    "to": 25.71428571428571,
  },
  {
    "color": "rgb(0,110,145)",
    "from": 25.71428571428571,
    "to": 30,
  },
]
`;

exports[`chartOptionsBuilder > pattern chart fill > getChartOptions > Heatmap configuration > getChartOptions for heatmap > getHeatmapDataClasses > should return empty array when there are no values in series 1`] = `[]`;

exports[`chartOptionsBuilder > pattern chart fill > getChartOptions > Heatmap configuration > getChartOptions for heatmap > getHeatmapDataClasses > should return single dataClass when series have only one value 1`] = `
[
  {
    "color": "rgb(197,236,248)",
    "from": 10,
    "to": 10,
  },
]
`;

exports[`chartOptionsBuilder > pattern chart fill > getDrillableSeries > in usecase of bar chart with 3 measures and view by attribute > with first and last drillable measures > should assign correct drillIntersection to pointData with drilldown true 1`] = `
[
  [
    {
      "header": {
        "measureHeaderItem": {
          "format": "#,##0.00",
          "identifier": "af2Ewj9Re2vK",
          "localIdentifier": "lostMetric",
          "name": "<button>Lost</button> ...",
          "ref": {
            "uri": "/gdc/md/d20eyb3wfs0xe5l0lfscdnrnyhq1t42q/obj/1283",
          },
          "uri": "/gdc/md/d20eyb3wfs0xe5l0lfscdnrnyhq1t42q/obj/1283",
        },
      },
    },
    {
      "header": {
        "attributeHeader": {
          "formOf": {
            "identifier": "created",
            "name": "Year created",
            "ref": {
              "uri": "/gdc/md/d20eyb3wfs0xe5l0lfscdnrnyhq1t42q/obj/157",
            },
            "uri": "/gdc/md/d20eyb3wfs0xe5l0lfscdnrnyhq1t42q/obj/157",
          },
          "identifier": "created.aag81lMifn6q",
          "localIdentifier": "yearCreatedAttribute",
          "name": "Year (Created)",
          "ref": {
            "uri": "/gdc/md/d20eyb3wfs0xe5l0lfscdnrnyhq1t42q/obj/158",
          },
          "uri": "/gdc/md/d20eyb3wfs0xe5l0lfscdnrnyhq1t42q/obj/158",
        },
        "attributeHeaderItem": {
          "name": "<button>2008</button>",
          "uri": "/gdc/md/d20eyb3wfs0xe5l0lfscdnrnyhq1t42q/obj/158/elements?id=2008",
        },
      },
    },
  ],
  undefined,
  [
    {
      "header": {
        "measureHeaderItem": {
          "format": "#,##0.00",
          "identifier": "alUEwmBtbwSh",
          "localIdentifier": "expectedMetric",
          "name": "Expected",
          "ref": {
            "uri": "/gdc/md/d20eyb3wfs0xe5l0lfscdnrnyhq1t42q/obj/1285",
          },
          "uri": "/gdc/md/d20eyb3wfs0xe5l0lfscdnrnyhq1t42q/obj/1285",
        },
      },
    },
    {
      "header": {
        "attributeHeader": {
          "formOf": {
            "identifier": "created",
            "name": "Year created",
            "ref": {
              "uri": "/gdc/md/d20eyb3wfs0xe5l0lfscdnrnyhq1t42q/obj/157",
            },
            "uri": "/gdc/md/d20eyb3wfs0xe5l0lfscdnrnyhq1t42q/obj/157",
          },
          "identifier": "created.aag81lMifn6q",
          "localIdentifier": "yearCreatedAttribute",
          "name": "Year (Created)",
          "ref": {
            "uri": "/gdc/md/d20eyb3wfs0xe5l0lfscdnrnyhq1t42q/obj/158",
          },
          "uri": "/gdc/md/d20eyb3wfs0xe5l0lfscdnrnyhq1t42q/obj/158",
        },
        "attributeHeaderItem": {
          "name": "<button>2008</button>",
          "uri": "/gdc/md/d20eyb3wfs0xe5l0lfscdnrnyhq1t42q/obj/158/elements?id=2008",
        },
      },
    },
  ],
]
`;

exports[`chartOptionsBuilder > pattern chart fill > getDrillableSeries > in usecase of bar chart with stack by and view by attributes > should fill correct series color 1`] = `
[
  {
    "pattern": {
      "color": "rgb(20,178,226)",
      "height": 8,
      "opacity": 1,
      "path": {
        "d": "M4 0L8 4L4 8L0 4Z",
        "strokeWidth": 1,
      },
      "width": 8,
    },
  },
  {
    "pattern": {
      "color": "rgb(0,193,141)",
      "height": 4,
      "opacity": 1,
      "path": {
        "d": "M0 0H1V4H0Z",
        "strokeWidth": 1,
      },
      "width": 4,
    },
  },
]
`;

exports[`chartOptionsBuilder > pattern chart fill > getDrillableSeries > in usecase of bubble chart with 3 measures and attribute > should assign correct drillIntersection to pointData with drilldown true 1`] = `
{
  "drillIntersection": [
    {
      "header": {
        "measureHeaderItem": {
          "format": "#,##0.00",
          "identifier": "ab0bydLaaisS",
          "localIdentifier": "784a5018a51049078e8f7e86247e08a3",
          "name": "_Snapshot [EOP-2]",
          "ref": {
            "uri": "/gdc/md/hzyl5wlh8rnu0ixmbzlaqpzf09ttb7c8/obj/67097",
          },
          "uri": "/gdc/md/hzyl5wlh8rnu0ixmbzlaqpzf09ttb7c8/obj/67097",
        },
      },
    },
    {
      "header": {
        "measureHeaderItem": {
          "format": "#,##0",
          "identifier": "aaYh6Voua2yj",
          "localIdentifier": "9e5c3cd9a93f4476a93d3494cedc6010",
          "name": "# of Open Opps.",
          "ref": {
            "uri": "/gdc/md/hzyl5wlh8rnu0ixmbzlaqpzf09ttb7c8/obj/13465",
          },
          "uri": "/gdc/md/hzyl5wlh8rnu0ixmbzlaqpzf09ttb7c8/obj/13465",
        },
      },
    },
    {
      "header": {
        "measureHeaderItem": {
          "format": "$#,#00.00",
          "identifier": "ab4EFOAmhjOx",
          "localIdentifier": "71d50cf1d13746099b7f506576d78e4a",
          "name": "Remaining Quota",
          "ref": {
            "uri": "/gdc/md/hzyl5wlh8rnu0ixmbzlaqpzf09ttb7c8/obj/1543",
          },
          "uri": "/gdc/md/hzyl5wlh8rnu0ixmbzlaqpzf09ttb7c8/obj/1543",
        },
      },
    },
    {
      "header": {
        "attributeHeader": {
          "formOf": {
            "identifier": "attr.owner.id",
            "name": "Sales Rep",
            "ref": {
              "uri": "/gdc/md/hzyl5wlh8rnu0ixmbzlaqpzf09ttb7c8/obj/1025",
            },
            "uri": "/gdc/md/hzyl5wlh8rnu0ixmbzlaqpzf09ttb7c8/obj/1025",
          },
          "identifier": "label.owner.id.name",
          "localIdentifier": "49a659fbd7c541a69284769d53a2be7f",
          "name": "Owner Name",
          "ref": {
            "uri": "/gdc/md/hzyl5wlh8rnu0ixmbzlaqpzf09ttb7c8/obj/1028",
          },
          "uri": "/gdc/md/hzyl5wlh8rnu0ixmbzlaqpzf09ttb7c8/obj/1028",
        },
        "attributeHeaderItem": {
          "name": "Jessica Traven",
          "uri": "/gdc/md/hzyl5wlh8rnu0ixmbzlaqpzf09ttb7c8/obj/1025/elements?id=1235",
        },
      },
    },
  ],
  "drilldown": true,
  "format": "$#,#00.00",
  "x": 245,
  "y": 32,
  "z": 2280481.04,
}
`;

exports[`chartOptionsBuilder > pattern chart fill > getDrillableSeries > in usecase of scatter plot with 2 measures and attribute > should assign correct drillIntersection to pointData with drilldown true 1`] = `
[
  [
    {
      "header": {
        "measureHeaderItem": {
          "format": "#,##0.00",
          "identifier": "af2Ewj9Re2vK",
          "localIdentifier": "lostMetric",
          "name": "<button>Lost</button> ...",
          "ref": {
            "uri": "/gdc/md/d20eyb3wfs0xe5l0lfscdnrnyhq1t42q/obj/1283",
          },
          "uri": "/gdc/md/d20eyb3wfs0xe5l0lfscdnrnyhq1t42q/obj/1283",
        },
      },
    },
    {
      "header": {
        "measureHeaderItem": {
          "format": "#,##0.00",
          "identifier": "afSEwRwdbMeQ",
          "localIdentifier": "wonMetric",
          "name": "Won",
          "ref": {
            "uri": "/gdc/md/d20eyb3wfs0xe5l0lfscdnrnyhq1t42q/obj/1284",
          },
          "uri": "/gdc/md/d20eyb3wfs0xe5l0lfscdnrnyhq1t42q/obj/1284",
        },
      },
    },
    {
      "header": {
        "attributeHeader": {
          "formOf": {
            "identifier": "created",
            "name": "Year created",
            "ref": {
              "uri": "/gdc/md/d20eyb3wfs0xe5l0lfscdnrnyhq1t42q/obj/157",
            },
            "uri": "/gdc/md/d20eyb3wfs0xe5l0lfscdnrnyhq1t42q/obj/157",
          },
          "identifier": "created.aag81lMifn6q",
          "localIdentifier": "yearCreatedAttribute",
          "name": "Year (Created)",
          "ref": {
            "uri": "/gdc/md/d20eyb3wfs0xe5l0lfscdnrnyhq1t42q/obj/158",
          },
          "uri": "/gdc/md/d20eyb3wfs0xe5l0lfscdnrnyhq1t42q/obj/158",
        },
        "attributeHeaderItem": {
          "name": "<button>2008</button>",
          "uri": "/gdc/md/d20eyb3wfs0xe5l0lfscdnrnyhq1t42q/obj/158/elements?id=2008",
        },
      },
    },
  ],
]
`;

exports[`chartOptionsBuilder > pattern chart fill > getSeries > in use case of bubble > should fill X, Y and Z with valid values when measure buckets are not empty 1`] = `
[
  {
    "color": "rgb(20,178,226)",
    "data": [
      {
        "format": "$#,#00.00",
        "x": 0,
        "y": 33,
        "z": 2424413.8,
      },
    ],
    "legendIndex": 0,
    "name": "Adam Bradley",
    "seriesIndex": 0,
  },
  {
    "color": "rgb(0,193,141)",
    "data": [
      {
        "format": "$#,#00.00",
        "x": 0,
        "y": 29,
        "z": 1963436.86,
      },
    ],
    "legendIndex": 1,
    "name": "Alejandro Vabiano",
    "seriesIndex": 1,
  },
  {
    "color": "rgb(229,77,66)",
    "data": [
      {
        "format": "$#,#00.00",
        "x": 0,
        "y": 35,
        "z": 2100205.16,
      },
    ],
    "legendIndex": 2,
    "name": "Alexsandr Fyodr",
    "seriesIndex": 2,
  },
  {
    "color": "rgb(241,134,0)",
    "data": [
      {
        "format": "$#,#00.00",
        "x": 0,
        "y": 30,
        "z": 2364179.19,
      },
    ],
    "legendIndex": 3,
    "name": "Cory Owens",
    "seriesIndex": 3,
  },
  {
    "color": "rgb(171,85,163)",
    "data": [
      {
        "format": "$#,#00.00",
        "x": 0,
        "y": 30,
        "z": 1776567.88,
      },
    ],
    "legendIndex": 4,
    "name": "Dale Perdadtin",
    "seriesIndex": 4,
  },
  {
    "color": "rgb(244,213,33)",
    "data": [
      {
        "format": "$#,#00.00",
        "x": 0,
        "y": 35,
        "z": 2615259.07,
      },
    ],
    "legendIndex": 5,
    "name": "Dave Bostadt",
    "seriesIndex": 5,
  },
  {
    "color": "rgb(148,161,174)",
    "data": [
      {
        "format": "$#,#00.00",
        "x": 0,
        "y": 29,
        "z": 1471667.02,
      },
    ],
    "legendIndex": 6,
    "name": "Ellen Jones",
    "seriesIndex": 6,
  },
  {
    "color": "rgb(107,191,216)",
    "data": [
      {
        "format": "$#,#00.00",
        "x": 0,
        "y": 31,
        "z": 2161030.33,
      },
    ],
    "legendIndex": 7,
    "name": "Huey Jonas",
    "seriesIndex": 7,
  },
  {
    "color": "rgb(181,136,177)",
    "data": [
      {
        "format": "$#,#00.00",
        "x": 0,
        "y": 32,
        "z": 2280481.04,
      },
    ],
    "legendIndex": 8,
    "name": "Jessica Traven",
    "seriesIndex": 8,
  },
  {
    "color": "rgb(238,135,128)",
    "data": [
      {
        "format": "$#,#00.00",
        "x": 0,
        "y": 26,
        "z": 1769560.54,
      },
    ],
    "legendIndex": 9,
    "name": "John Jovi",
    "seriesIndex": 9,
  },
  {
    "color": "rgb(241,171,84)",
    "data": [
      {
        "format": "$#,#00.00",
        "x": 0,
        "y": 42,
        "z": 2346482.16,
      },
    ],
    "legendIndex": 10,
    "name": "Jon Jons",
    "seriesIndex": 10,
  },
  {
    "color": "rgb(133,209,188)",
    "data": [
      {
        "format": "$#,#00.00",
        "x": 0,
        "y": 30,
        "z": 1705084.84,
      },
    ],
    "legendIndex": 11,
    "name": "Lea Forbes",
    "seriesIndex": 11,
  },
  {
    "color": "rgb(41,117,170)",
    "data": [
      {
        "format": "$#,#00.00",
        "x": 0,
        "y": 30,
        "z": 2345090.98,
      },
    ],
    "legendIndex": 12,
    "name": "Monique Babonas",
    "seriesIndex": 12,
  },
  {
    "color": "rgb(4,140,103)",
    "data": [
      {
        "format": "$#,#00.00",
        "x": 0,
        "y": 64,
        "z": 131675.42,
      },
    ],
    "legendIndex": 13,
    "name": "Paul Gomez",
    "seriesIndex": 13,
  },
  {
    "color": "rgb(181,60,51)",
    "data": [
      {
        "format": "$#,#00.00",
        "x": 0,
        "y": 88,
        "z": 1668600.86,
      },
    ],
    "legendIndex": 14,
    "name": "Paul Jacobs",
    "seriesIndex": 14,
  },
  {
    "color": "rgb(163,101,46)",
    "data": [
      {
        "format": "$#,#00.00",
        "x": 0,
        "y": 93,
        "z": 1649882.14,
      },
    ],
    "legendIndex": 15,
    "name": "Ravi Deetri",
    "seriesIndex": 15,
  },
  {
    "color": "rgb(140,57,132)",
    "data": [
      {
        "format": "$#,#00.00",
        "x": 0,
        "y": 70,
        "z": 1229206.9,
      },
    ],
    "legendIndex": 16,
    "name": "Thomas Gones",
    "seriesIndex": 16,
  },
  {
    "color": "rgb(136,219,244)",
    "data": [
      {
        "format": "$#,#00.00",
        "x": 0,
        "y": 71,
        "z": 457045.18,
      },
    ],
    "legendIndex": 17,
    "name": "Tom Stickler",
    "seriesIndex": 17,
  },
  {
    "color": "rgb(189,234,222)",
    "data": [
      {
        "format": "$#,#00.00",
        "x": 0,
        "y": 60,
        "z": 801178.61,
      },
    ],
    "legendIndex": 18,
    "name": "Trevor Deegan",
    "seriesIndex": 18,
  },
  {
    "color": "rgb(239,197,194)",
    "data": [
      {
        "format": "$#,#00.00",
        "x": 0,
        "y": 60,
        "z": 1065164.57,
      },
    ],
    "legendIndex": 19,
    "name": "Victor Crushetz",
    "seriesIndex": 19,
  },
]
`;

exports[`chartOptionsBuilder > pattern chart fill > getSeries > in use case of bubble > should update seriesIndex correctly when one of X, Y or Z has null data 1`] = `
[
  {
    "color": "rgb(171,85,163)",
    "data": [
      {
        "format": "$#,#00.00",
        "x": 546,
        "y": 30,
        "z": 1776567.88,
      },
    ],
    "legendIndex": 0,
    "name": "Dale Perdadtin",
    "seriesIndex": 4,
  },
  {
    "color": "rgb(244,213,33)",
    "data": [
      {
        "format": "$#,#00.00",
        "x": 12,
        "y": 35,
        "z": 2615259.07,
      },
    ],
    "legendIndex": 1,
    "name": "Dave Bostadt",
    "seriesIndex": 5,
  },
  {
    "color": "rgb(148,161,174)",
    "data": [
      {
        "format": "$#,#00.00",
        "x": 199,
        "y": 29,
        "z": 1471667.02,
      },
    ],
    "legendIndex": 2,
    "name": "Ellen Jones",
    "seriesIndex": 6,
  },
  {
    "color": "rgb(107,191,216)",
    "data": [
      {
        "format": "$#,#00.00",
        "x": 475,
        "y": 31,
        "z": 2161030.33,
      },
    ],
    "legendIndex": 3,
    "name": "Huey Jonas",
    "seriesIndex": 7,
  },
  {
    "color": "rgb(181,136,177)",
    "data": [
      {
        "format": "$#,#00.00",
        "x": 245,
        "y": 32,
        "z": 2280481.04,
      },
    ],
    "legendIndex": 4,
    "name": "Jessica Traven",
    "seriesIndex": 8,
  },
  {
    "color": "rgb(238,135,128)",
    "data": [
      {
        "format": "$#,#00.00",
        "x": 347,
        "y": 26,
        "z": 1769560.54,
      },
    ],
    "legendIndex": 5,
    "name": "John Jovi",
    "seriesIndex": 9,
  },
  {
    "color": "rgb(241,171,84)",
    "data": [
      {
        "format": "$#,#00.00",
        "x": 345,
        "y": 42,
        "z": 2346482.16,
      },
    ],
    "legendIndex": 6,
    "name": "Jon Jons",
    "seriesIndex": 10,
  },
  {
    "color": "rgb(133,209,188)",
    "data": [
      {
        "format": "$#,#00.00",
        "x": 34,
        "y": 30,
        "z": 1705084.84,
      },
    ],
    "legendIndex": 7,
    "name": "Lea Forbes",
    "seriesIndex": 11,
  },
  {
    "color": "rgb(41,117,170)",
    "data": [
      {
        "format": "$#,#00.00",
        "x": 323,
        "y": 30,
        "z": 2345090.98,
      },
    ],
    "legendIndex": 8,
    "name": "Monique Babonas",
    "seriesIndex": 12,
  },
  {
    "color": "rgb(4,140,103)",
    "data": [
      {
        "format": "$#,#00.00",
        "x": 346,
        "y": 64,
        "z": 131675.42,
      },
    ],
    "legendIndex": 9,
    "name": "Paul Gomez",
    "seriesIndex": 13,
  },
  {
    "color": "rgb(181,60,51)",
    "data": [
      {
        "format": "$#,#00.00",
        "x": 457,
        "y": 88,
        "z": 1668600.86,
      },
    ],
    "legendIndex": 10,
    "name": "Paul Jacobs",
    "seriesIndex": 14,
  },
  {
    "color": "rgb(163,101,46)",
    "data": [
      {
        "format": "$#,#00.00",
        "x": 451,
        "y": 93,
        "z": 1649882.14,
      },
    ],
    "legendIndex": 11,
    "name": "Ravi Deetri",
    "seriesIndex": 15,
  },
  {
    "color": "rgb(140,57,132)",
    "data": [
      {
        "format": "$#,#00.00",
        "x": 232,
        "y": 70,
        "z": 1229206.9,
      },
    ],
    "legendIndex": 12,
    "name": "Thomas Gones",
    "seriesIndex": 16,
  },
  {
    "color": "rgb(136,219,244)",
    "data": [
      {
        "format": "$#,#00.00",
        "x": 311,
        "y": 71,
        "z": 457045.18,
      },
    ],
    "legendIndex": 13,
    "name": "Tom Stickler",
    "seriesIndex": 17,
  },
  {
    "color": "rgb(189,234,222)",
    "data": [
      {
        "format": "$#,#00.00",
        "x": 700,
        "y": 60,
        "z": 801178.61,
      },
    ],
    "legendIndex": 14,
    "name": "Trevor Deegan",
    "seriesIndex": 18,
  },
  {
    "color": "rgb(239,197,194)",
    "data": [
      {
        "format": "$#,#00.00",
        "x": 246,
        "y": 60,
        "z": 1065164.57,
      },
    ],
    "legendIndex": 15,
    "name": "Victor Crushetz",
    "seriesIndex": 19,
  },
]
`;

exports[`chartOptionsBuilder > pattern chart fill > getSeries > in use case of treemap > with one measure and stack by attribute > should fill correct series data 1`] = `
[
  {
    "borderColor": "rgb(20,178,226)",
    "color": {
      "pattern": {
        "color": "rgb(20,178,226)",
        "height": 8,
        "opacity": 1,
        "path": {
          "d": "M4 0L8 4L4 8L0 4Z",
          "strokeWidth": 1,
        },
        "width": 8,
      },
    },
    "format": "#,##0.00",
    "id": "0",
    "legendIndex": 0,
    "name": "Amount",
    "showInLegend": true,
  },
  {
    "color": "rgb(20,178,226)",
    "format": "#,##0.00",
    "name": "Direct Sales",
    "parent": "0",
    "showInLegend": false,
    "value": 80406324.96,
    "x": 0,
    "y": 0,
  },
  {
    "color": "rgb(114,209,238)",
    "format": "#,##0.00",
    "name": "Inside Sales",
    "parent": "0",
    "showInLegend": false,
    "value": 36219131.58,
    "x": 0,
    "y": 1,
  },
]
`;

exports[`chartOptionsBuilder > pattern chart fill > getSeries > in use case of treemap > with one measure and view by attribute > should fill correct series data 1`] = `
[
  {
    "borderColor": "rgb(20,178,226)",
    "color": {
      "pattern": {
        "color": "rgb(20,178,226)",
        "height": 8,
        "opacity": 1,
        "path": {
          "d": "M4 0L8 4L4 8L0 4Z",
          "strokeWidth": 1,
        },
        "width": 8,
      },
    },
    "format": "#,##0.00",
    "legendIndex": 0,
    "name": "Direct Sales",
    "value": 80406324.96,
  },
  {
    "borderColor": "rgb(0,193,141)",
    "color": {
      "pattern": {
        "color": "rgb(0,193,141)",
        "height": 4,
        "opacity": 1,
        "path": {
          "d": "M0 0H1V4H0Z",
          "strokeWidth": 1,
        },
        "width": 4,
      },
    },
    "format": "#,##0.00",
    "legendIndex": 1,
    "name": "Inside Sales",
    "value": 36219131.58,
  },
]
`;

exports[`chartOptionsBuilder > pattern chart fill > getSeries > in use case of treemap > with one measure, view by and stack by attribute > should fill correct series data 1`] = `6`;

exports[`chartOptionsBuilder > pattern chart fill > getSeries > in use case of treemap > with only one measure > should fill correct series color 1`] = `
{
  "pattern": {
    "color": "rgb(20,178,226)",
    "height": 8,
    "opacity": 1,
    "path": {
      "d": "M4 0L8 4L4 8L0 4Z",
      "strokeWidth": 1,
    },
    "width": 8,
  },
}
`;

exports[`chartOptionsBuilder > pattern chart fill > getSeries > in use case of treemap > with only one measure > should fill correct series data 1`] = `
{
  "borderColor": "rgb(20,178,226)",
  "color": {
    "pattern": {
      "color": "rgb(20,178,226)",
      "height": 8,
      "opacity": 1,
      "path": {
        "d": "M4 0L8 4L4 8L0 4Z",
        "strokeWidth": 1,
      },
      "width": 8,
    },
  },
  "format": "#,##0.00",
  "legendIndex": 0,
  "name": "Amount",
  "value": 116625456.54,
}
`;

exports[`chartOptionsBuilder > pattern chart fill > getSeries > in use case of treemap > with two measures and stack by attribute including client sorting > should fill correct series data 1`] = `6`;

exports[`chartOptionsBuilder > pattern chart fill > getSeries > in usecase of bar chart with 3 measures and view by attribute > should fill correct series color 1`] = `
[
  {
    "pattern": {
      "color": "rgb(20,178,226)",
      "height": 8,
      "opacity": 1,
      "path": {
        "d": "M4 0L8 4L4 8L0 4Z",
        "strokeWidth": 1,
      },
      "width": 8,
    },
  },
  {
    "pattern": {
      "color": "rgb(0,193,141)",
      "height": 4,
      "opacity": 1,
      "path": {
        "d": "M0 0H1V4H0Z",
        "strokeWidth": 1,
      },
      "width": 4,
    },
  },
  {
    "pattern": {
      "color": "rgb(229,77,66)",
      "height": 4,
      "opacity": 1,
      "path": {
        "d": "M0 0H4V4H0Z",
        "strokeWidth": 1,
      },
      "width": 4,
    },
  },
]
`;

exports[`chartOptionsBuilder > pattern chart fill > getSeries > in usecase of bar chart with stack by and view by attributes > should fill correct series color 1`] = `
[
  {
    "pattern": {
      "color": "rgb(20,178,226)",
      "height": 8,
      "opacity": 1,
      "path": {
        "d": "M4 0L8 4L4 8L0 4Z",
        "strokeWidth": 1,
      },
      "width": 8,
    },
  },
  {
    "pattern": {
      "color": "rgb(0,193,141)",
      "height": 4,
      "opacity": 1,
      "path": {
        "d": "M0 0H1V4H0Z",
        "strokeWidth": 1,
      },
      "width": 4,
    },
  },
]
`;

exports[`chartOptionsBuilder > pattern chart fill > getSeriesItemData > in usecase of pie chart and treemap with metrics only > should fill correct pointData color 1`] = `
[
  {
    "pattern": {
      "color": "rgb(20,178,226)",
      "height": 8,
      "opacity": 1,
      "path": {
        "d": "M4 0L8 4L4 8L0 4Z",
        "strokeWidth": 1,
      },
      "width": 8,
    },
  },
  {
    "pattern": {
      "color": "rgb(0,193,141)",
      "height": 4,
      "opacity": 1,
      "path": {
        "d": "M0 0H1V4H0Z",
        "strokeWidth": 1,
      },
      "width": 4,
    },
  },
  {
    "pattern": {
      "color": "rgb(229,77,66)",
      "height": 4,
      "opacity": 1,
      "path": {
        "d": "M0 0H4V4H0Z",
        "strokeWidth": 1,
      },
      "width": 4,
    },
  },
]
`;

exports[`chartOptionsBuilder > pattern chart fill > getSeriesItemData > in usecase of pie chart and treemap with metrics only > should fill correct pointData color 2`] = `
[
  {
    "pattern": {
      "color": "rgb(20,178,226)",
      "height": 8,
      "opacity": 1,
      "path": {
        "d": "M4 0L8 4L4 8L0 4Z",
        "strokeWidth": 1,
      },
      "width": 8,
    },
  },
  {
    "pattern": {
      "color": "rgb(0,193,141)",
      "height": 4,
      "opacity": 1,
      "path": {
        "d": "M0 0H1V4H0Z",
        "strokeWidth": 1,
      },
      "width": 4,
    },
  },
  {
    "pattern": {
      "color": "rgb(229,77,66)",
      "height": 4,
      "opacity": 1,
      "path": {
        "d": "M0 0H4V4H0Z",
        "strokeWidth": 1,
      },
      "width": 4,
    },
  },
]
`;

exports[`chartOptionsBuilder > pattern chart fill > getSeriesItemData > in usecase of pie chart with an attribute > should fill correct pointData color 1`] = `
[
  {
    "pattern": {
      "color": "rgb(20,178,226)",
      "height": 8,
      "opacity": 1,
      "path": {
        "d": "M4 0L8 4L4 8L0 4Z",
        "strokeWidth": 1,
      },
      "width": 8,
    },
  },
  {
    "pattern": {
      "color": "rgb(0,193,141)",
      "height": 4,
      "opacity": 1,
      "path": {
        "d": "M0 0H1V4H0Z",
        "strokeWidth": 1,
      },
      "width": 4,
    },
  },
]
`;

exports[`chartOptionsBuilder > pattern chart fill > getSeriesItemData > in usecase of pie chart with an attribute > should fill correct pointData color 2`] = `
[
  {
    "pattern": {
      "color": "rgb(20,178,226)",
      "height": 8,
      "opacity": 1,
      "path": {
        "d": "M4 0L8 4L4 8L0 4Z",
        "strokeWidth": 1,
      },
      "width": 8,
    },
  },
  {
    "pattern": {
      "color": "rgb(0,193,141)",
      "height": 4,
      "opacity": 1,
      "path": {
        "d": "M0 0H1V4H0Z",
        "strokeWidth": 1,
      },
      "width": 4,
    },
  },
]
`;

exports[`chartOptionsBuilder > solid chart fill > getChartOptions > Heatmap configuration > getChartOptions for heatmap > getHeatmapDataClasses > should return 7 data classes with valid color 1`] = `
[
  {
    "color": "rgb(212,246,255)",
    "from": 0,
    "to": 4.285714285714286,
  },
  {
    "color": "rgb(197,236,248)",
    "from": 4.285714285714286,
    "to": 8.571428571428571,
  },
  {
    "color": "rgb(138,217,241)",
    "from": 8.571428571428571,
    "to": 12.857142857142858,
  },
  {
    "color": "rgb(79,198,234)",
    "from": 12.857142857142858,
    "to": 17.142857142857142,
  },
  {
    "color": "rgb(20,178,226)",
    "from": 17.142857142857142,
    "to": 21.428571428571427,
  },
  {
    "color": "rgb(22,151,192)",
    "from": 21.428571428571427,
    "to": 25.71428571428571,
  },
  {
    "color": "rgb(0,110,145)",
    "from": 25.71428571428571,
    "to": 30,
  },
]
`;

exports[`chartOptionsBuilder > solid chart fill > getChartOptions > Heatmap configuration > getChartOptions for heatmap > getHeatmapDataClasses > should return empty array when there are no values in series 1`] = `[]`;

exports[`chartOptionsBuilder > solid chart fill > getChartOptions > Heatmap configuration > getChartOptions for heatmap > getHeatmapDataClasses > should return single dataClass when series have only one value 1`] = `
[
  {
    "color": "rgb(197,236,248)",
    "from": 10,
    "to": 10,
  },
]
`;

exports[`chartOptionsBuilder > solid chart fill > getDrillableSeries > in usecase of bar chart with 3 measures and view by attribute > with first and last drillable measures > should assign correct drillIntersection to pointData with drilldown true 1`] = `
[
  [
    {
      "header": {
        "measureHeaderItem": {
          "format": "#,##0.00",
          "identifier": "af2Ewj9Re2vK",
          "localIdentifier": "lostMetric",
          "name": "<button>Lost</button> ...",
          "ref": {
            "uri": "/gdc/md/d20eyb3wfs0xe5l0lfscdnrnyhq1t42q/obj/1283",
          },
          "uri": "/gdc/md/d20eyb3wfs0xe5l0lfscdnrnyhq1t42q/obj/1283",
        },
      },
    },
    {
      "header": {
        "attributeHeader": {
          "formOf": {
            "identifier": "created",
            "name": "Year created",
            "ref": {
              "uri": "/gdc/md/d20eyb3wfs0xe5l0lfscdnrnyhq1t42q/obj/157",
            },
            "uri": "/gdc/md/d20eyb3wfs0xe5l0lfscdnrnyhq1t42q/obj/157",
          },
          "identifier": "created.aag81lMifn6q",
          "localIdentifier": "yearCreatedAttribute",
          "name": "Year (Created)",
          "ref": {
            "uri": "/gdc/md/d20eyb3wfs0xe5l0lfscdnrnyhq1t42q/obj/158",
          },
          "uri": "/gdc/md/d20eyb3wfs0xe5l0lfscdnrnyhq1t42q/obj/158",
        },
        "attributeHeaderItem": {
          "name": "<button>2008</button>",
          "uri": "/gdc/md/d20eyb3wfs0xe5l0lfscdnrnyhq1t42q/obj/158/elements?id=2008",
        },
      },
    },
  ],
  undefined,
  [
    {
      "header": {
        "measureHeaderItem": {
          "format": "#,##0.00",
          "identifier": "alUEwmBtbwSh",
          "localIdentifier": "expectedMetric",
          "name": "Expected",
          "ref": {
            "uri": "/gdc/md/d20eyb3wfs0xe5l0lfscdnrnyhq1t42q/obj/1285",
          },
          "uri": "/gdc/md/d20eyb3wfs0xe5l0lfscdnrnyhq1t42q/obj/1285",
        },
      },
    },
    {
      "header": {
        "attributeHeader": {
          "formOf": {
            "identifier": "created",
            "name": "Year created",
            "ref": {
              "uri": "/gdc/md/d20eyb3wfs0xe5l0lfscdnrnyhq1t42q/obj/157",
            },
            "uri": "/gdc/md/d20eyb3wfs0xe5l0lfscdnrnyhq1t42q/obj/157",
          },
          "identifier": "created.aag81lMifn6q",
          "localIdentifier": "yearCreatedAttribute",
          "name": "Year (Created)",
          "ref": {
            "uri": "/gdc/md/d20eyb3wfs0xe5l0lfscdnrnyhq1t42q/obj/158",
          },
          "uri": "/gdc/md/d20eyb3wfs0xe5l0lfscdnrnyhq1t42q/obj/158",
        },
        "attributeHeaderItem": {
          "name": "<button>2008</button>",
          "uri": "/gdc/md/d20eyb3wfs0xe5l0lfscdnrnyhq1t42q/obj/158/elements?id=2008",
        },
      },
    },
  ],
]
`;

exports[`chartOptionsBuilder > solid chart fill > getDrillableSeries > in usecase of bar chart with stack by and view by attributes > should fill correct series color 1`] = `
[
  "rgb(20,178,226)",
  "rgb(0,193,141)",
]
`;

exports[`chartOptionsBuilder > solid chart fill > getDrillableSeries > in usecase of bubble chart with 3 measures and attribute > should assign correct drillIntersection to pointData with drilldown true 1`] = `
{
  "drillIntersection": [
    {
      "header": {
        "measureHeaderItem": {
          "format": "#,##0.00",
          "identifier": "ab0bydLaaisS",
          "localIdentifier": "784a5018a51049078e8f7e86247e08a3",
          "name": "_Snapshot [EOP-2]",
          "ref": {
            "uri": "/gdc/md/hzyl5wlh8rnu0ixmbzlaqpzf09ttb7c8/obj/67097",
          },
          "uri": "/gdc/md/hzyl5wlh8rnu0ixmbzlaqpzf09ttb7c8/obj/67097",
        },
      },
    },
    {
      "header": {
        "measureHeaderItem": {
          "format": "#,##0",
          "identifier": "aaYh6Voua2yj",
          "localIdentifier": "9e5c3cd9a93f4476a93d3494cedc6010",
          "name": "# of Open Opps.",
          "ref": {
            "uri": "/gdc/md/hzyl5wlh8rnu0ixmbzlaqpzf09ttb7c8/obj/13465",
          },
          "uri": "/gdc/md/hzyl5wlh8rnu0ixmbzlaqpzf09ttb7c8/obj/13465",
        },
      },
    },
    {
      "header": {
        "measureHeaderItem": {
          "format": "$#,#00.00",
          "identifier": "ab4EFOAmhjOx",
          "localIdentifier": "71d50cf1d13746099b7f506576d78e4a",
          "name": "Remaining Quota",
          "ref": {
            "uri": "/gdc/md/hzyl5wlh8rnu0ixmbzlaqpzf09ttb7c8/obj/1543",
          },
          "uri": "/gdc/md/hzyl5wlh8rnu0ixmbzlaqpzf09ttb7c8/obj/1543",
        },
      },
    },
    {
      "header": {
        "attributeHeader": {
          "formOf": {
            "identifier": "attr.owner.id",
            "name": "Sales Rep",
            "ref": {
              "uri": "/gdc/md/hzyl5wlh8rnu0ixmbzlaqpzf09ttb7c8/obj/1025",
            },
            "uri": "/gdc/md/hzyl5wlh8rnu0ixmbzlaqpzf09ttb7c8/obj/1025",
          },
          "identifier": "label.owner.id.name",
          "localIdentifier": "49a659fbd7c541a69284769d53a2be7f",
          "name": "Owner Name",
          "ref": {
            "uri": "/gdc/md/hzyl5wlh8rnu0ixmbzlaqpzf09ttb7c8/obj/1028",
          },
          "uri": "/gdc/md/hzyl5wlh8rnu0ixmbzlaqpzf09ttb7c8/obj/1028",
        },
        "attributeHeaderItem": {
          "name": "Jessica Traven",
          "uri": "/gdc/md/hzyl5wlh8rnu0ixmbzlaqpzf09ttb7c8/obj/1025/elements?id=1235",
        },
      },
    },
  ],
  "drilldown": true,
  "format": "$#,#00.00",
  "x": 245,
  "y": 32,
  "z": 2280481.04,
}
`;

exports[`chartOptionsBuilder > solid chart fill > getDrillableSeries > in usecase of scatter plot with 2 measures and attribute > should assign correct drillIntersection to pointData with drilldown true 1`] = `
[
  [
    {
      "header": {
        "measureHeaderItem": {
          "format": "#,##0.00",
          "identifier": "af2Ewj9Re2vK",
          "localIdentifier": "lostMetric",
          "name": "<button>Lost</button> ...",
          "ref": {
            "uri": "/gdc/md/d20eyb3wfs0xe5l0lfscdnrnyhq1t42q/obj/1283",
          },
          "uri": "/gdc/md/d20eyb3wfs0xe5l0lfscdnrnyhq1t42q/obj/1283",
        },
      },
    },
    {
      "header": {
        "measureHeaderItem": {
          "format": "#,##0.00",
          "identifier": "afSEwRwdbMeQ",
          "localIdentifier": "wonMetric",
          "name": "Won",
          "ref": {
            "uri": "/gdc/md/d20eyb3wfs0xe5l0lfscdnrnyhq1t42q/obj/1284",
          },
          "uri": "/gdc/md/d20eyb3wfs0xe5l0lfscdnrnyhq1t42q/obj/1284",
        },
      },
    },
    {
      "header": {
        "attributeHeader": {
          "formOf": {
            "identifier": "created",
            "name": "Year created",
            "ref": {
              "uri": "/gdc/md/d20eyb3wfs0xe5l0lfscdnrnyhq1t42q/obj/157",
            },
            "uri": "/gdc/md/d20eyb3wfs0xe5l0lfscdnrnyhq1t42q/obj/157",
          },
          "identifier": "created.aag81lMifn6q",
          "localIdentifier": "yearCreatedAttribute",
          "name": "Year (Created)",
          "ref": {
            "uri": "/gdc/md/d20eyb3wfs0xe5l0lfscdnrnyhq1t42q/obj/158",
          },
          "uri": "/gdc/md/d20eyb3wfs0xe5l0lfscdnrnyhq1t42q/obj/158",
        },
        "attributeHeaderItem": {
          "name": "<button>2008</button>",
          "uri": "/gdc/md/d20eyb3wfs0xe5l0lfscdnrnyhq1t42q/obj/158/elements?id=2008",
        },
      },
    },
  ],
]
`;

exports[`chartOptionsBuilder > solid chart fill > getSeries > in use case of bubble > should fill X, Y and Z with valid values when measure buckets are not empty 1`] = `
[
  {
    "color": "rgb(20,178,226)",
    "data": [
      {
        "format": "$#,#00.00",
        "x": 0,
        "y": 33,
        "z": 2424413.8,
      },
    ],
    "legendIndex": 0,
    "name": "Adam Bradley",
    "seriesIndex": 0,
  },
  {
    "color": "rgb(0,193,141)",
    "data": [
      {
        "format": "$#,#00.00",
        "x": 0,
        "y": 29,
        "z": 1963436.86,
      },
    ],
    "legendIndex": 1,
    "name": "Alejandro Vabiano",
    "seriesIndex": 1,
  },
  {
    "color": "rgb(229,77,66)",
    "data": [
      {
        "format": "$#,#00.00",
        "x": 0,
        "y": 35,
        "z": 2100205.16,
      },
    ],
    "legendIndex": 2,
    "name": "Alexsandr Fyodr",
    "seriesIndex": 2,
  },
  {
    "color": "rgb(241,134,0)",
    "data": [
      {
        "format": "$#,#00.00",
        "x": 0,
        "y": 30,
        "z": 2364179.19,
      },
    ],
    "legendIndex": 3,
    "name": "Cory Owens",
    "seriesIndex": 3,
  },
  {
    "color": "rgb(171,85,163)",
    "data": [
      {
        "format": "$#,#00.00",
        "x": 0,
        "y": 30,
        "z": 1776567.88,
      },
    ],
    "legendIndex": 4,
    "name": "Dale Perdadtin",
    "seriesIndex": 4,
  },
  {
    "color": "rgb(244,213,33)",
    "data": [
      {
        "format": "$#,#00.00",
        "x": 0,
        "y": 35,
        "z": 2615259.07,
      },
    ],
    "legendIndex": 5,
    "name": "Dave Bostadt",
    "seriesIndex": 5,
  },
  {
    "color": "rgb(148,161,174)",
    "data": [
      {
        "format": "$#,#00.00",
        "x": 0,
        "y": 29,
        "z": 1471667.02,
      },
    ],
    "legendIndex": 6,
    "name": "Ellen Jones",
    "seriesIndex": 6,
  },
  {
    "color": "rgb(107,191,216)",
    "data": [
      {
        "format": "$#,#00.00",
        "x": 0,
        "y": 31,
        "z": 2161030.33,
      },
    ],
    "legendIndex": 7,
    "name": "Huey Jonas",
    "seriesIndex": 7,
  },
  {
    "color": "rgb(181,136,177)",
    "data": [
      {
        "format": "$#,#00.00",
        "x": 0,
        "y": 32,
        "z": 2280481.04,
      },
    ],
    "legendIndex": 8,
    "name": "Jessica Traven",
    "seriesIndex": 8,
  },
  {
    "color": "rgb(238,135,128)",
    "data": [
      {
        "format": "$#,#00.00",
        "x": 0,
        "y": 26,
        "z": 1769560.54,
      },
    ],
    "legendIndex": 9,
    "name": "John Jovi",
    "seriesIndex": 9,
  },
  {
    "color": "rgb(241,171,84)",
    "data": [
      {
        "format": "$#,#00.00",
        "x": 0,
        "y": 42,
        "z": 2346482.16,
      },
    ],
    "legendIndex": 10,
    "name": "Jon Jons",
    "seriesIndex": 10,
  },
  {
    "color": "rgb(133,209,188)",
    "data": [
      {
        "format": "$#,#00.00",
        "x": 0,
        "y": 30,
        "z": 1705084.84,
      },
    ],
    "legendIndex": 11,
    "name": "Lea Forbes",
    "seriesIndex": 11,
  },
  {
    "color": "rgb(41,117,170)",
    "data": [
      {
        "format": "$#,#00.00",
        "x": 0,
        "y": 30,
        "z": 2345090.98,
      },
    ],
    "legendIndex": 12,
    "name": "Monique Babonas",
    "seriesIndex": 12,
  },
  {
    "color": "rgb(4,140,103)",
    "data": [
      {
        "format": "$#,#00.00",
        "x": 0,
        "y": 64,
        "z": 131675.42,
      },
    ],
    "legendIndex": 13,
    "name": "Paul Gomez",
    "seriesIndex": 13,
  },
  {
    "color": "rgb(181,60,51)",
    "data": [
      {
        "format": "$#,#00.00",
        "x": 0,
        "y": 88,
        "z": 1668600.86,
      },
    ],
    "legendIndex": 14,
    "name": "Paul Jacobs",
    "seriesIndex": 14,
  },
  {
    "color": "rgb(163,101,46)",
    "data": [
      {
        "format": "$#,#00.00",
        "x": 0,
        "y": 93,
        "z": 1649882.14,
      },
    ],
    "legendIndex": 15,
    "name": "Ravi Deetri",
    "seriesIndex": 15,
  },
  {
    "color": "rgb(140,57,132)",
    "data": [
      {
        "format": "$#,#00.00",
        "x": 0,
        "y": 70,
        "z": 1229206.9,
      },
    ],
    "legendIndex": 16,
    "name": "Thomas Gones",
    "seriesIndex": 16,
  },
  {
    "color": "rgb(136,219,244)",
    "data": [
      {
        "format": "$#,#00.00",
        "x": 0,
        "y": 71,
        "z": 457045.18,
      },
    ],
    "legendIndex": 17,
    "name": "Tom Stickler",
    "seriesIndex": 17,
  },
  {
    "color": "rgb(189,234,222)",
    "data": [
      {
        "format": "$#,#00.00",
        "x": 0,
        "y": 60,
        "z": 801178.61,
      },
    ],
    "legendIndex": 18,
    "name": "Trevor Deegan",
    "seriesIndex": 18,
  },
  {
    "color": "rgb(239,197,194)",
    "data": [
      {
        "format": "$#,#00.00",
        "x": 0,
        "y": 60,
        "z": 1065164.57,
      },
    ],
    "legendIndex": 19,
    "name": "Victor Crushetz",
    "seriesIndex": 19,
  },
]
`;

exports[`chartOptionsBuilder > solid chart fill > getSeries > in use case of bubble > should update seriesIndex correctly when one of X, Y or Z has null data 1`] = `
[
  {
    "color": "rgb(171,85,163)",
    "data": [
      {
        "format": "$#,#00.00",
        "x": 546,
        "y": 30,
        "z": 1776567.88,
      },
    ],
    "legendIndex": 0,
    "name": "Dale Perdadtin",
    "seriesIndex": 4,
  },
  {
    "color": "rgb(244,213,33)",
    "data": [
      {
        "format": "$#,#00.00",
        "x": 12,
        "y": 35,
        "z": 2615259.07,
      },
    ],
    "legendIndex": 1,
    "name": "Dave Bostadt",
    "seriesIndex": 5,
  },
  {
    "color": "rgb(148,161,174)",
    "data": [
      {
        "format": "$#,#00.00",
        "x": 199,
        "y": 29,
        "z": 1471667.02,
      },
    ],
    "legendIndex": 2,
    "name": "Ellen Jones",
    "seriesIndex": 6,
  },
  {
    "color": "rgb(107,191,216)",
    "data": [
      {
        "format": "$#,#00.00",
        "x": 475,
        "y": 31,
        "z": 2161030.33,
      },
    ],
    "legendIndex": 3,
    "name": "Huey Jonas",
    "seriesIndex": 7,
  },
  {
    "color": "rgb(181,136,177)",
    "data": [
      {
        "format": "$#,#00.00",
        "x": 245,
        "y": 32,
        "z": 2280481.04,
      },
    ],
    "legendIndex": 4,
    "name": "Jessica Traven",
    "seriesIndex": 8,
  },
  {
    "color": "rgb(238,135,128)",
    "data": [
      {
        "format": "$#,#00.00",
        "x": 347,
        "y": 26,
        "z": 1769560.54,
      },
    ],
    "legendIndex": 5,
    "name": "John Jovi",
    "seriesIndex": 9,
  },
  {
    "color": "rgb(241,171,84)",
    "data": [
      {
        "format": "$#,#00.00",
        "x": 345,
        "y": 42,
        "z": 2346482.16,
      },
    ],
    "legendIndex": 6,
    "name": "Jon Jons",
    "seriesIndex": 10,
  },
  {
    "color": "rgb(133,209,188)",
    "data": [
      {
        "format": "$#,#00.00",
        "x": 34,
        "y": 30,
        "z": 1705084.84,
      },
    ],
    "legendIndex": 7,
    "name": "Lea Forbes",
    "seriesIndex": 11,
  },
  {
    "color": "rgb(41,117,170)",
    "data": [
      {
        "format": "$#,#00.00",
        "x": 323,
        "y": 30,
        "z": 2345090.98,
      },
    ],
    "legendIndex": 8,
    "name": "Monique Babonas",
    "seriesIndex": 12,
  },
  {
    "color": "rgb(4,140,103)",
    "data": [
      {
        "format": "$#,#00.00",
        "x": 346,
        "y": 64,
        "z": 131675.42,
      },
    ],
    "legendIndex": 9,
    "name": "Paul Gomez",
    "seriesIndex": 13,
  },
  {
    "color": "rgb(181,60,51)",
    "data": [
      {
        "format": "$#,#00.00",
        "x": 457,
        "y": 88,
        "z": 1668600.86,
      },
    ],
    "legendIndex": 10,
    "name": "Paul Jacobs",
    "seriesIndex": 14,
  },
  {
    "color": "rgb(163,101,46)",
    "data": [
      {
        "format": "$#,#00.00",
        "x": 451,
        "y": 93,
        "z": 1649882.14,
      },
    ],
    "legendIndex": 11,
    "name": "Ravi Deetri",
    "seriesIndex": 15,
  },
  {
    "color": "rgb(140,57,132)",
    "data": [
      {
        "format": "$#,#00.00",
        "x": 232,
        "y": 70,
        "z": 1229206.9,
      },
    ],
    "legendIndex": 12,
    "name": "Thomas Gones",
    "seriesIndex": 16,
  },
  {
    "color": "rgb(136,219,244)",
    "data": [
      {
        "format": "$#,#00.00",
        "x": 311,
        "y": 71,
        "z": 457045.18,
      },
    ],
    "legendIndex": 13,
    "name": "Tom Stickler",
    "seriesIndex": 17,
  },
  {
    "color": "rgb(189,234,222)",
    "data": [
      {
        "format": "$#,#00.00",
        "x": 700,
        "y": 60,
        "z": 801178.61,
      },
    ],
    "legendIndex": 14,
    "name": "Trevor Deegan",
    "seriesIndex": 18,
  },
  {
    "color": "rgb(239,197,194)",
    "data": [
      {
        "format": "$#,#00.00",
        "x": 246,
        "y": 60,
        "z": 1065164.57,
      },
    ],
    "legendIndex": 15,
    "name": "Victor Crushetz",
    "seriesIndex": 19,
  },
]
`;

exports[`chartOptionsBuilder > solid chart fill > getSeries > in use case of treemap > with one measure and stack by attribute > should fill correct series data 1`] = `
[
  {
    "color": "rgb(20,178,226)",
    "format": "#,##0.00",
    "id": "0",
    "legendIndex": 0,
    "name": "Amount",
    "showInLegend": true,
  },
  {
    "color": "rgb(20,178,226)",
    "format": "#,##0.00",
    "name": "Direct Sales",
    "parent": "0",
    "showInLegend": false,
    "value": 80406324.96,
    "x": 0,
    "y": 0,
  },
  {
    "color": "rgb(114,209,238)",
    "format": "#,##0.00",
    "name": "Inside Sales",
    "parent": "0",
    "showInLegend": false,
    "value": 36219131.58,
    "x": 0,
    "y": 1,
  },
]
`;

exports[`chartOptionsBuilder > solid chart fill > getSeries > in use case of treemap > with one measure and view by attribute > should fill correct series data 1`] = `
[
  {
    "borderColor": undefined,
    "color": "rgb(20,178,226)",
    "format": "#,##0.00",
    "legendIndex": 0,
    "name": "Direct Sales",
    "value": 80406324.96,
  },
  {
    "borderColor": undefined,
    "color": "rgb(0,193,141)",
    "format": "#,##0.00",
    "legendIndex": 1,
    "name": "Inside Sales",
    "value": 36219131.58,
  },
]
`;

exports[`chartOptionsBuilder > solid chart fill > getSeries > in use case of treemap > with one measure, view by and stack by attribute > should fill correct series data 1`] = `6`;

exports[`chartOptionsBuilder > solid chart fill > getSeries > in use case of treemap > with only one measure > should fill correct series color 1`] = `"rgb(20,178,226)"`;

exports[`chartOptionsBuilder > solid chart fill > getSeries > in use case of treemap > with only one measure > should fill correct series data 1`] = `
{
  "borderColor": undefined,
  "color": "rgb(20,178,226)",
  "format": "#,##0.00",
  "legendIndex": 0,
  "name": "Amount",
  "value": 116625456.54,
}
`;

exports[`chartOptionsBuilder > solid chart fill > getSeries > in use case of treemap > with two measures and stack by attribute including client sorting > should fill correct series data 1`] = `6`;

exports[`chartOptionsBuilder > solid chart fill > getSeries > in usecase of bar chart with 3 measures and view by attribute > should fill correct series color 1`] = `
[
  "rgb(20,178,226)",
  "rgb(0,193,141)",
  "rgb(229,77,66)",
]
`;

exports[`chartOptionsBuilder > solid chart fill > getSeries > in usecase of bar chart with stack by and view by attributes > should fill correct series color 1`] = `
[
  "rgb(20,178,226)",
  "rgb(0,193,141)",
]
`;

exports[`chartOptionsBuilder > solid chart fill > getSeriesItemData > in usecase of pie chart and treemap with metrics only > should fill correct pointData color 1`] = `
[
  "rgb(20,178,226)",
  "rgb(0,193,141)",
  "rgb(229,77,66)",
]
`;

exports[`chartOptionsBuilder > solid chart fill > getSeriesItemData > in usecase of pie chart and treemap with metrics only > should fill correct pointData color 2`] = `
[
  "rgb(20,178,226)",
  "rgb(0,193,141)",
  "rgb(229,77,66)",
]
`;

exports[`chartOptionsBuilder > solid chart fill > getSeriesItemData > in usecase of pie chart with an attribute > should fill correct pointData color 1`] = `
[
  "rgb(20,178,226)",
  "rgb(0,193,141)",
]
`;

exports[`chartOptionsBuilder > solid chart fill > getSeriesItemData > in usecase of pie chart with an attribute > should fill correct pointData color 2`] = `
[
  "rgb(20,178,226)",
  "rgb(0,193,141)",
]
`;
