// (C) 2024 GoodData Corporation
import isEqual from "lodash/isEqual.js";
import capitalize from "lodash/capitalize.js";
import { allThemeCssVariables } from "../allThemeCssVariables.js";

function getThemingSectionSeparator(separator: string) {
    return `\n    // ${capitalize(separator)}`;
}

/**
 * Generates default SCSS theme file content.
 *
 * @internal
 */
export function generateDefaultScssThemeContent() {
    const collectedLines: string[] = [];
    let lastVariableType = null;
    let lastVariableThemePath = null;

    for (const variableSpecification of allThemeCssVariables) {
        // Add comments to separate theming sections
        if (lastVariableType !== variableSpecification.type || variableSpecification.type === "theme") {
            // Remove theming section if is empty
            if (
                collectedLines[collectedLines.length - 1] ===
                getThemingSectionSeparator(lastVariableThemePath)
            ) {
                collectedLines.pop();
            }
            lastVariableType = variableSpecification.type;

            // Separate theme variables by their first theme path (eg palette, dashboard, chart, etc.)
            if (variableSpecification.type === "theme") {
                if (!isEqual(lastVariableThemePath, variableSpecification.themePath[0])) {
                    lastVariableThemePath = variableSpecification.themePath[0];
                    collectedLines.push(getThemingSectionSeparator(lastVariableThemePath));
                }
            } else if (
                variableSpecification.type === "derived" ||
                variableSpecification.type === "internal"
            ) {
                // Derived or internal variables are separated just by their type
                collectedLines.push(getThemingSectionSeparator(lastVariableType));
            }
        }

        const isThemeSpecToInclude =
            variableSpecification.type === "theme" ||
            variableSpecification.type === "derived" ||
            variableSpecification.type === "internal";

        // Variable should be included in default theme only if it has set default value, and is theme, derived or internal.
        if (isThemeSpecToInclude && variableSpecification.defaultValue !== null) {
            collectedLines.push(
                `${variableSpecification.variableName}: ${variableSpecification.defaultValue};`,
            );
        }
    }

    const scss = collectedLines.join("\n    ");

    return `// (C) 2024 GoodData Corporation
// !!! This file is autogenerated and should not be edited manually. !!!
// To edit default values or add new css variables, please look into variablesSpec folder in @gooddata/sdk-ui-theme-provider package.

:root {\n    ${scss}\n}

`;
}
