/**
 * Config file for API Extractor.  For more info, please visit: https://api-extractor.com
 */
{
    "$schema": "https://developer.microsoft.com/json-schemas/api-extractor/v7/api-extractor.schema.json",

    /**
     * Optionally specifies another JSON config file that this file extends from.  This provides a way for
     * standard settings to be shared across multiple projects.
     *
     * If the path starts with "./" or "../", the path is resolved relative to the folder of the file that contains
     * the "extends" field.  Otherwise, the first path segment is interpreted as an NPM package name, and will be
     * resolved using NodeJS require().
     *
     * SUPPORTED TOKENS: none
     * DEFAULT VALUE: ""
     */
    "extends": "../../common/config/api-extractor/api-extractor.json",

    /**
     * Determines the "<projectFolder>" token that can be used with other config file settings.  The project folder
     * typically contains the tsconfig.json and package.json config files, but the path is user-defined.
     *
     * The path is resolved relative to the folder of the config file that contains the setting.
     *
     * The default value for "projectFolder" is the token "<lookup>", which means the folder is determined by traversing
     * parent folders, starting from the folder containing api-extractor.json, and stopping at the first folder
     * that contains a tsconfig.json file.  If a tsconfig.json file cannot be found in this way, then an error
     * will be reported.
     *
     * SUPPORTED TOKENS: <lookup>
     * DEFAULT VALUE: "<lookup>"
     */
    // "projectFolder": "..",

    /**
     * (REQUIRED) Specifies the .d.ts file to be used as the starting point for analysis.  API Extractor
     * analyzes the symbols exported by this module.
     *
     * The file extension must be ".d.ts" and not ".ts".
     *
     * The path is resolved relative to the folder of the config file that contains the setting; to change this,
     * prepend a folder token such as "<projectFolder>".
     *
     * SUPPORTED TOKENS: <projectFolder>, <packageName>, <unscopedPackageName>
     */
    "mainEntryPointFilePath": "<projectFolder>/esm/index.d.ts",

    /**
     * Configures how API Extractor reports error and warning messages produced during analysis.
     *
     * There are three sources of messages:  compiler messages, API Extractor messages, and TSDoc messages.
     */
    "messages": {
        /**
         * Configures handling of diagnostic messages reported by the TypeScript compiler engine while analyzing
         * the input .d.ts files.
         *
         * TypeScript message identifiers start with "TS" followed by an integer.  For example: "TS2551"
         *
         * DEFAULT VALUE:  A single "default" entry with logLevel=warning.
         */
        "compilerMessageReporting": {
            /**
             * Configures the default routing for messages that don't match an explicit rule in this table.
             */
            "default": {
                /**
                 * Specifies whether the message should be written to the the tool's output log.  Note that
                 * the "addToApiReportFile" property may supersede this option.
                 *
                 * Possible values: "error", "warning", "none"
                 *
                 * Errors cause the build to fail and return a nonzero exit code.  Warnings cause a production build fail
                 * and return a nonzero exit code.  For a non-production build (e.g. when "api-extractor run" includes
                 * the "--local" option), the warning is displayed but the build will not fail.
                 *
                 * DEFAULT VALUE: "warning"
                 */
                "logLevel": "warning"

                /**
                 * When addToApiReportFile is true:  If API Extractor is configured to write an API report file (.api.md),
                 * then the message will be written inside that file; otherwise, the message is instead logged according to
                 * the "logLevel" option.
                 *
                 * DEFAULT VALUE: false
                 */
                // "addToApiReportFile": false
            }

            // "TS2551": {
            //   "logLevel": "warning",
            //   "addToApiReportFile": true
            // },
            //
            // . . .
        },

        /**
         * Configures handling of messages reported by API Extractor during its analysis.
         *
         * API Extractor message identifiers start with "ae-".  For example: "ae-extra-release-tag"
         *
         * DEFAULT VALUE: See api-extractor-defaults.json for the complete table of extractorMessageReporting mappings
         */
        "extractorMessageReporting": {
            "default": {
                "logLevel": "none"
                // "addToApiReportFile": false
            }

            // "ae-extra-release-tag": {
            //   "logLevel": "warning",
            //   "addToApiReportFile": true
            // },
            //
            // . . .
        },

        /**
         * Configures handling of messages reported by the TSDoc parser when analyzing code comments.
         *
         * TSDoc message identifiers start with "tsdoc-".  For example: "tsdoc-link-tag-unescaped-text"
         *
         * DEFAULT VALUE:  A single "default" entry with logLevel=warning.
         */
        "tsdocMessageReporting": {
            "default": {
                "logLevel": "none"
                // "addToApiReportFile": false
            }

            // "tsdoc-link-tag-unescaped-text": {
            //   "logLevel": "warning",
            //   "addToApiReportFile": true
            // },
            //
            // . . .
        }
    }
}
