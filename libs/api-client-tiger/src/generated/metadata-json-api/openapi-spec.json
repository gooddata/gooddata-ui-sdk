{
    "openapi": "3.0.1",
    "info": {
        "title": "OpenAPI definition",
        "version": "v0"
    },
    "servers": [
        {
            "url": "http://localhost:3000",
            "description": "Generated server url"
        },
        {
            "url": "/",
            "description": "GoodData Anywhere endpoint"
        }
    ],
    "paths": {
        "/api/layout/workspaces": {
            "get": {
                "tags": ["declarative-layout-controller"],
                "summary": "Set all workspaces layout",
                "description": "Sets complete layout of workspaces, their hierarchy, models.",
                "operationId": "getWorkspacesLayout",
                "responses": {
                    "204": {
                        "description": "All workspaces layout set.",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/DeclarativeWorkspaces"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": ["declarative-layout-controller"],
                "summary": "Set all workspaces layout",
                "description": "Sets complete layout of workspaces, their hierarchy, models.",
                "operationId": "setWorkspacesLayout",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DeclarativeWorkspaces"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "204": {
                        "description": "All workspaces layout set."
                    }
                }
            }
        },
        "/api/layout/workspaces/{workspaceId}": {
            "get": {
                "tags": ["declarative-layout-controller"],
                "summary": "Get workspace layout",
                "description": "Retrieve current model of the workspace in declarative form.",
                "operationId": "getWorkspaceLayout",
                "parameters": [
                    {
                        "name": "workspaceId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved the workspace model.",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/DeclarativeWorkspaceModel"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": ["declarative-layout-controller"],
                "summary": "Set workspace layout",
                "description": "Set complete layout of workspace, like model, ACLs, etc.",
                "operationId": "putWorkspaceLayout",
                "parameters": [
                    {
                        "name": "workspaceId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DeclarativeWorkspaceModel"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "204": {
                        "description": "The model of the workspace was set."
                    }
                }
            }
        },
        "/api/layout/workspaces/{workspaceId}/logicalModel": {
            "get": {
                "tags": ["declarative-layout-controller"],
                "summary": "Get logical model",
                "description": "Retrieve current logical model of the workspace in declarative form.",
                "operationId": "getLogicalModel",
                "parameters": [
                    {
                        "name": "workspaceId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved current logical model.",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/DeclarativeModel"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": ["declarative-layout-controller"],
                "summary": "Set logical model",
                "description": "Set effective logical model of the workspace.",
                "operationId": "setLogicalModel",
                "parameters": [
                    {
                        "name": "workspaceId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DeclarativeModel"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "204": {
                        "description": "Logical model successfully set."
                    }
                }
            }
        },
        "/api/layout/workspaces/{workspaceId}/analyticsModel": {
            "get": {
                "tags": ["declarative-layout-controller"],
                "summary": "Get analytics model",
                "description": "Retrieve current analytics model of the workspace.",
                "operationId": "getAnalyticsModel",
                "parameters": [
                    {
                        "name": "workspaceId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved current analytics model.",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/DeclarativeAnalytics"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": ["declarative-layout-controller"],
                "summary": "Set analytics model",
                "description": "Set effective analytics model of the workspace.",
                "operationId": "setAnalyticsModel",
                "parameters": [
                    {
                        "name": "workspaceId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DeclarativeAnalytics"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "204": {
                        "description": "Analytics model successfully set."
                    }
                }
            }
        },
        "/api/layout/workspaceDataFilters": {
            "get": {
                "tags": ["declarative-layout-controller"],
                "summary": "Get workspace data filters for all workspaces",
                "description": "Retrieve all workspaces and related workspace data filters (and their settings / values).",
                "operationId": "getWorkspaceDataFiltersLayout",
                "responses": {
                    "200": {
                        "description": "Retrieved all workspace data filters.",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/DeclarativeWorkspaceDataFilters"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": ["declarative-layout-controller"],
                "summary": "Set all workspace data filters",
                "description": "Sets workspace data filters in all workspaces in entire organization.",
                "operationId": "setWorkspaceDataFiltersLayout",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DeclarativeWorkspaceDataFilters"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "204": {
                        "description": "All workspace data filters set."
                    }
                }
            }
        },
        "/api/layout/organization": {
            "get": {
                "tags": ["declarative-layout-controller"],
                "summary": "Get organization layout",
                "description": "Retrieve complete layout of organization, workspaces, user-groups, etc.",
                "operationId": "getOrganizationLayout",
                "responses": {
                    "501": {
                        "description": "Resource was not implemented yet."
                    }
                }
            },
            "put": {
                "tags": ["declarative-layout-controller"],
                "summary": "Set organization layout",
                "description": "Sets complete layout of organization, like workspaces, user-groups, etc.",
                "operationId": "setOrganizationLayout",
                "responses": {
                    "501": {
                        "description": "Resource was not implemented yet."
                    }
                }
            }
        },
        "/api/actions/dataSources/{dataSourceId}/uploadNotification": {
            "post": {
                "tags": ["notification-controller"],
                "summary": "Register an upload notification",
                "description": "Notification sets up all reports to be computed again with new data.",
                "operationId": "registerUploadNotification",
                "parameters": [
                    {
                        "name": "dataSourceId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "An upload notification has been successfully registered."
                    },
                    "404": {
                        "description": "Data source with given name does not exist."
                    }
                }
            }
        },
        "/api/dataSources/{dataSourceId}/uploadNotification": {
            "post": {
                "tags": ["notification-controller"],
                "summary": "Register an upload notification",
                "description": "Notification sets up all reports to be computed again with new data.",
                "operationId": "registerUploadNotification_1",
                "parameters": [
                    {
                        "name": "dataSourceId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "An upload notification has been successfully registered."
                    },
                    "404": {
                        "description": "Data source with given name does not exist."
                    }
                }
            }
        },
        "/api/options": {
            "get": {
                "tags": ["options-controller"],
                "summary": "Links for all configuration options",
                "description": "Retrieves links for all options for different configurations.",
                "operationId": "getAllOptions",
                "responses": {
                    "200": {
                        "description": "Links for all configuration options.",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "All options": {
                                        "description": "All options",
                                        "value": {
                                            "options": {
                                                "description": "Options resources",
                                                "links": {
                                                    "availableDrivers": "/api/options/availableDrivers"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/options/availableDrivers": {
            "get": {
                "tags": ["options-controller"],
                "summary": "Get all available data source drivers",
                "description": "Retrieves a list of all supported data sources along with information about the used drivers.",
                "operationId": "getDataSourceDrivers",
                "responses": {
                    "200": {
                        "description": "A list of all available data source drivers.",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "All available drivers": {
                                        "description": "All available drivers",
                                        "value": {
                                            "POSTGRESQL": "org.postgresql.Driver",
                                            "REDSHIFT": "com.amazon.redshift.jdbc42.Driver"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/entities/acls": {
            "get": {
                "tags": ["organization-model-controller"],
                "operationId": "getAllEntities@Acls",
                "parameters": [
                    {
                        "name": "variableParam",
                        "in": "query",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "object"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Zero-based page index (0..N)",
                        "schema": {
                            "type": "integer",
                            "default": "0"
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "description": "The size of the page to be returned",
                        "schema": {
                            "type": "integer",
                            "default": "20"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request successfully processed",
                        "content": {
                            "application/vnd.gooddata.api+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JsonApiACLOutList"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["organization-model-controller"],
                "operationId": "createEntity@Acls",
                "parameters": [
                    {
                        "name": "variableParam",
                        "in": "query",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/vnd.gooddata.api+json": {
                            "schema": {
                                "$ref": "#/components/schemas/JsonApiACLInDocument"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Request successfully processed",
                        "content": {
                            "application/vnd.gooddata.api+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JsonApiACLOutDocument"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/entities/acls/{id}": {
            "get": {
                "tags": ["organization-model-controller"],
                "operationId": "getEntity@Acls",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "pattern": "^([.A-Za-z0-9_-]{1,255}:)?[.A-Za-z0-9_-]{1,255}$",
                            "type": "string"
                        }
                    },
                    {
                        "name": "variableParam",
                        "in": "query",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request successfully processed",
                        "content": {
                            "application/vnd.gooddata.api+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JsonApiACLOutDocument"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": ["organization-model-controller"],
                "operationId": "updateEntity@Acls",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "pattern": "^([.A-Za-z0-9_-]{1,255}:)?[.A-Za-z0-9_-]{1,255}$",
                            "type": "string"
                        }
                    },
                    {
                        "name": "variableParam",
                        "in": "query",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/vnd.gooddata.api+json": {
                            "schema": {
                                "$ref": "#/components/schemas/JsonApiACLInDocument"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Request successfully processed",
                        "content": {
                            "application/vnd.gooddata.api+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JsonApiACLOutDocument"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": ["organization-model-controller"],
                "operationId": "deleteEntity@Acls",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "pattern": "^([.A-Za-z0-9_-]{1,255}:)?[.A-Za-z0-9_-]{1,255}$",
                            "type": "string"
                        }
                    },
                    {
                        "name": "variableParam",
                        "in": "query",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successfully deleted"
                    }
                }
            }
        },
        "/api/entities/admin/acls/{id}": {
            "get": {
                "tags": ["organization-controller"],
                "operationId": "getEntity@Acls_1",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "pattern": "^([.A-Za-z0-9_-]{1,255}:)?[.A-Za-z0-9_-]{1,255}$",
                            "type": "string"
                        }
                    },
                    {
                        "name": "variableParam",
                        "in": "query",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request successfully processed",
                        "content": {
                            "application/vnd.gooddata.api+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JsonApiACLOutDocument"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": ["organization-controller"],
                "operationId": "updateEntity@Acls_1",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "pattern": "^([.A-Za-z0-9_-]{1,255}:)?[.A-Za-z0-9_-]{1,255}$",
                            "type": "string"
                        }
                    },
                    {
                        "name": "variableParam",
                        "in": "query",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/vnd.gooddata.api+json": {
                            "schema": {
                                "$ref": "#/components/schemas/JsonApiACLInDocument"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Request successfully processed",
                        "content": {
                            "application/vnd.gooddata.api+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JsonApiACLOutDocument"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/entities/admin/dataSources/{id}": {
            "get": {
                "tags": ["organization-controller"],
                "operationId": "getEntity@DataSources",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "pattern": "^([.A-Za-z0-9_-]{1,255}:)?[.A-Za-z0-9_-]{1,255}$",
                            "type": "string"
                        }
                    },
                    {
                        "name": "variableParam",
                        "in": "query",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request successfully processed",
                        "content": {
                            "application/vnd.gooddata.api+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JsonApiDataSourceOutDocument"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": ["organization-controller"],
                "operationId": "updateEntity@DataSources",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "pattern": "^([.A-Za-z0-9_-]{1,255}:)?[.A-Za-z0-9_-]{1,255}$",
                            "type": "string"
                        }
                    },
                    {
                        "name": "variableParam",
                        "in": "query",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/vnd.gooddata.api+json": {
                            "schema": {
                                "$ref": "#/components/schemas/JsonApiDataSourceInDocument"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Request successfully processed",
                        "content": {
                            "application/vnd.gooddata.api+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JsonApiDataSourceOutDocument"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/entities/admin/modelModules/{id}": {
            "get": {
                "tags": ["organization-controller"],
                "operationId": "getEntity@ModelModules",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "pattern": "^([.A-Za-z0-9_-]{1,255}:)?[.A-Za-z0-9_-]{1,255}$",
                            "type": "string"
                        }
                    },
                    {
                        "name": "variableParam",
                        "in": "query",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request successfully processed",
                        "content": {
                            "application/vnd.gooddata.api+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JsonApiModelModuleOutDocument"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": ["organization-controller"],
                "operationId": "updateEntity@ModelModules",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "pattern": "^([.A-Za-z0-9_-]{1,255}:)?[.A-Za-z0-9_-]{1,255}$",
                            "type": "string"
                        }
                    },
                    {
                        "name": "variableParam",
                        "in": "query",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/vnd.gooddata.api+json": {
                            "schema": {
                                "$ref": "#/components/schemas/JsonApiModelModuleInDocument"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Request successfully processed",
                        "content": {
                            "application/vnd.gooddata.api+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JsonApiModelModuleOutDocument"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/entities/admin/organizations/{id}": {
            "get": {
                "tags": ["organization-controller"],
                "operationId": "getEntity@Organizations",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "pattern": "^([.A-Za-z0-9_-]{1,255}:)?[.A-Za-z0-9_-]{1,255}$",
                            "type": "string"
                        }
                    },
                    {
                        "name": "variableParam",
                        "in": "query",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request successfully processed",
                        "content": {
                            "application/vnd.gooddata.api+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JsonApiOrganizationOutDocument"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": ["organization-controller"],
                "operationId": "updateEntity@Organizations",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "pattern": "^([.A-Za-z0-9_-]{1,255}:)?[.A-Za-z0-9_-]{1,255}$",
                            "type": "string"
                        }
                    },
                    {
                        "name": "variableParam",
                        "in": "query",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/vnd.gooddata.api+json": {
                            "schema": {
                                "$ref": "#/components/schemas/JsonApiOrganizationInDocument"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Request successfully processed",
                        "content": {
                            "application/vnd.gooddata.api+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JsonApiOrganizationOutDocument"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/entities/admin/userGroups/{id}": {
            "get": {
                "tags": ["organization-controller"],
                "operationId": "getEntity@UserGroups",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "pattern": "^([.A-Za-z0-9_-]{1,255}:)?[.A-Za-z0-9_-]{1,255}$",
                            "type": "string"
                        }
                    },
                    {
                        "name": "variableParam",
                        "in": "query",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request successfully processed",
                        "content": {
                            "application/vnd.gooddata.api+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JsonApiUserGroupOutDocument"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": ["organization-controller"],
                "operationId": "updateEntity@UserGroups",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "pattern": "^([.A-Za-z0-9_-]{1,255}:)?[.A-Za-z0-9_-]{1,255}$",
                            "type": "string"
                        }
                    },
                    {
                        "name": "variableParam",
                        "in": "query",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/vnd.gooddata.api+json": {
                            "schema": {
                                "$ref": "#/components/schemas/JsonApiUserGroupInDocument"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Request successfully processed",
                        "content": {
                            "application/vnd.gooddata.api+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JsonApiUserGroupOutDocument"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/entities/admin/users/{id}": {
            "get": {
                "tags": ["organization-controller"],
                "operationId": "getEntity@Users",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "pattern": "^([.A-Za-z0-9_-]{1,255}:)?[.A-Za-z0-9_-]{1,255}$",
                            "type": "string"
                        }
                    },
                    {
                        "name": "variableParam",
                        "in": "query",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request successfully processed",
                        "content": {
                            "application/vnd.gooddata.api+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JsonApiUserOutDocument"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": ["organization-controller"],
                "operationId": "updateEntity@Users",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "pattern": "^([.A-Za-z0-9_-]{1,255}:)?[.A-Za-z0-9_-]{1,255}$",
                            "type": "string"
                        }
                    },
                    {
                        "name": "variableParam",
                        "in": "query",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/vnd.gooddata.api+json": {
                            "schema": {
                                "$ref": "#/components/schemas/JsonApiUserInDocument"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Request successfully processed",
                        "content": {
                            "application/vnd.gooddata.api+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JsonApiUserOutDocument"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/entities/admin/workspaces/{id}": {
            "get": {
                "tags": ["organization-controller"],
                "operationId": "getEntity@Workspaces",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "pattern": "^([.A-Za-z0-9_-]{1,255}:)?[.A-Za-z0-9_-]{1,255}$",
                            "type": "string"
                        }
                    },
                    {
                        "name": "variableParam",
                        "in": "query",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request successfully processed",
                        "content": {
                            "application/vnd.gooddata.api+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JsonApiWorkspaceOutDocument"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": ["organization-controller"],
                "operationId": "updateEntity@Workspaces",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "pattern": "^([.A-Za-z0-9_-]{1,255}:)?[.A-Za-z0-9_-]{1,255}$",
                            "type": "string"
                        }
                    },
                    {
                        "name": "variableParam",
                        "in": "query",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/vnd.gooddata.api+json": {
                            "schema": {
                                "$ref": "#/components/schemas/JsonApiWorkspaceInDocument"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Request successfully processed",
                        "content": {
                            "application/vnd.gooddata.api+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JsonApiWorkspaceOutDocument"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/entities/dataSources": {
            "get": {
                "tags": ["organization-model-controller"],
                "operationId": "getAllEntities@DataSources",
                "parameters": [
                    {
                        "name": "variableParam",
                        "in": "query",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "object"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Zero-based page index (0..N)",
                        "schema": {
                            "type": "integer",
                            "default": "0"
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "description": "The size of the page to be returned",
                        "schema": {
                            "type": "integer",
                            "default": "20"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request successfully processed",
                        "content": {
                            "application/vnd.gooddata.api+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JsonApiDataSourceOutList"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["organization-model-controller"],
                "operationId": "createEntity@DataSources",
                "parameters": [
                    {
                        "name": "variableParam",
                        "in": "query",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/vnd.gooddata.api+json": {
                            "schema": {
                                "$ref": "#/components/schemas/JsonApiDataSourceInDocument"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Request successfully processed",
                        "content": {
                            "application/vnd.gooddata.api+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JsonApiDataSourceOutDocument"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/entities/dataSources/{id}": {
            "get": {
                "tags": ["organization-model-controller"],
                "operationId": "getEntity@DataSources_1",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "pattern": "^([.A-Za-z0-9_-]{1,255}:)?[.A-Za-z0-9_-]{1,255}$",
                            "type": "string"
                        }
                    },
                    {
                        "name": "variableParam",
                        "in": "query",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request successfully processed",
                        "content": {
                            "application/vnd.gooddata.api+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JsonApiDataSourceOutDocument"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": ["organization-model-controller"],
                "operationId": "updateEntity@DataSources_1",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "pattern": "^([.A-Za-z0-9_-]{1,255}:)?[.A-Za-z0-9_-]{1,255}$",
                            "type": "string"
                        }
                    },
                    {
                        "name": "variableParam",
                        "in": "query",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/vnd.gooddata.api+json": {
                            "schema": {
                                "$ref": "#/components/schemas/JsonApiDataSourceInDocument"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Request successfully processed",
                        "content": {
                            "application/vnd.gooddata.api+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JsonApiDataSourceOutDocument"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": ["organization-model-controller"],
                "operationId": "deleteEntity@DataSources",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "pattern": "^([.A-Za-z0-9_-]{1,255}:)?[.A-Za-z0-9_-]{1,255}$",
                            "type": "string"
                        }
                    },
                    {
                        "name": "variableParam",
                        "in": "query",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successfully deleted"
                    }
                }
            }
        },
        "/api/entities/modelModules": {
            "get": {
                "tags": ["organization-model-controller"],
                "operationId": "getAllEntities@ModelModules",
                "parameters": [
                    {
                        "name": "variableParam",
                        "in": "query",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "object"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Zero-based page index (0..N)",
                        "schema": {
                            "type": "integer",
                            "default": "0"
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "description": "The size of the page to be returned",
                        "schema": {
                            "type": "integer",
                            "default": "20"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request successfully processed",
                        "content": {
                            "application/vnd.gooddata.api+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JsonApiModelModuleOutList"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["organization-model-controller"],
                "operationId": "createEntity@ModelModules",
                "parameters": [
                    {
                        "name": "variableParam",
                        "in": "query",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/vnd.gooddata.api+json": {
                            "schema": {
                                "$ref": "#/components/schemas/JsonApiModelModuleInDocument"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Request successfully processed",
                        "content": {
                            "application/vnd.gooddata.api+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JsonApiModelModuleOutDocument"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/entities/modelModules/{id}": {
            "get": {
                "tags": ["organization-model-controller"],
                "operationId": "getEntity@ModelModules_1",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "pattern": "^([.A-Za-z0-9_-]{1,255}:)?[.A-Za-z0-9_-]{1,255}$",
                            "type": "string"
                        }
                    },
                    {
                        "name": "variableParam",
                        "in": "query",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request successfully processed",
                        "content": {
                            "application/vnd.gooddata.api+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JsonApiModelModuleOutDocument"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": ["organization-model-controller"],
                "operationId": "updateEntity@ModelModules_1",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "pattern": "^([.A-Za-z0-9_-]{1,255}:)?[.A-Za-z0-9_-]{1,255}$",
                            "type": "string"
                        }
                    },
                    {
                        "name": "variableParam",
                        "in": "query",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/vnd.gooddata.api+json": {
                            "schema": {
                                "$ref": "#/components/schemas/JsonApiModelModuleInDocument"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Request successfully processed",
                        "content": {
                            "application/vnd.gooddata.api+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JsonApiModelModuleOutDocument"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": ["organization-model-controller"],
                "operationId": "deleteEntity@ModelModules",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "pattern": "^([.A-Za-z0-9_-]{1,255}:)?[.A-Za-z0-9_-]{1,255}$",
                            "type": "string"
                        }
                    },
                    {
                        "name": "variableParam",
                        "in": "query",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successfully deleted"
                    }
                }
            }
        },
        "/api/entities/organization": {
            "get": {
                "tags": ["organization-controller"],
                "operationId": "getOrganization@Users_1_1",
                "responses": {
                    "200": {
                        "description": "Request successfully processed",
                        "content": {
                            "application/vnd.gooddata.api+json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/JsonApiDataSourceOutDocument"
                                        },
                                        {
                                            "$ref": "#/components/schemas/JsonApiACLOutDocument"
                                        },
                                        {
                                            "$ref": "#/components/schemas/JsonApiModelModuleOutDocument"
                                        },
                                        {
                                            "$ref": "#/components/schemas/JsonApiOrganizationOutDocument"
                                        },
                                        {
                                            "$ref": "#/components/schemas/JsonApiUserGroupOutDocument"
                                        },
                                        {
                                            "$ref": "#/components/schemas/JsonApiUserOutDocument"
                                        },
                                        {
                                            "$ref": "#/components/schemas/JsonApiWorkspaceOutDocument"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/entities/organizations": {
            "get": {
                "tags": ["organization-model-controller"],
                "operationId": "getAllEntities@Organizations",
                "parameters": [
                    {
                        "name": "variableParam",
                        "in": "query",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "object"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Zero-based page index (0..N)",
                        "schema": {
                            "type": "integer",
                            "default": "0"
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "description": "The size of the page to be returned",
                        "schema": {
                            "type": "integer",
                            "default": "20"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request successfully processed",
                        "content": {
                            "application/vnd.gooddata.api+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JsonApiOrganizationOutList"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["organization-model-controller"],
                "operationId": "createEntity@Organizations",
                "parameters": [
                    {
                        "name": "variableParam",
                        "in": "query",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/vnd.gooddata.api+json": {
                            "schema": {
                                "$ref": "#/components/schemas/JsonApiOrganizationInDocument"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Request successfully processed",
                        "content": {
                            "application/vnd.gooddata.api+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JsonApiOrganizationOutDocument"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/entities/organizations/{id}": {
            "get": {
                "tags": ["organization-model-controller"],
                "operationId": "getEntity@Organizations_1",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "pattern": "^([.A-Za-z0-9_-]{1,255}:)?[.A-Za-z0-9_-]{1,255}$",
                            "type": "string"
                        }
                    },
                    {
                        "name": "variableParam",
                        "in": "query",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request successfully processed",
                        "content": {
                            "application/vnd.gooddata.api+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JsonApiOrganizationOutDocument"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": ["organization-model-controller"],
                "operationId": "updateEntity@Organizations_1",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "pattern": "^([.A-Za-z0-9_-]{1,255}:)?[.A-Za-z0-9_-]{1,255}$",
                            "type": "string"
                        }
                    },
                    {
                        "name": "variableParam",
                        "in": "query",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/vnd.gooddata.api+json": {
                            "schema": {
                                "$ref": "#/components/schemas/JsonApiOrganizationInDocument"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Request successfully processed",
                        "content": {
                            "application/vnd.gooddata.api+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JsonApiOrganizationOutDocument"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": ["organization-model-controller"],
                "operationId": "deleteEntity@Organizations",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "pattern": "^([.A-Za-z0-9_-]{1,255}:)?[.A-Za-z0-9_-]{1,255}$",
                            "type": "string"
                        }
                    },
                    {
                        "name": "variableParam",
                        "in": "query",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successfully deleted"
                    }
                }
            }
        },
        "/api/entities/userGroups": {
            "get": {
                "tags": ["organization-model-controller"],
                "operationId": "getAllEntities@UserGroups",
                "parameters": [
                    {
                        "name": "variableParam",
                        "in": "query",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "object"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Zero-based page index (0..N)",
                        "schema": {
                            "type": "integer",
                            "default": "0"
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "description": "The size of the page to be returned",
                        "schema": {
                            "type": "integer",
                            "default": "20"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request successfully processed",
                        "content": {
                            "application/vnd.gooddata.api+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JsonApiUserGroupOutList"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["organization-model-controller"],
                "operationId": "createEntity@UserGroups",
                "parameters": [
                    {
                        "name": "variableParam",
                        "in": "query",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/vnd.gooddata.api+json": {
                            "schema": {
                                "$ref": "#/components/schemas/JsonApiUserGroupInDocument"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Request successfully processed",
                        "content": {
                            "application/vnd.gooddata.api+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JsonApiUserGroupOutDocument"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/entities/userGroups/{id}": {
            "get": {
                "tags": ["organization-model-controller"],
                "operationId": "getEntity@UserGroups_1",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "pattern": "^([.A-Za-z0-9_-]{1,255}:)?[.A-Za-z0-9_-]{1,255}$",
                            "type": "string"
                        }
                    },
                    {
                        "name": "variableParam",
                        "in": "query",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request successfully processed",
                        "content": {
                            "application/vnd.gooddata.api+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JsonApiUserGroupOutDocument"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": ["organization-model-controller"],
                "operationId": "updateEntity@UserGroups_1",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "pattern": "^([.A-Za-z0-9_-]{1,255}:)?[.A-Za-z0-9_-]{1,255}$",
                            "type": "string"
                        }
                    },
                    {
                        "name": "variableParam",
                        "in": "query",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/vnd.gooddata.api+json": {
                            "schema": {
                                "$ref": "#/components/schemas/JsonApiUserGroupInDocument"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Request successfully processed",
                        "content": {
                            "application/vnd.gooddata.api+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JsonApiUserGroupOutDocument"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": ["organization-model-controller"],
                "operationId": "deleteEntity@UserGroups",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "pattern": "^([.A-Za-z0-9_-]{1,255}:)?[.A-Za-z0-9_-]{1,255}$",
                            "type": "string"
                        }
                    },
                    {
                        "name": "variableParam",
                        "in": "query",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successfully deleted"
                    }
                }
            }
        },
        "/api/entities/users": {
            "get": {
                "tags": ["organization-model-controller"],
                "operationId": "getAllEntities@Users",
                "parameters": [
                    {
                        "name": "variableParam",
                        "in": "query",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "object"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Zero-based page index (0..N)",
                        "schema": {
                            "type": "integer",
                            "default": "0"
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "description": "The size of the page to be returned",
                        "schema": {
                            "type": "integer",
                            "default": "20"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request successfully processed",
                        "content": {
                            "application/vnd.gooddata.api+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JsonApiUserOutList"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["organization-model-controller"],
                "operationId": "createEntity@Users",
                "parameters": [
                    {
                        "name": "variableParam",
                        "in": "query",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/vnd.gooddata.api+json": {
                            "schema": {
                                "$ref": "#/components/schemas/JsonApiUserInDocument"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Request successfully processed",
                        "content": {
                            "application/vnd.gooddata.api+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JsonApiUserOutDocument"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/entities/users/{id}": {
            "get": {
                "tags": ["organization-model-controller"],
                "operationId": "getEntity@Users_1",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "pattern": "^([.A-Za-z0-9_-]{1,255}:)?[.A-Za-z0-9_-]{1,255}$",
                            "type": "string"
                        }
                    },
                    {
                        "name": "variableParam",
                        "in": "query",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request successfully processed",
                        "content": {
                            "application/vnd.gooddata.api+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JsonApiUserOutDocument"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": ["organization-model-controller"],
                "operationId": "updateEntity@Users_1",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "pattern": "^([.A-Za-z0-9_-]{1,255}:)?[.A-Za-z0-9_-]{1,255}$",
                            "type": "string"
                        }
                    },
                    {
                        "name": "variableParam",
                        "in": "query",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/vnd.gooddata.api+json": {
                            "schema": {
                                "$ref": "#/components/schemas/JsonApiUserInDocument"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Request successfully processed",
                        "content": {
                            "application/vnd.gooddata.api+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JsonApiUserOutDocument"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": ["organization-model-controller"],
                "operationId": "deleteEntity@Users",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "pattern": "^([.A-Za-z0-9_-]{1,255}:)?[.A-Za-z0-9_-]{1,255}$",
                            "type": "string"
                        }
                    },
                    {
                        "name": "variableParam",
                        "in": "query",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successfully deleted"
                    }
                }
            }
        },
        "/api/entities/users/{userId}/apiTokens": {
            "get": {
                "tags": ["user-model-controller"],
                "operationId": "getAllEntities@ApiTokens",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "variableParam",
                        "in": "query",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "object"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Zero-based page index (0..N)",
                        "schema": {
                            "type": "integer",
                            "default": "0"
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "description": "The size of the page to be returned",
                        "schema": {
                            "type": "integer",
                            "default": "20"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request successfully processed",
                        "content": {
                            "application/vnd.gooddata.api+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JsonApiApiTokenOutList"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["user-model-controller"],
                "operationId": "createEntity@ApiTokens",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "variableParam",
                        "in": "query",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/vnd.gooddata.api+json": {
                            "schema": {
                                "$ref": "#/components/schemas/JsonApiApiTokenInDocument"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Request successfully processed",
                        "content": {
                            "application/vnd.gooddata.api+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JsonApiApiTokenOutDocument"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/entities/users/{userId}/apiTokens/{id}": {
            "get": {
                "tags": ["user-model-controller"],
                "operationId": "getEntity@ApiTokens",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "pattern": "^([.A-Za-z0-9_-]{1,255}:)?[.A-Za-z0-9_-]{1,255}$",
                            "type": "string"
                        }
                    },
                    {
                        "name": "variableParam",
                        "in": "query",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "object"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Zero-based page index (0..N)",
                        "schema": {
                            "type": "integer",
                            "default": "0"
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "description": "The size of the page to be returned",
                        "schema": {
                            "type": "integer",
                            "default": "20"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request successfully processed",
                        "content": {
                            "application/vnd.gooddata.api+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JsonApiApiTokenOutDocument"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": ["user-model-controller"],
                "operationId": "deleteEntity@ApiTokens",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "pattern": "^([.A-Za-z0-9_-]{1,255}:)?[.A-Za-z0-9_-]{1,255}$",
                            "type": "string"
                        }
                    },
                    {
                        "name": "variableParam",
                        "in": "query",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successfully deleted"
                    }
                }
            }
        },
        "/api/entities/workspaces": {
            "get": {
                "tags": ["organization-model-controller"],
                "operationId": "getAllEntities@Workspaces",
                "parameters": [
                    {
                        "name": "variableParam",
                        "in": "query",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "object"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Zero-based page index (0..N)",
                        "schema": {
                            "type": "integer",
                            "default": "0"
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "description": "The size of the page to be returned",
                        "schema": {
                            "type": "integer",
                            "default": "20"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request successfully processed",
                        "content": {
                            "application/vnd.gooddata.api+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JsonApiWorkspaceOutList"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["organization-model-controller"],
                "operationId": "createEntity@Workspaces",
                "parameters": [
                    {
                        "name": "variableParam",
                        "in": "query",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/vnd.gooddata.api+json": {
                            "schema": {
                                "$ref": "#/components/schemas/JsonApiWorkspaceInDocument"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Request successfully processed",
                        "content": {
                            "application/vnd.gooddata.api+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JsonApiWorkspaceOutDocument"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/entities/workspaces/{id}": {
            "get": {
                "tags": ["organization-model-controller"],
                "operationId": "getEntity@Workspaces_1",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "pattern": "^([.A-Za-z0-9_-]{1,255}:)?[.A-Za-z0-9_-]{1,255}$",
                            "type": "string"
                        }
                    },
                    {
                        "name": "variableParam",
                        "in": "query",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request successfully processed",
                        "content": {
                            "application/vnd.gooddata.api+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JsonApiWorkspaceOutDocument"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": ["organization-model-controller"],
                "operationId": "updateEntity@Workspaces_1",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "pattern": "^([.A-Za-z0-9_-]{1,255}:)?[.A-Za-z0-9_-]{1,255}$",
                            "type": "string"
                        }
                    },
                    {
                        "name": "variableParam",
                        "in": "query",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/vnd.gooddata.api+json": {
                            "schema": {
                                "$ref": "#/components/schemas/JsonApiWorkspaceInDocument"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Request successfully processed",
                        "content": {
                            "application/vnd.gooddata.api+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JsonApiWorkspaceOutDocument"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": ["organization-model-controller"],
                "operationId": "deleteEntity@Workspaces",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "pattern": "^([.A-Za-z0-9_-]{1,255}:)?[.A-Za-z0-9_-]{1,255}$",
                            "type": "string"
                        }
                    },
                    {
                        "name": "variableParam",
                        "in": "query",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successfully deleted"
                    }
                }
            }
        },
        "/api/entities/workspaces/{workspaceId}/analyticalDashboards": {
            "get": {
                "tags": ["workspace-object-controller"],
                "operationId": "getEntities@AnalyticalDashboards",
                "parameters": [
                    {
                        "name": "workspaceId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "variableParam",
                        "in": "query",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "object"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Zero-based page index (0..N)",
                        "schema": {
                            "type": "integer",
                            "default": "0"
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "description": "The size of the page to be returned",
                        "schema": {
                            "type": "integer",
                            "default": "20"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request successfully processed",
                        "content": {
                            "application/vnd.gooddata.api+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JsonApiAnalyticalDashboardOutList"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["workspace-object-controller"],
                "operationId": "createEntity@AnalyticalDashboards",
                "parameters": [
                    {
                        "name": "workspaceId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "variableParam",
                        "in": "query",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/vnd.gooddata.api+json": {
                            "schema": {
                                "$ref": "#/components/schemas/JsonApiAnalyticalDashboardInDocument"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Request successfully processed",
                        "content": {
                            "application/vnd.gooddata.api+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JsonApiAnalyticalDashboardOutDocument"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/entities/workspaces/{workspaceId}/analyticalDashboards/{objectId}": {
            "get": {
                "tags": ["workspace-object-controller"],
                "operationId": "getEntity@AnalyticalDashboards",
                "parameters": [
                    {
                        "name": "workspaceId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "objectId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "variableParam",
                        "in": "query",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request successfully processed",
                        "content": {
                            "application/vnd.gooddata.api+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JsonApiAnalyticalDashboardOutDocument"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": ["workspace-object-controller"],
                "operationId": "updateEntity@AnalyticalDashboards",
                "parameters": [
                    {
                        "name": "workspaceId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "objectId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "variableParam",
                        "in": "query",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/vnd.gooddata.api+json": {
                            "schema": {
                                "$ref": "#/components/schemas/JsonApiAnalyticalDashboardInDocument"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Request successfully processed",
                        "content": {
                            "application/vnd.gooddata.api+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JsonApiAnalyticalDashboardOutDocument"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": ["workspace-object-controller"],
                "operationId": "deleteEntity@AnalyticalDashboards",
                "parameters": [
                    {
                        "name": "workspaceId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "objectId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "variableParam",
                        "in": "query",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successfully deleted"
                    }
                }
            }
        },
        "/api/entities/workspaces/{workspaceId}/attributes": {
            "get": {
                "tags": ["workspace-object-controller"],
                "operationId": "getEntities@Attributes",
                "parameters": [
                    {
                        "name": "workspaceId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "variableParam",
                        "in": "query",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "object"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Zero-based page index (0..N)",
                        "schema": {
                            "type": "integer",
                            "default": "0"
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "description": "The size of the page to be returned",
                        "schema": {
                            "type": "integer",
                            "default": "20"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request successfully processed",
                        "content": {
                            "application/vnd.gooddata.api+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JsonApiAttributeOutList"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/entities/workspaces/{workspaceId}/attributes/{objectId}": {
            "get": {
                "tags": ["workspace-object-controller"],
                "operationId": "getEntity@Attributes",
                "parameters": [
                    {
                        "name": "workspaceId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "objectId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "variableParam",
                        "in": "query",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request successfully processed",
                        "content": {
                            "application/vnd.gooddata.api+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JsonApiAttributeOutDocument"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/entities/workspaces/{workspaceId}/children/acls": {
            "post": {
                "tags": ["organization-model-controller"],
                "operationId": "createChildEntity@Acls",
                "parameters": [
                    {
                        "name": "workspaceId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/vnd.gooddata.api+json": {
                            "schema": {
                                "$ref": "#/components/schemas/JsonApiACLInDocument"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Request successfully processed",
                        "content": {
                            "application/vnd.gooddata.api+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JsonApiACLOutDocument"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/entities/workspaces/{workspaceId}/children/dataSources": {
            "post": {
                "tags": ["organization-model-controller"],
                "operationId": "createChildEntity@DataSources",
                "parameters": [
                    {
                        "name": "workspaceId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/vnd.gooddata.api+json": {
                            "schema": {
                                "$ref": "#/components/schemas/JsonApiDataSourceInDocument"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Request successfully processed",
                        "content": {
                            "application/vnd.gooddata.api+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JsonApiDataSourceOutDocument"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/entities/workspaces/{workspaceId}/children/modelModules": {
            "post": {
                "tags": ["organization-model-controller"],
                "operationId": "createChildEntity@ModelModules",
                "parameters": [
                    {
                        "name": "workspaceId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/vnd.gooddata.api+json": {
                            "schema": {
                                "$ref": "#/components/schemas/JsonApiModelModuleInDocument"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Request successfully processed",
                        "content": {
                            "application/vnd.gooddata.api+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JsonApiModelModuleOutDocument"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/entities/workspaces/{workspaceId}/children/organizations": {
            "post": {
                "tags": ["organization-model-controller"],
                "operationId": "createChildEntity@Organizations",
                "parameters": [
                    {
                        "name": "workspaceId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/vnd.gooddata.api+json": {
                            "schema": {
                                "$ref": "#/components/schemas/JsonApiOrganizationInDocument"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Request successfully processed",
                        "content": {
                            "application/vnd.gooddata.api+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JsonApiOrganizationOutDocument"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/entities/workspaces/{workspaceId}/children/userGroups": {
            "post": {
                "tags": ["organization-model-controller"],
                "operationId": "createChildEntity@UserGroups",
                "parameters": [
                    {
                        "name": "workspaceId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/vnd.gooddata.api+json": {
                            "schema": {
                                "$ref": "#/components/schemas/JsonApiUserGroupInDocument"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Request successfully processed",
                        "content": {
                            "application/vnd.gooddata.api+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JsonApiUserGroupOutDocument"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/entities/workspaces/{workspaceId}/children/users": {
            "post": {
                "tags": ["organization-model-controller"],
                "operationId": "createChildEntity@Users",
                "parameters": [
                    {
                        "name": "workspaceId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/vnd.gooddata.api+json": {
                            "schema": {
                                "$ref": "#/components/schemas/JsonApiUserInDocument"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Request successfully processed",
                        "content": {
                            "application/vnd.gooddata.api+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JsonApiUserOutDocument"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/entities/workspaces/{workspaceId}/children/workspaces": {
            "post": {
                "tags": ["organization-model-controller"],
                "operationId": "createChildEntity@Workspaces",
                "parameters": [
                    {
                        "name": "workspaceId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/vnd.gooddata.api+json": {
                            "schema": {
                                "$ref": "#/components/schemas/JsonApiWorkspaceInDocument"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Request successfully processed",
                        "content": {
                            "application/vnd.gooddata.api+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JsonApiWorkspaceOutDocument"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/entities/workspaces/{workspaceId}/children/{childWorkspaceId}/acls": {
            "post": {
                "tags": ["organization-model-controller"],
                "operationId": "createWorkspaceDataFilterSettingEntity@Acls",
                "parameters": [
                    {
                        "name": "workspaceId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "childWorkspaceId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/vnd.gooddata.api+json": {
                            "schema": {
                                "$ref": "#/components/schemas/JsonApiACLInDocument"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Request successfully processed",
                        "content": {
                            "application/vnd.gooddata.api+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JsonApiACLOutDocument"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/entities/workspaces/{workspaceId}/children/{childWorkspaceId}/dataSources": {
            "post": {
                "tags": ["organization-model-controller"],
                "operationId": "createWorkspaceDataFilterSettingEntity@DataSources",
                "parameters": [
                    {
                        "name": "workspaceId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "childWorkspaceId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/vnd.gooddata.api+json": {
                            "schema": {
                                "$ref": "#/components/schemas/JsonApiDataSourceInDocument"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Request successfully processed",
                        "content": {
                            "application/vnd.gooddata.api+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JsonApiDataSourceOutDocument"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/entities/workspaces/{workspaceId}/children/{childWorkspaceId}/modelModules": {
            "post": {
                "tags": ["organization-model-controller"],
                "operationId": "createWorkspaceDataFilterSettingEntity@ModelModules",
                "parameters": [
                    {
                        "name": "workspaceId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "childWorkspaceId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/vnd.gooddata.api+json": {
                            "schema": {
                                "$ref": "#/components/schemas/JsonApiModelModuleInDocument"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Request successfully processed",
                        "content": {
                            "application/vnd.gooddata.api+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JsonApiModelModuleOutDocument"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/entities/workspaces/{workspaceId}/children/{childWorkspaceId}/organizations": {
            "post": {
                "tags": ["organization-model-controller"],
                "operationId": "createWorkspaceDataFilterSettingEntity@Organizations",
                "parameters": [
                    {
                        "name": "workspaceId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "childWorkspaceId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/vnd.gooddata.api+json": {
                            "schema": {
                                "$ref": "#/components/schemas/JsonApiOrganizationInDocument"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Request successfully processed",
                        "content": {
                            "application/vnd.gooddata.api+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JsonApiOrganizationOutDocument"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/entities/workspaces/{workspaceId}/children/{childWorkspaceId}/userGroups": {
            "post": {
                "tags": ["organization-model-controller"],
                "operationId": "createWorkspaceDataFilterSettingEntity@UserGroups",
                "parameters": [
                    {
                        "name": "workspaceId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "childWorkspaceId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/vnd.gooddata.api+json": {
                            "schema": {
                                "$ref": "#/components/schemas/JsonApiUserGroupInDocument"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Request successfully processed",
                        "content": {
                            "application/vnd.gooddata.api+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JsonApiUserGroupOutDocument"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/entities/workspaces/{workspaceId}/children/{childWorkspaceId}/users": {
            "post": {
                "tags": ["organization-model-controller"],
                "operationId": "createWorkspaceDataFilterSettingEntity@Users",
                "parameters": [
                    {
                        "name": "workspaceId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "childWorkspaceId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/vnd.gooddata.api+json": {
                            "schema": {
                                "$ref": "#/components/schemas/JsonApiUserInDocument"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Request successfully processed",
                        "content": {
                            "application/vnd.gooddata.api+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JsonApiUserOutDocument"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/entities/workspaces/{workspaceId}/children/{childWorkspaceId}/workspaces": {
            "post": {
                "tags": ["organization-model-controller"],
                "operationId": "createWorkspaceDataFilterSettingEntity@Workspaces",
                "parameters": [
                    {
                        "name": "workspaceId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "childWorkspaceId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/vnd.gooddata.api+json": {
                            "schema": {
                                "$ref": "#/components/schemas/JsonApiWorkspaceInDocument"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Request successfully processed",
                        "content": {
                            "application/vnd.gooddata.api+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JsonApiWorkspaceOutDocument"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/entities/workspaces/{workspaceId}/datasets": {
            "get": {
                "tags": ["workspace-object-controller"],
                "operationId": "getEntities@Datasets",
                "parameters": [
                    {
                        "name": "workspaceId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "variableParam",
                        "in": "query",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "object"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Zero-based page index (0..N)",
                        "schema": {
                            "type": "integer",
                            "default": "0"
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "description": "The size of the page to be returned",
                        "schema": {
                            "type": "integer",
                            "default": "20"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request successfully processed",
                        "content": {
                            "application/vnd.gooddata.api+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JsonApiDatasetOutList"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/entities/workspaces/{workspaceId}/datasets/{objectId}": {
            "get": {
                "tags": ["workspace-object-controller"],
                "operationId": "getEntity@Datasets",
                "parameters": [
                    {
                        "name": "workspaceId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "objectId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "variableParam",
                        "in": "query",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request successfully processed",
                        "content": {
                            "application/vnd.gooddata.api+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JsonApiDatasetOutDocument"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/entities/workspaces/{workspaceId}/facts": {
            "get": {
                "tags": ["workspace-object-controller"],
                "operationId": "getEntities@Facts",
                "parameters": [
                    {
                        "name": "workspaceId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "variableParam",
                        "in": "query",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "object"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Zero-based page index (0..N)",
                        "schema": {
                            "type": "integer",
                            "default": "0"
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "description": "The size of the page to be returned",
                        "schema": {
                            "type": "integer",
                            "default": "20"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request successfully processed",
                        "content": {
                            "application/vnd.gooddata.api+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JsonApiFactOutList"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/entities/workspaces/{workspaceId}/facts/{objectId}": {
            "get": {
                "tags": ["workspace-object-controller"],
                "operationId": "getEntity@Facts",
                "parameters": [
                    {
                        "name": "workspaceId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "objectId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "variableParam",
                        "in": "query",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request successfully processed",
                        "content": {
                            "application/vnd.gooddata.api+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JsonApiFactOutDocument"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/entities/workspaces/{workspaceId}/filterContexts": {
            "get": {
                "tags": ["workspace-object-controller"],
                "operationId": "getEntities@FilterContexts",
                "parameters": [
                    {
                        "name": "workspaceId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "variableParam",
                        "in": "query",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "object"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Zero-based page index (0..N)",
                        "schema": {
                            "type": "integer",
                            "default": "0"
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "description": "The size of the page to be returned",
                        "schema": {
                            "type": "integer",
                            "default": "20"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request successfully processed",
                        "content": {
                            "application/vnd.gooddata.api+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JsonApiFilterContextOutList"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["workspace-object-controller"],
                "operationId": "createEntity@FilterContexts",
                "parameters": [
                    {
                        "name": "workspaceId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "variableParam",
                        "in": "query",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/vnd.gooddata.api+json": {
                            "schema": {
                                "$ref": "#/components/schemas/JsonApiFilterContextInDocument"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Request successfully processed",
                        "content": {
                            "application/vnd.gooddata.api+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JsonApiFilterContextOutDocument"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/entities/workspaces/{workspaceId}/filterContexts/{objectId}": {
            "get": {
                "tags": ["workspace-object-controller"],
                "operationId": "getEntity@FilterContexts",
                "parameters": [
                    {
                        "name": "workspaceId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "objectId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "variableParam",
                        "in": "query",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request successfully processed",
                        "content": {
                            "application/vnd.gooddata.api+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JsonApiFilterContextOutDocument"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": ["workspace-object-controller"],
                "operationId": "updateEntity@FilterContexts",
                "parameters": [
                    {
                        "name": "workspaceId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "objectId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "variableParam",
                        "in": "query",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/vnd.gooddata.api+json": {
                            "schema": {
                                "$ref": "#/components/schemas/JsonApiFilterContextInDocument"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Request successfully processed",
                        "content": {
                            "application/vnd.gooddata.api+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JsonApiFilterContextOutDocument"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": ["workspace-object-controller"],
                "operationId": "deleteEntity@FilterContexts",
                "parameters": [
                    {
                        "name": "workspaceId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "objectId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "variableParam",
                        "in": "query",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successfully deleted"
                    }
                }
            }
        },
        "/api/entities/workspaces/{workspaceId}/labels": {
            "get": {
                "tags": ["workspace-object-controller"],
                "operationId": "getEntities@Labels",
                "parameters": [
                    {
                        "name": "workspaceId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "variableParam",
                        "in": "query",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "object"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Zero-based page index (0..N)",
                        "schema": {
                            "type": "integer",
                            "default": "0"
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "description": "The size of the page to be returned",
                        "schema": {
                            "type": "integer",
                            "default": "20"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request successfully processed",
                        "content": {
                            "application/vnd.gooddata.api+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JsonApiLabelOutList"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/entities/workspaces/{workspaceId}/labels/{objectId}": {
            "get": {
                "tags": ["workspace-object-controller"],
                "operationId": "getEntity@Labels",
                "parameters": [
                    {
                        "name": "workspaceId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "objectId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "variableParam",
                        "in": "query",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request successfully processed",
                        "content": {
                            "application/vnd.gooddata.api+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JsonApiLabelOutDocument"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/entities/workspaces/{workspaceId}/metrics": {
            "get": {
                "tags": ["workspace-object-controller"],
                "operationId": "getEntities@Metrics",
                "parameters": [
                    {
                        "name": "workspaceId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "variableParam",
                        "in": "query",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "object"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Zero-based page index (0..N)",
                        "schema": {
                            "type": "integer",
                            "default": "0"
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "description": "The size of the page to be returned",
                        "schema": {
                            "type": "integer",
                            "default": "20"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request successfully processed",
                        "content": {
                            "application/vnd.gooddata.api+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JsonApiMetricOutList"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["workspace-object-controller"],
                "operationId": "createEntity@Metrics",
                "parameters": [
                    {
                        "name": "workspaceId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "variableParam",
                        "in": "query",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/vnd.gooddata.api+json": {
                            "schema": {
                                "$ref": "#/components/schemas/JsonApiMetricInDocument"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Request successfully processed",
                        "content": {
                            "application/vnd.gooddata.api+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JsonApiMetricOutDocument"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/entities/workspaces/{workspaceId}/metrics/{objectId}": {
            "get": {
                "tags": ["workspace-object-controller"],
                "operationId": "getEntity@Metrics",
                "parameters": [
                    {
                        "name": "workspaceId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "objectId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "variableParam",
                        "in": "query",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request successfully processed",
                        "content": {
                            "application/vnd.gooddata.api+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JsonApiMetricOutDocument"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": ["workspace-object-controller"],
                "operationId": "updateEntity@Metrics",
                "parameters": [
                    {
                        "name": "workspaceId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "objectId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "variableParam",
                        "in": "query",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/vnd.gooddata.api+json": {
                            "schema": {
                                "$ref": "#/components/schemas/JsonApiMetricInDocument"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Request successfully processed",
                        "content": {
                            "application/vnd.gooddata.api+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JsonApiMetricOutDocument"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": ["workspace-object-controller"],
                "operationId": "deleteEntity@Metrics",
                "parameters": [
                    {
                        "name": "workspaceId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "objectId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "variableParam",
                        "in": "query",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successfully deleted"
                    }
                }
            }
        },
        "/api/entities/workspaces/{workspaceId}/sources": {
            "get": {
                "tags": ["workspace-object-controller"],
                "operationId": "getEntities@Sources",
                "parameters": [
                    {
                        "name": "workspaceId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "variableParam",
                        "in": "query",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "object"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Zero-based page index (0..N)",
                        "schema": {
                            "type": "integer",
                            "default": "0"
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "description": "The size of the page to be returned",
                        "schema": {
                            "type": "integer",
                            "default": "20"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request successfully processed",
                        "content": {
                            "application/vnd.gooddata.api+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JsonApiSourceTablesOutList"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/entities/workspaces/{workspaceId}/sources/{objectId}": {
            "get": {
                "tags": ["workspace-object-controller"],
                "operationId": "getEntity@Sources",
                "parameters": [
                    {
                        "name": "workspaceId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "objectId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "variableParam",
                        "in": "query",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request successfully processed",
                        "content": {
                            "application/vnd.gooddata.api+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JsonApiSourceTablesOutDocument"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/entities/workspaces/{workspaceId}/tables": {
            "get": {
                "tags": ["workspace-object-controller"],
                "operationId": "getEntities@Tables",
                "parameters": [
                    {
                        "name": "workspaceId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "variableParam",
                        "in": "query",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "object"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Zero-based page index (0..N)",
                        "schema": {
                            "type": "integer",
                            "default": "0"
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "description": "The size of the page to be returned",
                        "schema": {
                            "type": "integer",
                            "default": "20"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request successfully processed",
                        "content": {
                            "application/vnd.gooddata.api+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JsonApiSourceTableOutList"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/entities/workspaces/{workspaceId}/tables/{objectId}": {
            "get": {
                "tags": ["workspace-object-controller"],
                "operationId": "getEntity@Tables",
                "parameters": [
                    {
                        "name": "workspaceId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "objectId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "variableParam",
                        "in": "query",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request successfully processed",
                        "content": {
                            "application/vnd.gooddata.api+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JsonApiSourceTableOutDocument"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/entities/workspaces/{workspaceId}/visualizationObjects": {
            "get": {
                "tags": ["workspace-object-controller"],
                "operationId": "getEntities@VisualizationObjects",
                "parameters": [
                    {
                        "name": "workspaceId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "variableParam",
                        "in": "query",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "object"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Zero-based page index (0..N)",
                        "schema": {
                            "type": "integer",
                            "default": "0"
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "description": "The size of the page to be returned",
                        "schema": {
                            "type": "integer",
                            "default": "20"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request successfully processed",
                        "content": {
                            "application/vnd.gooddata.api+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JsonApiVisualizationObjectOutList"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["workspace-object-controller"],
                "operationId": "createEntity@VisualizationObjects",
                "parameters": [
                    {
                        "name": "workspaceId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "variableParam",
                        "in": "query",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/vnd.gooddata.api+json": {
                            "schema": {
                                "$ref": "#/components/schemas/JsonApiVisualizationObjectInDocument"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Request successfully processed",
                        "content": {
                            "application/vnd.gooddata.api+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JsonApiVisualizationObjectOutDocument"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/entities/workspaces/{workspaceId}/visualizationObjects/{objectId}": {
            "get": {
                "tags": ["workspace-object-controller"],
                "operationId": "getEntity@VisualizationObjects",
                "parameters": [
                    {
                        "name": "workspaceId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "objectId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "variableParam",
                        "in": "query",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request successfully processed",
                        "content": {
                            "application/vnd.gooddata.api+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JsonApiVisualizationObjectOutDocument"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": ["workspace-object-controller"],
                "operationId": "updateEntity@VisualizationObjects",
                "parameters": [
                    {
                        "name": "workspaceId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "objectId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "variableParam",
                        "in": "query",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/vnd.gooddata.api+json": {
                            "schema": {
                                "$ref": "#/components/schemas/JsonApiVisualizationObjectInDocument"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Request successfully processed",
                        "content": {
                            "application/vnd.gooddata.api+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JsonApiVisualizationObjectOutDocument"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": ["workspace-object-controller"],
                "operationId": "deleteEntity@VisualizationObjects",
                "parameters": [
                    {
                        "name": "workspaceId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "objectId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "variableParam",
                        "in": "query",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successfully deleted"
                    }
                }
            }
        },
        "/api/entities/workspaces/{workspaceId}/workspaceDataFilterSettings": {
            "get": {
                "tags": ["workspace-object-controller"],
                "operationId": "getEntities@WorkspaceDataFilterSettings",
                "parameters": [
                    {
                        "name": "workspaceId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "variableParam",
                        "in": "query",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "object"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Zero-based page index (0..N)",
                        "schema": {
                            "type": "integer",
                            "default": "0"
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "description": "The size of the page to be returned",
                        "schema": {
                            "type": "integer",
                            "default": "20"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request successfully processed",
                        "content": {
                            "application/vnd.gooddata.api+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JsonApiWorkspaceDataFilterSettingOutList"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/entities/workspaces/{workspaceId}/workspaceDataFilterSettings/{objectId}": {
            "get": {
                "tags": ["workspace-object-controller"],
                "operationId": "getEntity@WorkspaceDataFilterSettings",
                "parameters": [
                    {
                        "name": "workspaceId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "objectId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "variableParam",
                        "in": "query",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request successfully processed",
                        "content": {
                            "application/vnd.gooddata.api+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JsonApiWorkspaceDataFilterSettingOutDocument"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/entities/workspaces/{workspaceId}/workspaceDataFilters": {
            "get": {
                "tags": ["workspace-object-controller"],
                "operationId": "getEntities@WorkspaceDataFilters",
                "parameters": [
                    {
                        "name": "workspaceId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "variableParam",
                        "in": "query",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "object"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Zero-based page index (0..N)",
                        "schema": {
                            "type": "integer",
                            "default": "0"
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "description": "The size of the page to be returned",
                        "schema": {
                            "type": "integer",
                            "default": "20"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request successfully processed",
                        "content": {
                            "application/vnd.gooddata.api+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JsonApiWorkspaceDataFilterOutList"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["workspace-object-controller"],
                "operationId": "createEntity@WorkspaceDataFilters",
                "parameters": [
                    {
                        "name": "workspaceId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "variableParam",
                        "in": "query",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/vnd.gooddata.api+json": {
                            "schema": {
                                "$ref": "#/components/schemas/JsonApiWorkspaceDataFilterInDocument"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Request successfully processed",
                        "content": {
                            "application/vnd.gooddata.api+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JsonApiWorkspaceDataFilterOutDocument"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/entities/workspaces/{workspaceId}/workspaceDataFilters/{objectId}": {
            "get": {
                "tags": ["workspace-object-controller"],
                "operationId": "getEntity@WorkspaceDataFilters",
                "parameters": [
                    {
                        "name": "workspaceId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "objectId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "variableParam",
                        "in": "query",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request successfully processed",
                        "content": {
                            "application/vnd.gooddata.api+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JsonApiWorkspaceDataFilterOutDocument"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": ["workspace-object-controller"],
                "operationId": "updateEntity@WorkspaceDataFilters",
                "parameters": [
                    {
                        "name": "workspaceId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "objectId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "variableParam",
                        "in": "query",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/vnd.gooddata.api+json": {
                            "schema": {
                                "$ref": "#/components/schemas/JsonApiWorkspaceDataFilterInDocument"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Request successfully processed",
                        "content": {
                            "application/vnd.gooddata.api+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JsonApiWorkspaceDataFilterOutDocument"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": ["workspace-object-controller"],
                "operationId": "deleteEntity@WorkspaceDataFilters",
                "parameters": [
                    {
                        "name": "workspaceId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "objectId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "variableParam",
                        "in": "query",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successfully deleted"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "DeclarativeAnalyticalDashboard": {
                "required": ["content", "id", "title"],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Analytical dashboard ID.",
                        "example": "revenues-analysis"
                    },
                    "title": {
                        "type": "string",
                        "description": "Analytical dashboard title.",
                        "example": "Revenues analysis"
                    },
                    "description": {
                        "type": "string",
                        "description": "Analytical dashboard description.",
                        "example": "Period to period comparison of revenues in main sectors."
                    },
                    "content": {
                        "$ref": "#/components/schemas/JsonNode"
                    }
                }
            },
            "DeclarativeAnalyticsLayer": {
                "required": ["analyticalDashboards", "filterContexts", "metrics", "visualizationObjects"],
                "type": "object",
                "properties": {
                    "analyticalDashboards": {
                        "type": "array",
                        "description": "A list of analytical dashboards available in the model.",
                        "items": {
                            "$ref": "#/components/schemas/DeclarativeAnalyticalDashboard"
                        }
                    },
                    "filterContexts": {
                        "type": "array",
                        "description": "A list of filter contexts available in the model.",
                        "items": {
                            "$ref": "#/components/schemas/DeclarativeFilterContext"
                        }
                    },
                    "metrics": {
                        "type": "array",
                        "description": "A list of metrics available in the model.",
                        "items": {
                            "$ref": "#/components/schemas/DeclarativeMetric"
                        }
                    },
                    "visualizationObjects": {
                        "type": "array",
                        "description": "A list of visualization objects available in the model.",
                        "items": {
                            "$ref": "#/components/schemas/DeclarativeVisualizationObject"
                        }
                    }
                }
            },
            "DeclarativeAttribute": {
                "required": ["id", "labels", "title"],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Attribute ID.",
                        "example": "attr.customers.customer_name"
                    },
                    "title": {
                        "type": "string",
                        "description": "Attribute title.",
                        "example": "Customer name"
                    },
                    "description": {
                        "type": "string",
                        "description": "Attribute description.",
                        "example": "Customer name including first and last name."
                    },
                    "labels": {
                        "type": "array",
                        "description": "An array of attribute labels.",
                        "items": {
                            "$ref": "#/components/schemas/DeclarativeLabel"
                        }
                    }
                },
                "description": "A dataset attribute."
            },
            "DeclarativeColumn": {
                "required": ["dataType", "name"],
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Column name",
                        "example": "customer_id"
                    },
                    "dataType": {
                        "type": "string",
                        "description": "Column type",
                        "example": "INT",
                        "enum": ["INT", "STRING", "DATE", "NUMERIC", "TIMESTAMP", "BOOLEAN"]
                    }
                },
                "description": "A table column."
            },
            "DeclarativeDataSource": {
                "required": ["name", "tables"],
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Data source name.",
                        "example": "sampleDataSource"
                    },
                    "tables": {
                        "type": "array",
                        "description": "An array of physical database tables.",
                        "items": {
                            "$ref": "#/components/schemas/DeclarativeTable"
                        }
                    }
                },
                "description": "A data source."
            },
            "DeclarativeDataset": {
                "required": ["attributes", "facts", "grain", "id", "references", "sourceTableId", "title"],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The Dataset ID. This ID is further used to refer to this instance of dataset.",
                        "example": "customers"
                    },
                    "title": {
                        "type": "string",
                        "description": "A dataset title.",
                        "example": "Customers"
                    },
                    "description": {
                        "type": "string",
                        "description": "A dataset description.",
                        "example": "The customers of ours."
                    },
                    "grain": {
                        "type": "array",
                        "description": "An array of grain identifiers.",
                        "items": {
                            "$ref": "#/components/schemas/GrainIdentifier"
                        }
                    },
                    "attributes": {
                        "type": "array",
                        "description": "An array of attributes.",
                        "items": {
                            "$ref": "#/components/schemas/DeclarativeAttribute"
                        }
                    },
                    "facts": {
                        "type": "array",
                        "description": "An array of facts.",
                        "items": {
                            "$ref": "#/components/schemas/DeclarativeFact"
                        }
                    },
                    "references": {
                        "type": "array",
                        "description": "An array of references.",
                        "items": {
                            "$ref": "#/components/schemas/DeclarativeReference"
                        }
                    },
                    "sourceTableId": {
                        "type": "string",
                        "description": "A id of the source/originating table for the dataset from the physical data model.",
                        "example": "table.customers"
                    }
                },
                "description": "A dataset defined by its properties."
            },
            "DeclarativeDateDataset": {
                "required": ["granularities", "granularitiesFormatting", "id", "title"],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Date dataset ID.",
                        "example": "date"
                    },
                    "title": {
                        "type": "string",
                        "description": "Date dataset title.",
                        "example": "Date"
                    },
                    "description": {
                        "type": "string",
                        "description": "Date dataset description.",
                        "example": "A customer order date"
                    },
                    "granularitiesFormatting": {
                        "$ref": "#/components/schemas/GranularitiesFormatting"
                    },
                    "granularities": {
                        "type": "array",
                        "description": "An array of date granularities. All listed granularities will be available for date dataset.",
                        "items": {
                            "type": "string",
                            "enum": [
                                "MINUTE",
                                "HOUR",
                                "DAY",
                                "WEEK",
                                "MONTH",
                                "QUARTER",
                                "YEAR",
                                "MINUTE_OF_HOUR",
                                "HOUR_OF_DAY",
                                "DAY_OF_WEEK",
                                "DAY_OF_MONTH",
                                "DAY_OF_YEAR",
                                "WEEK_OF_YEAR",
                                "MONTH_OF_YEAR",
                                "QUARTER_OF_YEAR"
                            ]
                        }
                    }
                },
                "description": "A date dataset."
            },
            "DeclarativeFact": {
                "required": ["id", "sourceColumn", "title"],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Fact ID.",
                        "example": "fact.customer_order_count"
                    },
                    "title": {
                        "type": "string",
                        "description": "Fact title.",
                        "example": "Customer order count"
                    },
                    "description": {
                        "type": "string",
                        "description": "Fact description.",
                        "example": "A number of orders created by the customer - including all orders, even the non-delivered ones."
                    },
                    "sourceColumn": {
                        "type": "string",
                        "description": "A name of the source column in the table.",
                        "example": "customer_order_count"
                    }
                },
                "description": "A dataset fact."
            },
            "DeclarativeFilterContext": {
                "required": ["content", "id", "title"],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Filter Context ID.",
                        "example": "filter-sales"
                    },
                    "title": {
                        "type": "string",
                        "description": "Filter Context title.",
                        "example": "Filter Context for Sales team"
                    },
                    "description": {
                        "type": "string",
                        "description": "Filter Context description.",
                        "example": "Filter Context for Sales team."
                    },
                    "content": {
                        "$ref": "#/components/schemas/JsonNode"
                    }
                }
            },
            "DeclarativeLabel": {
                "required": ["id", "primary", "sourceColumn", "title"],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Label ID.",
                        "example": "label.customer_name"
                    },
                    "title": {
                        "type": "string",
                        "description": "Label title.",
                        "example": "Customer name"
                    },
                    "description": {
                        "type": "string",
                        "description": "Label description.",
                        "example": "Customer name"
                    },
                    "primary": {
                        "type": "boolean",
                        "description": "A flag indicating whether the label should be treated as a primary one.",
                        "example": false
                    },
                    "sourceColumn": {
                        "type": "string",
                        "description": "A name of the source column in the table.",
                        "example": "customer_name"
                    }
                },
                "description": "A attribute label."
            },
            "DeclarativeLdm": {
                "required": ["datasets", "dateInstances"],
                "type": "object",
                "properties": {
                    "datasets": {
                        "type": "array",
                        "description": "An array containing datasets.",
                        "items": {
                            "$ref": "#/components/schemas/DeclarativeDataset"
                        }
                    },
                    "dateInstances": {
                        "type": "array",
                        "description": "An array containing date-related datasets.",
                        "items": {
                            "$ref": "#/components/schemas/DeclarativeDateDataset"
                        }
                    }
                },
                "description": "A logical data model (LDM) representation."
            },
            "DeclarativeMetric": {
                "required": ["content", "id", "title"],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Metric ID.",
                        "example": "total-sales"
                    },
                    "title": {
                        "type": "string",
                        "description": "Metric title.",
                        "example": "Total sales"
                    },
                    "description": {
                        "type": "string",
                        "description": "Metric description.",
                        "example": "Sales for all the data available."
                    },
                    "content": {
                        "$ref": "#/components/schemas/JsonNode"
                    }
                }
            },
            "DeclarativePdm": {
                "required": ["sources"],
                "type": "object",
                "properties": {
                    "sources": {
                        "type": "array",
                        "description": "An array of data sources.",
                        "items": {
                            "$ref": "#/components/schemas/DeclarativeDataSource"
                        }
                    }
                },
                "description": "A physical data model (PDM) representation."
            },
            "DeclarativeReference": {
                "required": ["identifier", "multivalue", "sourceColumns"],
                "type": "object",
                "properties": {
                    "identifier": {
                        "$ref": "#/components/schemas/ReferenceIdentifier"
                    },
                    "multivalue": {
                        "type": "boolean",
                        "description": "The multi-value flag enables many-to-many cardinality for references.",
                        "example": false
                    },
                    "sourceColumns": {
                        "type": "array",
                        "description": "An array of source column names for a given reference.",
                        "example": ["customer_id"],
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "description": "A dataset reference."
            },
            "DeclarativeTable": {
                "required": ["columns", "id", "path"],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Table id.",
                        "example": "table.customers"
                    },
                    "path": {
                        "type": "array",
                        "description": "Path to table.",
                        "example": ["table_schema", "table_name"],
                        "items": {
                            "type": "string",
                            "example": "table_name"
                        }
                    },
                    "columns": {
                        "type": "array",
                        "description": "An array of physical columns",
                        "items": {
                            "$ref": "#/components/schemas/DeclarativeColumn"
                        }
                    }
                },
                "description": "A database table."
            },
            "DeclarativeVisualizationObject": {
                "required": ["content", "id", "title"],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Visualization object ID.",
                        "example": "visualization-1"
                    },
                    "title": {
                        "type": "string",
                        "description": "Visualization object title.",
                        "example": "Count of goods"
                    },
                    "description": {
                        "type": "string",
                        "description": "Visualization object description.",
                        "example": "Simple number for total goods in current production."
                    },
                    "content": {
                        "$ref": "#/components/schemas/JsonNode"
                    }
                }
            },
            "DeclarativeWorkspace": {
                "required": ["id", "model", "name"],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "model": {
                        "$ref": "#/components/schemas/DeclarativeWorkspaceModel"
                    },
                    "parent": {
                        "$ref": "#/components/schemas/WorkspaceIdentifier"
                    }
                }
            },
            "DeclarativeWorkspaceDataFilter": {
                "required": ["columnName", "dataSourceName", "id", "title", "workspaceDataFilterSettings"],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Workspace Data Filters ID. This ID is further used to refer to this instance.",
                        "example": "country_id"
                    },
                    "title": {
                        "type": "string",
                        "description": "Workspace Data Filters title.",
                        "example": "Country ID"
                    },
                    "description": {
                        "type": "string",
                        "description": "Workspace Data Filters description.",
                        "example": "ID of country"
                    },
                    "columnName": {
                        "type": "string",
                        "description": "Workspace Data Filters column name. Data are filtered using this physical column.",
                        "example": "country_id"
                    },
                    "dataSourceName": {
                        "type": "string",
                        "description": "Data source name (ID). Workspace Data Filters must always be connected to single data source.",
                        "example": "sampleDataSource"
                    },
                    "workspaceDataFilterSettings": {
                        "type": "array",
                        "description": "Filter settings specifying values of filters valid for the workspace.",
                        "items": {
                            "$ref": "#/components/schemas/DeclarativeWorkspaceDataFilterSetting"
                        }
                    },
                    "workspace": {
                        "$ref": "#/components/schemas/WorkspaceIdentifier"
                    }
                },
                "description": "Workspace Data Filters serving the filtering of what data users can see in workspaces."
            },
            "DeclarativeWorkspaceDataFilterSetting": {
                "required": ["filterValues", "id", "title", "workspace"],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Workspace Data Filters ID. This ID is further used to refer to this instance.",
                        "example": "country_id_setting"
                    },
                    "title": {
                        "type": "string",
                        "description": "Workspace Data Filters setting title.",
                        "example": "Country ID setting"
                    },
                    "description": {
                        "type": "string",
                        "description": "Workspace Data Filters setting description.",
                        "example": "ID of country setting"
                    },
                    "filterValues": {
                        "type": "array",
                        "description": "Only those rows are returned, where columnName from filter matches those values.",
                        "example": ["US"],
                        "items": {
                            "type": "string",
                            "description": "Only those rows are returned, where columnName from filter matches those values.",
                            "example": "[\"US\"]"
                        }
                    },
                    "workspace": {
                        "$ref": "#/components/schemas/WorkspaceIdentifier"
                    }
                },
                "description": "Workspace Data Filters serving the filtering of what data users can see in workspaces."
            },
            "DeclarativeWorkspaceModel": {
                "required": ["analytics", "ldm", "pdm"],
                "type": "object",
                "properties": {
                    "ldm": {
                        "$ref": "#/components/schemas/DeclarativeLdm"
                    },
                    "pdm": {
                        "$ref": "#/components/schemas/DeclarativePdm"
                    },
                    "analytics": {
                        "$ref": "#/components/schemas/DeclarativeAnalyticsLayer"
                    }
                }
            },
            "DeclarativeWorkspaces": {
                "required": ["workspaceDataFilters", "workspaces"],
                "type": "object",
                "properties": {
                    "workspaces": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DeclarativeWorkspace"
                        }
                    },
                    "workspaceDataFilters": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DeclarativeWorkspaceDataFilter"
                        }
                    }
                }
            },
            "GrainIdentifier": {
                "required": ["id", "type"],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Grain ID.",
                        "example": "attr.customers.customer_name"
                    },
                    "type": {
                        "type": "string",
                        "description": "A type of the grain.",
                        "example": "ATTRIBUTE",
                        "enum": ["attribute", "dataset"]
                    }
                },
                "description": "A grain identifier."
            },
            "GranularitiesFormatting": {
                "required": ["titleBase", "titlePattern"],
                "type": "object",
                "properties": {
                    "titleBase": {
                        "type": "string",
                        "description": "Title base is used as a token in title pattern. If left empty, it is replaced by date dataset title."
                    },
                    "titlePattern": {
                        "type": "string",
                        "description": "This pattern is used to generate the title of attributes and labels that result from the granularities.\nThere are two tokens available: \n* `%titleBase` - represents shared part by all titles, or title of Date Dataset if left empty\n* `%granularityTitle` - represents `DateGranularity` built-in title",
                        "example": "%titleBase - %granularityTitle"
                    }
                },
                "description": "A date dataset granularities title formatting rules."
            },
            "JsonNode": {
                "type": "object",
                "description": "A server agnostic definition of the visualization object in JSON format.",
                "example": {}
            },
            "ReferenceIdentifier": {
                "required": ["id", "type"],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Reference ID.",
                        "example": "customers"
                    },
                    "type": {
                        "type": "string",
                        "description": "A type of the reference.",
                        "example": "DATASET",
                        "enum": ["dataset"]
                    }
                },
                "description": "A reference identifier."
            },
            "WorkspaceIdentifier": {
                "required": ["id", "type"],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string",
                        "enum": ["workspace"]
                    }
                },
                "description": "Store filter into this workspace. Empty if it is part of layout of workspaces.",
                "example": "{ id: demo, type: workspace }"
            },
            "DeclarativeModel": {
                "required": ["ldm", "pdm"],
                "type": "object",
                "properties": {
                    "ldm": {
                        "$ref": "#/components/schemas/DeclarativeLdm"
                    },
                    "pdm": {
                        "$ref": "#/components/schemas/DeclarativePdm"
                    }
                },
                "description": "A data model structured as a set of its attributes."
            },
            "DeclarativeAnalytics": {
                "required": ["analytics"],
                "type": "object",
                "properties": {
                    "analytics": {
                        "$ref": "#/components/schemas/DeclarativeAnalyticsLayer"
                    }
                },
                "description": "Entities describing users' view on data."
            },
            "DeclarativeWorkspaceDataFilters": {
                "required": ["workspaceDataFilters"],
                "type": "object",
                "properties": {
                    "workspaceDataFilters": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DeclarativeWorkspaceDataFilter"
                        }
                    }
                }
            },
            "ObjectLinks": {
                "required": ["self"],
                "type": "object",
                "properties": {
                    "self": {
                        "type": "string",
                        "description": "A string containing the link's URL.",
                        "format": "uri"
                    }
                }
            },
            "ObjectLinksContainer": {
                "type": "object",
                "properties": {
                    "links": {
                        "$ref": "#/components/schemas/ObjectLinks"
                    }
                }
            },
            "ListLinks": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ObjectLinks"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "next": {
                                "type": "string",
                                "description": "A string containing the link's URL for the next page of data.",
                                "format": "uri"
                            }
                        }
                    }
                ]
            },
            "JsonApiRelToOne": {
                "description": "References to other resource objects in a to-one (\\\"relationship\\\"). Relationships can be specified by including a member in a resource's links object.",
                "nullable": true,
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/JsonApiLinkage"
                    }
                ]
            },
            "JsonApiRelToMany": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/JsonApiLinkage"
                }
            },
            "JsonApiLinkage": {
                "required": ["id", "type"],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "description": "The \\\"type\\\" and \\\"id\\\" to non-empty members."
            },
            "JsonApiApiTokenOutWithLinks": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/JsonApiApiTokenOut"
                    },
                    {
                        "$ref": "#/components/schemas/ObjectLinksContainer"
                    }
                ]
            },
            "JsonApiApiTokenOutList": {
                "required": ["data"],
                "type": "object",
                "properties": {
                    "data": {
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/JsonApiApiTokenOutWithLinks"
                        }
                    },
                    "links": {
                        "$ref": "#/components/schemas/ListLinks"
                    }
                },
                "description": "A JSON:API document with a list of resources"
            },
            "JsonApiApiTokenOut": {
                "required": ["id", "type"],
                "type": "object",
                "properties": {
                    "id": {
                        "pattern": "^([.A-Za-z0-9_-]{1,255}:)?[.A-Za-z0-9_-]{1,255}$",
                        "type": "string",
                        "description": "API identifier of an object",
                        "example": "id1"
                    },
                    "type": {
                        "type": "string",
                        "description": "Object type",
                        "example": "apiToken"
                    },
                    "attributes": {
                        "type": "object",
                        "properties": {
                            "bearerToken": {
                                "type": "string"
                            }
                        }
                    }
                },
                "description": "JSON:API representation of apiToken entity."
            },
            "JsonApiACLOutDocument": {
                "required": ["data"],
                "type": "object",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/JsonApiACLOut"
                    },
                    "links": {
                        "$ref": "#/components/schemas/ObjectLinks"
                    },
                    "included": {
                        "uniqueItems": true,
                        "type": "array",
                        "description": "Included resources",
                        "items": {
                            "anyOf": [
                                {
                                    "$ref": "#/components/schemas/JsonApiUserOutWithLinks"
                                },
                                {
                                    "$ref": "#/components/schemas/JsonApiUserGroupOutWithLinks"
                                }
                            ]
                        }
                    }
                }
            },
            "JsonApiACLOut": {
                "required": ["id", "type"],
                "type": "object",
                "properties": {
                    "id": {
                        "pattern": "^([.A-Za-z0-9_-]{1,255}:)?[.A-Za-z0-9_-]{1,255}$",
                        "type": "string",
                        "description": "API identifier of an object",
                        "example": "id1"
                    },
                    "type": {
                        "type": "string",
                        "description": "Object type",
                        "example": "acl"
                    },
                    "attributes": {
                        "type": "object",
                        "properties": {
                            "access": {
                                "type": "string",
                                "enum": ["FULL_ACCESS"]
                            },
                            "priority": {
                                "type": "integer",
                                "format": "int32"
                            },
                            "control": {
                                "type": "string",
                                "enum": ["ALLOW", "DENY"]
                            }
                        }
                    },
                    "relationships": {
                        "type": "object",
                        "properties": {
                            "users": {
                                "type": "object",
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/JsonApiRelToMany"
                                    }
                                }
                            },
                            "userGroups": {
                                "type": "object",
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/JsonApiRelToMany"
                                    }
                                }
                            }
                        }
                    }
                },
                "description": "JSON:API representation of acl entity."
            },
            "JsonApiDataSourceOutDocument": {
                "required": ["data"],
                "type": "object",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/JsonApiDataSourceOut"
                    },
                    "links": {
                        "$ref": "#/components/schemas/ObjectLinks"
                    }
                }
            },
            "JsonApiDataSourceOut": {
                "required": ["id", "type"],
                "type": "object",
                "properties": {
                    "id": {
                        "pattern": "^([.A-Za-z0-9_-]{1,255}:)?[.A-Za-z0-9_-]{1,255}$",
                        "type": "string",
                        "description": "API identifier of an object",
                        "example": "id1"
                    },
                    "type": {
                        "type": "string",
                        "description": "Object type",
                        "example": "dataSource"
                    },
                    "attributes": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string"
                            },
                            "type": {
                                "type": "string",
                                "enum": [
                                    "POSTGRESQL",
                                    "REDSHIFT",
                                    "VERTICA",
                                    "SNOWFLAKE",
                                    "ADS",
                                    "BIGQUERY",
                                    "MSSQL",
                                    "PRESTO"
                                ]
                            },
                            "url": {
                                "type": "string"
                            },
                            "schema": {
                                "type": "string"
                            },
                            "username": {
                                "type": "string"
                            },
                            "uploadId": {
                                "type": "string"
                            },
                            "enableCaching": {
                                "type": "boolean"
                            }
                        }
                    }
                },
                "description": "JSON:API representation of dataSource entity."
            },
            "JsonApiModelModuleOutDocument": {
                "required": ["data"],
                "type": "object",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/JsonApiModelModuleOut"
                    },
                    "links": {
                        "$ref": "#/components/schemas/ObjectLinks"
                    }
                }
            },
            "JsonApiModelModuleOut": {
                "required": ["id", "type"],
                "type": "object",
                "properties": {
                    "id": {
                        "pattern": "^([.A-Za-z0-9_-]{1,255}:)?[.A-Za-z0-9_-]{1,255}$",
                        "type": "string",
                        "description": "API identifier of an object",
                        "example": "id1"
                    },
                    "type": {
                        "type": "string",
                        "description": "Object type",
                        "example": "modelModule"
                    },
                    "attributes": {
                        "type": "object"
                    }
                },
                "description": "JSON:API representation of modelModule entity."
            },
            "JsonApiOrganizationOutDocument": {
                "required": ["data"],
                "type": "object",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/JsonApiOrganizationOut"
                    },
                    "links": {
                        "$ref": "#/components/schemas/ObjectLinks"
                    },
                    "included": {
                        "uniqueItems": true,
                        "type": "array",
                        "description": "Included resources",
                        "items": {
                            "anyOf": [
                                {
                                    "$ref": "#/components/schemas/JsonApiUserOutWithLinks"
                                },
                                {
                                    "$ref": "#/components/schemas/JsonApiUserGroupOutWithLinks"
                                }
                            ]
                        }
                    }
                }
            },
            "JsonApiOrganizationOut": {
                "required": ["id", "type"],
                "type": "object",
                "properties": {
                    "id": {
                        "pattern": "^([.A-Za-z0-9_-]{1,255}:)?[.A-Za-z0-9_-]{1,255}$",
                        "type": "string",
                        "description": "API identifier of an object",
                        "example": "id1"
                    },
                    "type": {
                        "type": "string",
                        "description": "Object type",
                        "example": "organization"
                    },
                    "attributes": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string"
                            },
                            "hostname": {
                                "type": "string"
                            },
                            "oauthIssuerLocation": {
                                "type": "string"
                            },
                            "oauthClientId": {
                                "type": "string"
                            }
                        }
                    },
                    "relationships": {
                        "type": "object",
                        "properties": {
                            "user": {
                                "type": "object",
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/JsonApiRelToOne"
                                    }
                                }
                            },
                            "userGroup": {
                                "type": "object",
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/JsonApiRelToOne"
                                    }
                                }
                            }
                        }
                    }
                },
                "description": "JSON:API representation of organization entity."
            },
            "JsonApiUserGroupOutDocument": {
                "required": ["data"],
                "type": "object",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/JsonApiUserGroupOut"
                    },
                    "links": {
                        "$ref": "#/components/schemas/ObjectLinks"
                    },
                    "included": {
                        "uniqueItems": true,
                        "type": "array",
                        "description": "Included resources",
                        "items": {
                            "anyOf": [
                                {
                                    "$ref": "#/components/schemas/JsonApiUserGroupOutWithLinks"
                                },
                                {
                                    "$ref": "#/components/schemas/JsonApiACLOutWithLinks"
                                }
                            ]
                        }
                    }
                }
            },
            "JsonApiUserGroupOut": {
                "required": ["id", "type"],
                "type": "object",
                "properties": {
                    "id": {
                        "pattern": "^([.A-Za-z0-9_-]{1,255}:)?[.A-Za-z0-9_-]{1,255}$",
                        "type": "string",
                        "description": "API identifier of an object",
                        "example": "id1"
                    },
                    "type": {
                        "type": "string",
                        "description": "Object type",
                        "example": "userGroup"
                    },
                    "attributes": {
                        "type": "object"
                    },
                    "relationships": {
                        "type": "object",
                        "properties": {
                            "userGroup": {
                                "type": "object",
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/JsonApiRelToOne"
                                    }
                                }
                            },
                            "acls": {
                                "type": "object",
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/JsonApiRelToMany"
                                    }
                                }
                            }
                        }
                    }
                },
                "description": "JSON:API representation of userGroup entity."
            },
            "JsonApiUserOutDocument": {
                "required": ["data"],
                "type": "object",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/JsonApiUserOut"
                    },
                    "links": {
                        "$ref": "#/components/schemas/ObjectLinks"
                    },
                    "included": {
                        "uniqueItems": true,
                        "type": "array",
                        "description": "Included resources",
                        "items": {
                            "anyOf": [
                                {
                                    "$ref": "#/components/schemas/JsonApiUserGroupOutWithLinks"
                                },
                                {
                                    "$ref": "#/components/schemas/JsonApiACLOutWithLinks"
                                }
                            ]
                        }
                    }
                }
            },
            "JsonApiUserOut": {
                "required": ["id", "type"],
                "type": "object",
                "properties": {
                    "id": {
                        "pattern": "^([.A-Za-z0-9_-]{1,255}:)?[.A-Za-z0-9_-]{1,255}$",
                        "type": "string",
                        "description": "API identifier of an object",
                        "example": "id1"
                    },
                    "type": {
                        "type": "string",
                        "description": "Object type",
                        "example": "user"
                    },
                    "attributes": {
                        "type": "object",
                        "properties": {
                            "authenticationId": {
                                "type": "string"
                            }
                        }
                    },
                    "relationships": {
                        "type": "object",
                        "properties": {
                            "userGroup": {
                                "type": "object",
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/JsonApiRelToOne"
                                    }
                                }
                            },
                            "acls": {
                                "type": "object",
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/JsonApiRelToMany"
                                    }
                                }
                            }
                        }
                    }
                },
                "description": "JSON:API representation of user entity."
            },
            "JsonApiWorkspaceOutDocument": {
                "required": ["data"],
                "type": "object",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/JsonApiWorkspaceOut"
                    },
                    "links": {
                        "$ref": "#/components/schemas/ObjectLinks"
                    },
                    "included": {
                        "uniqueItems": true,
                        "type": "array",
                        "description": "Included resources",
                        "items": {
                            "anyOf": [
                                {
                                    "$ref": "#/components/schemas/JsonApiWorkspaceOutWithLinks"
                                }
                            ]
                        }
                    }
                }
            },
            "JsonApiWorkspaceOut": {
                "required": ["id", "type"],
                "type": "object",
                "properties": {
                    "id": {
                        "pattern": "^([.A-Za-z0-9_-]{1,255}:)?[.A-Za-z0-9_-]{1,255}$",
                        "type": "string",
                        "description": "API identifier of an object",
                        "example": "id1"
                    },
                    "type": {
                        "type": "string",
                        "description": "Object type",
                        "example": "workspace"
                    },
                    "attributes": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string"
                            }
                        }
                    },
                    "relationships": {
                        "type": "object",
                        "properties": {
                            "workspace": {
                                "type": "object",
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/JsonApiRelToOne"
                                    }
                                }
                            }
                        }
                    }
                },
                "description": "JSON:API representation of workspace entity."
            },
            "JsonApiAttributeOutWithLinks": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/JsonApiAttributeOut"
                    },
                    {
                        "$ref": "#/components/schemas/ObjectLinksContainer"
                    }
                ]
            },
            "JsonApiAttributeOutList": {
                "required": ["data"],
                "type": "object",
                "properties": {
                    "data": {
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/JsonApiAttributeOutWithLinks"
                        }
                    },
                    "links": {
                        "$ref": "#/components/schemas/ListLinks"
                    },
                    "included": {
                        "uniqueItems": true,
                        "type": "array",
                        "description": "Included resources",
                        "items": {
                            "anyOf": [
                                {
                                    "$ref": "#/components/schemas/JsonApiDatasetOutWithLinks"
                                },
                                {
                                    "$ref": "#/components/schemas/JsonApiLabelOutWithLinks"
                                }
                            ]
                        }
                    }
                },
                "description": "A JSON:API document with a list of resources"
            },
            "JsonApiAttributeOut": {
                "required": ["id", "type"],
                "type": "object",
                "properties": {
                    "id": {
                        "pattern": "^([.A-Za-z0-9_-]{1,255}:)?[.A-Za-z0-9_-]{1,255}$",
                        "type": "string",
                        "description": "API identifier of an object",
                        "example": "id1"
                    },
                    "type": {
                        "type": "string",
                        "description": "Object type",
                        "example": "attribute"
                    },
                    "attributes": {
                        "type": "object",
                        "properties": {
                            "title": {
                                "type": "string"
                            },
                            "description": {
                                "type": "string"
                            },
                            "tags": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "granularity": {
                                "type": "string",
                                "enum": [
                                    "MINUTE",
                                    "HOUR",
                                    "DAY",
                                    "WEEK",
                                    "MONTH",
                                    "QUARTER",
                                    "YEAR",
                                    "MINUTE_OF_HOUR",
                                    "HOUR_OF_DAY",
                                    "DAY_OF_WEEK",
                                    "DAY_OF_MONTH",
                                    "DAY_OF_YEAR",
                                    "WEEK_OF_YEAR",
                                    "MONTH_OF_YEAR",
                                    "QUARTER_OF_YEAR"
                                ]
                            }
                        }
                    },
                    "relationships": {
                        "type": "object",
                        "properties": {
                            "dataset": {
                                "type": "object",
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/JsonApiRelToOne"
                                    }
                                }
                            },
                            "labels": {
                                "type": "object",
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/JsonApiRelToMany"
                                    }
                                }
                            }
                        }
                    }
                },
                "description": "JSON:API representation of attribute entity."
            },
            "JsonApiDatasetOutWithLinks": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/JsonApiDatasetOut"
                    },
                    {
                        "$ref": "#/components/schemas/ObjectLinksContainer"
                    }
                ]
            },
            "JsonApiDatasetOutList": {
                "required": ["data"],
                "type": "object",
                "properties": {
                    "data": {
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/JsonApiDatasetOutWithLinks"
                        }
                    },
                    "links": {
                        "$ref": "#/components/schemas/ListLinks"
                    },
                    "included": {
                        "uniqueItems": true,
                        "type": "array",
                        "description": "Included resources",
                        "items": {
                            "anyOf": [
                                {
                                    "$ref": "#/components/schemas/JsonApiSourceTableOutWithLinks"
                                },
                                {
                                    "$ref": "#/components/schemas/JsonApiAttributeOutWithLinks"
                                },
                                {
                                    "$ref": "#/components/schemas/JsonApiFactOutWithLinks"
                                },
                                {
                                    "$ref": "#/components/schemas/JsonApiDatasetOutWithLinks"
                                }
                            ]
                        }
                    }
                },
                "description": "A JSON:API document with a list of resources"
            },
            "JsonApiDatasetOut": {
                "required": ["id", "type"],
                "type": "object",
                "properties": {
                    "id": {
                        "pattern": "^([.A-Za-z0-9_-]{1,255}:)?[.A-Za-z0-9_-]{1,255}$",
                        "type": "string",
                        "description": "API identifier of an object",
                        "example": "id1"
                    },
                    "type": {
                        "type": "string",
                        "description": "Object type",
                        "example": "dataset"
                    },
                    "attributes": {
                        "type": "object",
                        "properties": {
                            "title": {
                                "type": "string"
                            },
                            "description": {
                                "type": "string"
                            },
                            "tags": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "type": {
                                "type": "string",
                                "enum": ["NORMAL", "DATE"]
                            },
                            "grain": {
                                "type": "array",
                                "items": {
                                    "required": ["id", "type"],
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "string"
                                        },
                                        "type": {
                                            "type": "string",
                                            "enum": ["attribute", "dataset"]
                                        }
                                    }
                                }
                            },
                            "referenceProperties": {
                                "type": "array",
                                "items": {
                                    "required": ["identifier", "multivalue", "sourceColumns"],
                                    "type": "object",
                                    "properties": {
                                        "identifier": {
                                            "$ref": "#/components/schemas/DatasetReferenceIdentifier"
                                        },
                                        "multivalue": {
                                            "type": "boolean"
                                        },
                                        "sourceColumns": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "relationships": {
                        "type": "object",
                        "properties": {
                            "table": {
                                "type": "object",
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/JsonApiRelToOne"
                                    }
                                }
                            },
                            "attributes": {
                                "type": "object",
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/JsonApiRelToMany"
                                    }
                                }
                            },
                            "facts": {
                                "type": "object",
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/JsonApiRelToMany"
                                    }
                                }
                            },
                            "datasets": {
                                "type": "object",
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/JsonApiRelToMany"
                                    }
                                }
                            }
                        }
                    }
                },
                "description": "JSON:API representation of dataset entity."
            },
            "DatasetReferenceIdentifier": {
                "required": ["id", "type"],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string",
                        "enum": ["dataset"]
                    }
                }
            },
            "JsonApiFactOutWithLinks": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/JsonApiFactOut"
                    },
                    {
                        "$ref": "#/components/schemas/ObjectLinksContainer"
                    }
                ]
            },
            "JsonApiFactOutList": {
                "required": ["data"],
                "type": "object",
                "properties": {
                    "data": {
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/JsonApiFactOutWithLinks"
                        }
                    },
                    "links": {
                        "$ref": "#/components/schemas/ListLinks"
                    },
                    "included": {
                        "uniqueItems": true,
                        "type": "array",
                        "description": "Included resources",
                        "items": {
                            "anyOf": [
                                {
                                    "$ref": "#/components/schemas/JsonApiDatasetOutWithLinks"
                                }
                            ]
                        }
                    }
                },
                "description": "A JSON:API document with a list of resources"
            },
            "JsonApiFactOut": {
                "required": ["id", "type"],
                "type": "object",
                "properties": {
                    "id": {
                        "pattern": "^([.A-Za-z0-9_-]{1,255}:)?[.A-Za-z0-9_-]{1,255}$",
                        "type": "string",
                        "description": "API identifier of an object",
                        "example": "id1"
                    },
                    "type": {
                        "type": "string",
                        "description": "Object type",
                        "example": "fact"
                    },
                    "attributes": {
                        "type": "object",
                        "properties": {
                            "title": {
                                "type": "string"
                            },
                            "description": {
                                "type": "string"
                            },
                            "tags": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "sourceColumn": {
                                "type": "string"
                            }
                        }
                    },
                    "relationships": {
                        "type": "object",
                        "properties": {
                            "dataset": {
                                "type": "object",
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/JsonApiRelToOne"
                                    }
                                }
                            }
                        }
                    }
                },
                "description": "JSON:API representation of fact entity."
            },
            "JsonApiLabelOutWithLinks": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/JsonApiLabelOut"
                    },
                    {
                        "$ref": "#/components/schemas/ObjectLinksContainer"
                    }
                ]
            },
            "JsonApiLabelOutList": {
                "required": ["data"],
                "type": "object",
                "properties": {
                    "data": {
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/JsonApiLabelOutWithLinks"
                        }
                    },
                    "links": {
                        "$ref": "#/components/schemas/ListLinks"
                    },
                    "included": {
                        "uniqueItems": true,
                        "type": "array",
                        "description": "Included resources",
                        "items": {
                            "anyOf": [
                                {
                                    "$ref": "#/components/schemas/JsonApiAttributeOutWithLinks"
                                }
                            ]
                        }
                    }
                },
                "description": "A JSON:API document with a list of resources"
            },
            "JsonApiLabelOut": {
                "required": ["id", "type"],
                "type": "object",
                "properties": {
                    "id": {
                        "pattern": "^([.A-Za-z0-9_-]{1,255}:)?[.A-Za-z0-9_-]{1,255}$",
                        "type": "string",
                        "description": "API identifier of an object",
                        "example": "id1"
                    },
                    "type": {
                        "type": "string",
                        "description": "Object type",
                        "example": "label"
                    },
                    "attributes": {
                        "type": "object",
                        "properties": {
                            "title": {
                                "type": "string"
                            },
                            "description": {
                                "type": "string"
                            },
                            "tags": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "primary": {
                                "type": "boolean"
                            },
                            "sourceColumn": {
                                "type": "string"
                            }
                        }
                    },
                    "relationships": {
                        "type": "object",
                        "properties": {
                            "attribute": {
                                "type": "object",
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/JsonApiRelToOne"
                                    }
                                }
                            }
                        }
                    }
                },
                "description": "JSON:API representation of label entity."
            },
            "JsonApiSourceTablesOutWithLinks": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/JsonApiSourceTablesOut"
                    },
                    {
                        "$ref": "#/components/schemas/ObjectLinksContainer"
                    }
                ]
            },
            "JsonApiSourceTablesOutList": {
                "required": ["data"],
                "type": "object",
                "properties": {
                    "data": {
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/JsonApiSourceTablesOutWithLinks"
                        }
                    },
                    "links": {
                        "$ref": "#/components/schemas/ListLinks"
                    },
                    "included": {
                        "uniqueItems": true,
                        "type": "array",
                        "description": "Included resources",
                        "items": {
                            "anyOf": [
                                {
                                    "$ref": "#/components/schemas/JsonApiSourceTableOutWithLinks"
                                }
                            ]
                        }
                    }
                },
                "description": "A JSON:API document with a list of resources"
            },
            "JsonApiSourceTablesOut": {
                "required": ["id", "type"],
                "type": "object",
                "properties": {
                    "id": {
                        "pattern": "^([.A-Za-z0-9_-]{1,255}:)?[.A-Za-z0-9_-]{1,255}$",
                        "type": "string",
                        "description": "API identifier of an object",
                        "example": "id1"
                    },
                    "type": {
                        "type": "string",
                        "description": "Object type",
                        "example": "source"
                    },
                    "attributes": {
                        "type": "object"
                    },
                    "relationships": {
                        "type": "object",
                        "properties": {
                            "tables": {
                                "type": "object",
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/JsonApiRelToMany"
                                    }
                                }
                            }
                        }
                    }
                },
                "description": "A defined data source for analytics data"
            },
            "JsonApiSourceTableOutWithLinks": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/JsonApiSourceTableOut"
                    },
                    {
                        "$ref": "#/components/schemas/ObjectLinksContainer"
                    }
                ]
            },
            "JsonApiSourceTableOutList": {
                "required": ["data"],
                "type": "object",
                "properties": {
                    "data": {
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/JsonApiSourceTableOutWithLinks"
                        }
                    },
                    "links": {
                        "$ref": "#/components/schemas/ListLinks"
                    },
                    "included": {
                        "uniqueItems": true,
                        "type": "array",
                        "description": "Included resources",
                        "items": {
                            "anyOf": [
                                {
                                    "$ref": "#/components/schemas/JsonApiSourceTablesOutWithLinks"
                                }
                            ]
                        }
                    }
                },
                "description": "A JSON:API document with a list of resources"
            },
            "JsonApiSourceTableOut": {
                "required": ["id", "type"],
                "type": "object",
                "properties": {
                    "id": {
                        "pattern": "^([.A-Za-z0-9_-]{1,255}:)?[.A-Za-z0-9_-]{1,255}$",
                        "type": "string",
                        "description": "API identifier of an object",
                        "example": "id1"
                    },
                    "type": {
                        "type": "string",
                        "description": "Object type",
                        "example": "table"
                    },
                    "attributes": {
                        "type": "object",
                        "properties": {
                            "path": {
                                "type": "array",
                                "description": "Path to table.",
                                "example": ["table_schema", "table_name"],
                                "items": {
                                    "type": "string",
                                    "example": "table_name"
                                }
                            },
                            "columns": {
                                "type": "array",
                                "items": {
                                    "required": ["dataType", "name"],
                                    "type": "object",
                                    "properties": {
                                        "name": {
                                            "type": "string"
                                        },
                                        "dataType": {
                                            "type": "string",
                                            "enum": [
                                                "INT",
                                                "STRING",
                                                "DATE",
                                                "NUMERIC",
                                                "TIMESTAMP",
                                                "BOOLEAN"
                                            ]
                                        }
                                    },
                                    "description": "A source table column"
                                }
                            }
                        }
                    },
                    "relationships": {
                        "type": "object",
                        "properties": {
                            "source": {
                                "type": "object",
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/JsonApiRelToOne"
                                    }
                                }
                            }
                        }
                    }
                },
                "description": "A source table"
            },
            "JsonApiAnalyticalDashboardOutWithLinks": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/JsonApiAnalyticalDashboardOut"
                    },
                    {
                        "$ref": "#/components/schemas/ObjectLinksContainer"
                    }
                ]
            },
            "JsonApiAnalyticalDashboardOutList": {
                "required": ["data"],
                "type": "object",
                "properties": {
                    "data": {
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/JsonApiAnalyticalDashboardOutWithLinks"
                        }
                    },
                    "links": {
                        "$ref": "#/components/schemas/ListLinks"
                    },
                    "included": {
                        "uniqueItems": true,
                        "type": "array",
                        "description": "Included resources",
                        "items": {
                            "anyOf": [
                                {
                                    "$ref": "#/components/schemas/JsonApiVisualizationObjectOutWithLinks"
                                },
                                {
                                    "$ref": "#/components/schemas/JsonApiLabelOutWithLinks"
                                },
                                {
                                    "$ref": "#/components/schemas/JsonApiMetricOutWithLinks"
                                },
                                {
                                    "$ref": "#/components/schemas/JsonApiDatasetOutWithLinks"
                                },
                                {
                                    "$ref": "#/components/schemas/JsonApiFilterContextOutWithLinks"
                                }
                            ]
                        }
                    }
                },
                "description": "A JSON:API document with a list of resources"
            },
            "JsonApiAnalyticalDashboardOut": {
                "required": ["id", "type"],
                "type": "object",
                "properties": {
                    "id": {
                        "pattern": "^([.A-Za-z0-9_-]{1,255}:)?[.A-Za-z0-9_-]{1,255}$",
                        "type": "string",
                        "description": "API identifier of an object",
                        "example": "id1"
                    },
                    "type": {
                        "type": "string",
                        "description": "Object type",
                        "example": "analyticalDashboard"
                    },
                    "attributes": {
                        "type": "object",
                        "properties": {
                            "title": {
                                "type": "string"
                            },
                            "description": {
                                "type": "string"
                            },
                            "tags": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "content": {
                                "type": "object",
                                "description": "Free-form JSON content.",
                                "example": {
                                    "identifier": {
                                        "id": "label.leaf",
                                        "type": "label"
                                    },
                                    "someBoolProp": false
                                }
                            }
                        }
                    },
                    "relationships": {
                        "type": "object",
                        "properties": {
                            "visualizationObjects": {
                                "type": "object",
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/JsonApiRelToMany"
                                    }
                                }
                            },
                            "labels": {
                                "type": "object",
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/JsonApiRelToMany"
                                    }
                                }
                            },
                            "metrics": {
                                "type": "object",
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/JsonApiRelToMany"
                                    }
                                }
                            },
                            "datasets": {
                                "type": "object",
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/JsonApiRelToMany"
                                    }
                                }
                            },
                            "filterContexts": {
                                "type": "object",
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/JsonApiRelToMany"
                                    }
                                }
                            }
                        }
                    }
                },
                "description": "JSON:API representation of analyticalDashboard entity."
            },
            "JsonApiFilterContextOutWithLinks": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/JsonApiFilterContextOut"
                    },
                    {
                        "$ref": "#/components/schemas/ObjectLinksContainer"
                    }
                ]
            },
            "JsonApiFilterContextOutList": {
                "required": ["data"],
                "type": "object",
                "properties": {
                    "data": {
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/JsonApiFilterContextOutWithLinks"
                        }
                    },
                    "links": {
                        "$ref": "#/components/schemas/ListLinks"
                    },
                    "included": {
                        "uniqueItems": true,
                        "type": "array",
                        "description": "Included resources",
                        "items": {
                            "anyOf": [
                                {
                                    "$ref": "#/components/schemas/JsonApiAttributeOutWithLinks"
                                },
                                {
                                    "$ref": "#/components/schemas/JsonApiDatasetOutWithLinks"
                                },
                                {
                                    "$ref": "#/components/schemas/JsonApiLabelOutWithLinks"
                                }
                            ]
                        }
                    }
                },
                "description": "A JSON:API document with a list of resources"
            },
            "JsonApiFilterContextOut": {
                "required": ["id", "type"],
                "type": "object",
                "properties": {
                    "id": {
                        "pattern": "^([.A-Za-z0-9_-]{1,255}:)?[.A-Za-z0-9_-]{1,255}$",
                        "type": "string",
                        "description": "API identifier of an object",
                        "example": "id1"
                    },
                    "type": {
                        "type": "string",
                        "description": "Object type",
                        "example": "filterContext"
                    },
                    "attributes": {
                        "type": "object",
                        "properties": {
                            "title": {
                                "type": "string"
                            },
                            "description": {
                                "type": "string"
                            },
                            "tags": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "content": {
                                "type": "object",
                                "description": "Free-form JSON content.",
                                "example": {
                                    "identifier": {
                                        "id": "label.leaf",
                                        "type": "label"
                                    },
                                    "someBoolProp": false
                                }
                            }
                        }
                    },
                    "relationships": {
                        "type": "object",
                        "properties": {
                            "attributes": {
                                "type": "object",
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/JsonApiRelToMany"
                                    }
                                }
                            },
                            "datasets": {
                                "type": "object",
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/JsonApiRelToMany"
                                    }
                                }
                            },
                            "labels": {
                                "type": "object",
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/JsonApiRelToMany"
                                    }
                                }
                            }
                        }
                    }
                },
                "description": "JSON:API representation of filterContext entity."
            },
            "JsonApiMetricOutWithLinks": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/JsonApiMetricOut"
                    },
                    {
                        "$ref": "#/components/schemas/ObjectLinksContainer"
                    }
                ]
            },
            "JsonApiMetricOutList": {
                "required": ["data"],
                "type": "object",
                "properties": {
                    "data": {
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/JsonApiMetricOutWithLinks"
                        }
                    },
                    "links": {
                        "$ref": "#/components/schemas/ListLinks"
                    },
                    "included": {
                        "uniqueItems": true,
                        "type": "array",
                        "description": "Included resources",
                        "items": {
                            "anyOf": [
                                {
                                    "$ref": "#/components/schemas/JsonApiFactOutWithLinks"
                                },
                                {
                                    "$ref": "#/components/schemas/JsonApiAttributeOutWithLinks"
                                },
                                {
                                    "$ref": "#/components/schemas/JsonApiLabelOutWithLinks"
                                },
                                {
                                    "$ref": "#/components/schemas/JsonApiMetricOutWithLinks"
                                }
                            ]
                        }
                    }
                },
                "description": "A JSON:API document with a list of resources"
            },
            "JsonApiMetricOut": {
                "required": ["id", "type"],
                "type": "object",
                "properties": {
                    "id": {
                        "pattern": "^([.A-Za-z0-9_-]{1,255}:)?[.A-Za-z0-9_-]{1,255}$",
                        "type": "string",
                        "description": "API identifier of an object",
                        "example": "id1"
                    },
                    "type": {
                        "type": "string",
                        "description": "Object type",
                        "example": "metric"
                    },
                    "attributes": {
                        "type": "object",
                        "properties": {
                            "title": {
                                "type": "string"
                            },
                            "description": {
                                "type": "string"
                            },
                            "tags": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "content": {
                                "type": "object",
                                "properties": {
                                    "format": {
                                        "type": "string"
                                    },
                                    "maql": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    "relationships": {
                        "type": "object",
                        "properties": {
                            "facts": {
                                "type": "object",
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/JsonApiRelToMany"
                                    }
                                }
                            },
                            "attributes": {
                                "type": "object",
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/JsonApiRelToMany"
                                    }
                                }
                            },
                            "labels": {
                                "type": "object",
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/JsonApiRelToMany"
                                    }
                                }
                            },
                            "metrics": {
                                "type": "object",
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/JsonApiRelToMany"
                                    }
                                }
                            }
                        }
                    }
                },
                "description": "JSON:API representation of metric entity."
            },
            "JsonApiVisualizationObjectOutWithLinks": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/JsonApiVisualizationObjectOut"
                    },
                    {
                        "$ref": "#/components/schemas/ObjectLinksContainer"
                    }
                ]
            },
            "JsonApiVisualizationObjectOutList": {
                "required": ["data"],
                "type": "object",
                "properties": {
                    "data": {
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/JsonApiVisualizationObjectOutWithLinks"
                        }
                    },
                    "links": {
                        "$ref": "#/components/schemas/ListLinks"
                    },
                    "included": {
                        "uniqueItems": true,
                        "type": "array",
                        "description": "Included resources",
                        "items": {
                            "anyOf": [
                                {
                                    "$ref": "#/components/schemas/JsonApiFactOutWithLinks"
                                },
                                {
                                    "$ref": "#/components/schemas/JsonApiAttributeOutWithLinks"
                                },
                                {
                                    "$ref": "#/components/schemas/JsonApiLabelOutWithLinks"
                                },
                                {
                                    "$ref": "#/components/schemas/JsonApiMetricOutWithLinks"
                                },
                                {
                                    "$ref": "#/components/schemas/JsonApiAnalyticalDashboardOutWithLinks"
                                },
                                {
                                    "$ref": "#/components/schemas/JsonApiDatasetOutWithLinks"
                                }
                            ]
                        }
                    }
                },
                "description": "A JSON:API document with a list of resources"
            },
            "JsonApiVisualizationObjectOut": {
                "required": ["id", "type"],
                "type": "object",
                "properties": {
                    "id": {
                        "pattern": "^([.A-Za-z0-9_-]{1,255}:)?[.A-Za-z0-9_-]{1,255}$",
                        "type": "string",
                        "description": "API identifier of an object",
                        "example": "id1"
                    },
                    "type": {
                        "type": "string",
                        "description": "Object type",
                        "example": "visualizationObject"
                    },
                    "attributes": {
                        "type": "object",
                        "properties": {
                            "title": {
                                "type": "string"
                            },
                            "description": {
                                "type": "string"
                            },
                            "tags": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "content": {
                                "type": "object",
                                "description": "Free-form JSON content.",
                                "example": {
                                    "identifier": {
                                        "id": "label.leaf",
                                        "type": "label"
                                    },
                                    "someBoolProp": false
                                }
                            }
                        }
                    },
                    "relationships": {
                        "type": "object",
                        "properties": {
                            "facts": {
                                "type": "object",
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/JsonApiRelToMany"
                                    }
                                }
                            },
                            "attributes": {
                                "type": "object",
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/JsonApiRelToMany"
                                    }
                                }
                            },
                            "labels": {
                                "type": "object",
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/JsonApiRelToMany"
                                    }
                                }
                            },
                            "metrics": {
                                "type": "object",
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/JsonApiRelToMany"
                                    }
                                }
                            },
                            "analyticalDashboards": {
                                "type": "object",
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/JsonApiRelToMany"
                                    }
                                }
                            },
                            "datasets": {
                                "type": "object",
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/JsonApiRelToMany"
                                    }
                                }
                            }
                        }
                    }
                },
                "description": "JSON:API representation of visualizationObject entity."
            },
            "JsonApiWorkspaceDataFilterSettingOutWithLinks": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/JsonApiWorkspaceDataFilterSettingOut"
                    },
                    {
                        "$ref": "#/components/schemas/ObjectLinksContainer"
                    }
                ]
            },
            "JsonApiWorkspaceDataFilterSettingOutList": {
                "required": ["data"],
                "type": "object",
                "properties": {
                    "data": {
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/JsonApiWorkspaceDataFilterSettingOutWithLinks"
                        }
                    },
                    "links": {
                        "$ref": "#/components/schemas/ListLinks"
                    },
                    "included": {
                        "uniqueItems": true,
                        "type": "array",
                        "description": "Included resources",
                        "items": {
                            "anyOf": [
                                {
                                    "$ref": "#/components/schemas/JsonApiWorkspaceDataFilterOutWithLinks"
                                }
                            ]
                        }
                    }
                },
                "description": "A JSON:API document with a list of resources"
            },
            "JsonApiWorkspaceDataFilterSettingOut": {
                "required": ["id", "type"],
                "type": "object",
                "properties": {
                    "id": {
                        "pattern": "^([.A-Za-z0-9_-]{1,255}:)?[.A-Za-z0-9_-]{1,255}$",
                        "type": "string",
                        "description": "API identifier of an object",
                        "example": "id1"
                    },
                    "type": {
                        "type": "string",
                        "description": "Object type",
                        "example": "workspaceDataFilterSetting"
                    },
                    "attributes": {
                        "type": "object",
                        "properties": {
                            "title": {
                                "type": "string"
                            },
                            "description": {
                                "type": "string"
                            },
                            "filterValues": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "relationships": {
                        "type": "object",
                        "properties": {
                            "workspaceDataFilter": {
                                "type": "object",
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/JsonApiRelToOne"
                                    }
                                }
                            }
                        }
                    }
                },
                "description": "JSON:API representation of workspaceDataFilterSetting entity."
            },
            "JsonApiWorkspaceDataFilterOutWithLinks": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/JsonApiWorkspaceDataFilterOut"
                    },
                    {
                        "$ref": "#/components/schemas/ObjectLinksContainer"
                    }
                ]
            },
            "JsonApiWorkspaceDataFilterOutList": {
                "required": ["data"],
                "type": "object",
                "properties": {
                    "data": {
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/JsonApiWorkspaceDataFilterOutWithLinks"
                        }
                    },
                    "links": {
                        "$ref": "#/components/schemas/ListLinks"
                    },
                    "included": {
                        "uniqueItems": true,
                        "type": "array",
                        "description": "Included resources",
                        "items": {
                            "anyOf": [
                                {
                                    "$ref": "#/components/schemas/JsonApiWorkspaceDataFilterSettingOutWithLinks"
                                }
                            ]
                        }
                    }
                },
                "description": "A JSON:API document with a list of resources"
            },
            "JsonApiWorkspaceDataFilterOut": {
                "required": ["id", "type"],
                "type": "object",
                "properties": {
                    "id": {
                        "pattern": "^([.A-Za-z0-9_-]{1,255}:)?[.A-Za-z0-9_-]{1,255}$",
                        "type": "string",
                        "description": "API identifier of an object",
                        "example": "id1"
                    },
                    "type": {
                        "type": "string",
                        "description": "Object type",
                        "example": "workspaceDataFilter"
                    },
                    "attributes": {
                        "type": "object",
                        "properties": {
                            "title": {
                                "type": "string"
                            },
                            "description": {
                                "type": "string"
                            },
                            "columnName": {
                                "type": "string"
                            },
                            "dataSourceName": {
                                "type": "string"
                            }
                        }
                    },
                    "relationships": {
                        "type": "object",
                        "properties": {
                            "workspaceDataFilterSettings": {
                                "type": "object",
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/JsonApiRelToMany"
                                    }
                                }
                            }
                        }
                    }
                },
                "description": "JSON:API representation of workspaceDataFilter entity."
            },
            "JsonApiApiTokenOutDocument": {
                "required": ["data"],
                "type": "object",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/JsonApiApiTokenOut"
                    },
                    "links": {
                        "$ref": "#/components/schemas/ObjectLinks"
                    }
                }
            },
            "JsonApiACLOutWithLinks": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/JsonApiACLOut"
                    },
                    {
                        "$ref": "#/components/schemas/ObjectLinksContainer"
                    }
                ]
            },
            "JsonApiACLOutList": {
                "required": ["data"],
                "type": "object",
                "properties": {
                    "data": {
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/JsonApiACLOutWithLinks"
                        }
                    },
                    "links": {
                        "$ref": "#/components/schemas/ListLinks"
                    },
                    "included": {
                        "uniqueItems": true,
                        "type": "array",
                        "description": "Included resources",
                        "items": {
                            "anyOf": [
                                {
                                    "$ref": "#/components/schemas/JsonApiUserOutWithLinks"
                                },
                                {
                                    "$ref": "#/components/schemas/JsonApiUserGroupOutWithLinks"
                                }
                            ]
                        }
                    }
                },
                "description": "A JSON:API document with a list of resources"
            },
            "JsonApiDataSourceOutWithLinks": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/JsonApiDataSourceOut"
                    },
                    {
                        "$ref": "#/components/schemas/ObjectLinksContainer"
                    }
                ]
            },
            "JsonApiDataSourceOutList": {
                "required": ["data"],
                "type": "object",
                "properties": {
                    "data": {
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/JsonApiDataSourceOutWithLinks"
                        }
                    },
                    "links": {
                        "$ref": "#/components/schemas/ListLinks"
                    }
                },
                "description": "A JSON:API document with a list of resources"
            },
            "JsonApiModelModuleOutWithLinks": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/JsonApiModelModuleOut"
                    },
                    {
                        "$ref": "#/components/schemas/ObjectLinksContainer"
                    }
                ]
            },
            "JsonApiModelModuleOutList": {
                "required": ["data"],
                "type": "object",
                "properties": {
                    "data": {
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/JsonApiModelModuleOutWithLinks"
                        }
                    },
                    "links": {
                        "$ref": "#/components/schemas/ListLinks"
                    }
                },
                "description": "A JSON:API document with a list of resources"
            },
            "JsonApiOrganizationOutWithLinks": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/JsonApiOrganizationOut"
                    },
                    {
                        "$ref": "#/components/schemas/ObjectLinksContainer"
                    }
                ]
            },
            "JsonApiOrganizationOutList": {
                "required": ["data"],
                "type": "object",
                "properties": {
                    "data": {
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/JsonApiOrganizationOutWithLinks"
                        }
                    },
                    "links": {
                        "$ref": "#/components/schemas/ListLinks"
                    },
                    "included": {
                        "uniqueItems": true,
                        "type": "array",
                        "description": "Included resources",
                        "items": {
                            "anyOf": [
                                {
                                    "$ref": "#/components/schemas/JsonApiUserOutWithLinks"
                                },
                                {
                                    "$ref": "#/components/schemas/JsonApiUserGroupOutWithLinks"
                                }
                            ]
                        }
                    }
                },
                "description": "A JSON:API document with a list of resources"
            },
            "JsonApiUserGroupOutWithLinks": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/JsonApiUserGroupOut"
                    },
                    {
                        "$ref": "#/components/schemas/ObjectLinksContainer"
                    }
                ]
            },
            "JsonApiUserGroupOutList": {
                "required": ["data"],
                "type": "object",
                "properties": {
                    "data": {
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/JsonApiUserGroupOutWithLinks"
                        }
                    },
                    "links": {
                        "$ref": "#/components/schemas/ListLinks"
                    },
                    "included": {
                        "uniqueItems": true,
                        "type": "array",
                        "description": "Included resources",
                        "items": {
                            "anyOf": [
                                {
                                    "$ref": "#/components/schemas/JsonApiUserGroupOutWithLinks"
                                },
                                {
                                    "$ref": "#/components/schemas/JsonApiACLOutWithLinks"
                                }
                            ]
                        }
                    }
                },
                "description": "A JSON:API document with a list of resources"
            },
            "JsonApiUserOutWithLinks": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/JsonApiUserOut"
                    },
                    {
                        "$ref": "#/components/schemas/ObjectLinksContainer"
                    }
                ]
            },
            "JsonApiUserOutList": {
                "required": ["data"],
                "type": "object",
                "properties": {
                    "data": {
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/JsonApiUserOutWithLinks"
                        }
                    },
                    "links": {
                        "$ref": "#/components/schemas/ListLinks"
                    },
                    "included": {
                        "uniqueItems": true,
                        "type": "array",
                        "description": "Included resources",
                        "items": {
                            "anyOf": [
                                {
                                    "$ref": "#/components/schemas/JsonApiUserGroupOutWithLinks"
                                },
                                {
                                    "$ref": "#/components/schemas/JsonApiACLOutWithLinks"
                                }
                            ]
                        }
                    }
                },
                "description": "A JSON:API document with a list of resources"
            },
            "JsonApiWorkspaceOutWithLinks": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/JsonApiWorkspaceOut"
                    },
                    {
                        "$ref": "#/components/schemas/ObjectLinksContainer"
                    }
                ]
            },
            "JsonApiWorkspaceOutList": {
                "required": ["data"],
                "type": "object",
                "properties": {
                    "data": {
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/JsonApiWorkspaceOutWithLinks"
                        }
                    },
                    "links": {
                        "$ref": "#/components/schemas/ListLinks"
                    },
                    "included": {
                        "uniqueItems": true,
                        "type": "array",
                        "description": "Included resources",
                        "items": {
                            "anyOf": [
                                {
                                    "$ref": "#/components/schemas/JsonApiWorkspaceOutWithLinks"
                                }
                            ]
                        }
                    }
                },
                "description": "A JSON:API document with a list of resources"
            },
            "JsonApiACLInDocument": {
                "required": ["data"],
                "type": "object",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/JsonApiACLIn"
                    }
                }
            },
            "JsonApiACLIn": {
                "required": ["id", "type"],
                "type": "object",
                "properties": {
                    "id": {
                        "pattern": "^([.A-Za-z0-9_-]{1,255}:)?[.A-Za-z0-9_-]{1,255}$",
                        "type": "string",
                        "description": "API identifier of an object",
                        "example": "id1"
                    },
                    "type": {
                        "type": "string",
                        "description": "Object type",
                        "example": "acl"
                    },
                    "attributes": {
                        "type": "object",
                        "properties": {
                            "access": {
                                "type": "string",
                                "enum": ["FULL_ACCESS"]
                            },
                            "priority": {
                                "type": "integer",
                                "format": "int32"
                            },
                            "control": {
                                "type": "string",
                                "enum": ["ALLOW", "DENY"]
                            }
                        }
                    },
                    "relationships": {
                        "type": "object",
                        "properties": {
                            "users": {
                                "type": "object",
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/JsonApiRelToMany"
                                    }
                                }
                            },
                            "userGroups": {
                                "type": "object",
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/JsonApiRelToMany"
                                    }
                                }
                            }
                        }
                    }
                },
                "description": "JSON:API representation of acl entity."
            },
            "JsonApiDataSourceInDocument": {
                "required": ["data"],
                "type": "object",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/JsonApiDataSourceIn"
                    }
                }
            },
            "JsonApiDataSourceIn": {
                "required": ["id", "type"],
                "type": "object",
                "properties": {
                    "id": {
                        "pattern": "^([.A-Za-z0-9_-]{1,255}:)?[.A-Za-z0-9_-]{1,255}$",
                        "type": "string",
                        "description": "API identifier of an object",
                        "example": "id1"
                    },
                    "type": {
                        "type": "string",
                        "description": "Object type",
                        "example": "dataSource"
                    },
                    "attributes": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string"
                            },
                            "type": {
                                "type": "string",
                                "enum": [
                                    "POSTGRESQL",
                                    "REDSHIFT",
                                    "VERTICA",
                                    "SNOWFLAKE",
                                    "ADS",
                                    "BIGQUERY",
                                    "MSSQL",
                                    "PRESTO"
                                ]
                            },
                            "url": {
                                "type": "string"
                            },
                            "schema": {
                                "type": "string"
                            },
                            "username": {
                                "type": "string"
                            },
                            "password": {
                                "type": "string"
                            },
                            "uploadId": {
                                "type": "string"
                            },
                            "enableCaching": {
                                "type": "boolean"
                            }
                        }
                    }
                },
                "description": "JSON:API representation of dataSource entity."
            },
            "JsonApiModelModuleInDocument": {
                "required": ["data"],
                "type": "object",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/JsonApiModelModuleIn"
                    }
                }
            },
            "JsonApiModelModuleIn": {
                "required": ["id", "type"],
                "type": "object",
                "properties": {
                    "id": {
                        "pattern": "^([.A-Za-z0-9_-]{1,255}:)?[.A-Za-z0-9_-]{1,255}$",
                        "type": "string",
                        "description": "API identifier of an object",
                        "example": "id1"
                    },
                    "type": {
                        "type": "string",
                        "description": "Object type",
                        "example": "modelModule"
                    },
                    "attributes": {
                        "type": "object"
                    }
                },
                "description": "JSON:API representation of modelModule entity."
            },
            "JsonApiOrganizationInDocument": {
                "required": ["data"],
                "type": "object",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/JsonApiOrganizationIn"
                    }
                }
            },
            "JsonApiOrganizationIn": {
                "required": ["id", "type"],
                "type": "object",
                "properties": {
                    "id": {
                        "pattern": "^([.A-Za-z0-9_-]{1,255}:)?[.A-Za-z0-9_-]{1,255}$",
                        "type": "string",
                        "description": "API identifier of an object",
                        "example": "id1"
                    },
                    "type": {
                        "type": "string",
                        "description": "Object type",
                        "example": "organization"
                    },
                    "attributes": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string"
                            },
                            "hostname": {
                                "type": "string"
                            },
                            "oauthIssuerLocation": {
                                "type": "string"
                            },
                            "oauthClientId": {
                                "type": "string"
                            },
                            "oauthClientSecret": {
                                "type": "string"
                            }
                        }
                    }
                },
                "description": "JSON:API representation of organization entity."
            },
            "JsonApiUserGroupInDocument": {
                "required": ["data"],
                "type": "object",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/JsonApiUserGroupIn"
                    }
                }
            },
            "JsonApiUserGroupIn": {
                "required": ["id", "type"],
                "type": "object",
                "properties": {
                    "id": {
                        "pattern": "^([.A-Za-z0-9_-]{1,255}:)?[.A-Za-z0-9_-]{1,255}$",
                        "type": "string",
                        "description": "API identifier of an object",
                        "example": "id1"
                    },
                    "type": {
                        "type": "string",
                        "description": "Object type",
                        "example": "userGroup"
                    },
                    "attributes": {
                        "type": "object"
                    },
                    "relationships": {
                        "type": "object",
                        "properties": {
                            "userGroup": {
                                "type": "object",
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/JsonApiRelToOne"
                                    }
                                }
                            },
                            "acls": {
                                "type": "object",
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/JsonApiRelToMany"
                                    }
                                }
                            }
                        }
                    }
                },
                "description": "JSON:API representation of userGroup entity."
            },
            "JsonApiUserInDocument": {
                "required": ["data"],
                "type": "object",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/JsonApiUserIn"
                    }
                }
            },
            "JsonApiUserIn": {
                "required": ["id", "type"],
                "type": "object",
                "properties": {
                    "id": {
                        "pattern": "^([.A-Za-z0-9_-]{1,255}:)?[.A-Za-z0-9_-]{1,255}$",
                        "type": "string",
                        "description": "API identifier of an object",
                        "example": "id1"
                    },
                    "type": {
                        "type": "string",
                        "description": "Object type",
                        "example": "user"
                    },
                    "attributes": {
                        "type": "object",
                        "properties": {
                            "authenticationId": {
                                "type": "string"
                            }
                        }
                    },
                    "relationships": {
                        "type": "object",
                        "properties": {
                            "userGroup": {
                                "type": "object",
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/JsonApiRelToOne"
                                    }
                                }
                            },
                            "acls": {
                                "type": "object",
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/JsonApiRelToMany"
                                    }
                                }
                            }
                        }
                    }
                },
                "description": "JSON:API representation of user entity."
            },
            "JsonApiWorkspaceInDocument": {
                "required": ["data"],
                "type": "object",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/JsonApiWorkspaceIn"
                    }
                }
            },
            "JsonApiWorkspaceIn": {
                "required": ["id", "type"],
                "type": "object",
                "properties": {
                    "id": {
                        "pattern": "^([.A-Za-z0-9_-]{1,255}:)?[.A-Za-z0-9_-]{1,255}$",
                        "type": "string",
                        "description": "API identifier of an object",
                        "example": "id1"
                    },
                    "type": {
                        "type": "string",
                        "description": "Object type",
                        "example": "workspace"
                    },
                    "attributes": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string"
                            }
                        }
                    }
                },
                "description": "JSON:API representation of workspace entity."
            },
            "JsonApiApiTokenInDocument": {
                "required": ["data"],
                "type": "object",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/JsonApiApiTokenIn"
                    }
                }
            },
            "JsonApiApiTokenIn": {
                "required": ["id", "type"],
                "type": "object",
                "properties": {
                    "id": {
                        "pattern": "^([.A-Za-z0-9_-]{1,255}:)?[.A-Za-z0-9_-]{1,255}$",
                        "type": "string",
                        "description": "API identifier of an object",
                        "example": "id1"
                    },
                    "type": {
                        "type": "string",
                        "description": "Object type",
                        "example": "apiToken"
                    },
                    "attributes": {
                        "type": "object"
                    }
                },
                "description": "JSON:API representation of apiToken entity."
            },
            "JsonApiAnalyticalDashboardInDocument": {
                "required": ["data"],
                "type": "object",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/JsonApiAnalyticalDashboardIn"
                    }
                }
            },
            "JsonApiAnalyticalDashboardIn": {
                "required": ["id", "type"],
                "type": "object",
                "properties": {
                    "id": {
                        "pattern": "^([.A-Za-z0-9_-]{1,255}:)?[.A-Za-z0-9_-]{1,255}$",
                        "type": "string",
                        "description": "API identifier of an object",
                        "example": "id1"
                    },
                    "type": {
                        "type": "string",
                        "description": "Object type",
                        "example": "analyticalDashboard"
                    },
                    "attributes": {
                        "type": "object",
                        "properties": {
                            "title": {
                                "type": "string"
                            },
                            "description": {
                                "type": "string"
                            },
                            "tags": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "content": {
                                "type": "object",
                                "description": "Free-form JSON content.",
                                "example": {
                                    "identifier": {
                                        "id": "label.leaf",
                                        "type": "label"
                                    },
                                    "someBoolProp": false
                                }
                            }
                        }
                    }
                },
                "description": "JSON:API representation of analyticalDashboard entity."
            },
            "JsonApiAnalyticalDashboardOutDocument": {
                "required": ["data"],
                "type": "object",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/JsonApiAnalyticalDashboardOut"
                    },
                    "links": {
                        "$ref": "#/components/schemas/ObjectLinks"
                    },
                    "included": {
                        "uniqueItems": true,
                        "type": "array",
                        "description": "Included resources",
                        "items": {
                            "anyOf": [
                                {
                                    "$ref": "#/components/schemas/JsonApiVisualizationObjectOutWithLinks"
                                },
                                {
                                    "$ref": "#/components/schemas/JsonApiLabelOutWithLinks"
                                },
                                {
                                    "$ref": "#/components/schemas/JsonApiMetricOutWithLinks"
                                },
                                {
                                    "$ref": "#/components/schemas/JsonApiDatasetOutWithLinks"
                                },
                                {
                                    "$ref": "#/components/schemas/JsonApiFilterContextOutWithLinks"
                                }
                            ]
                        }
                    }
                }
            },
            "JsonApiFilterContextInDocument": {
                "required": ["data"],
                "type": "object",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/JsonApiFilterContextIn"
                    }
                }
            },
            "JsonApiFilterContextIn": {
                "required": ["id", "type"],
                "type": "object",
                "properties": {
                    "id": {
                        "pattern": "^([.A-Za-z0-9_-]{1,255}:)?[.A-Za-z0-9_-]{1,255}$",
                        "type": "string",
                        "description": "API identifier of an object",
                        "example": "id1"
                    },
                    "type": {
                        "type": "string",
                        "description": "Object type",
                        "example": "filterContext"
                    },
                    "attributes": {
                        "type": "object",
                        "properties": {
                            "title": {
                                "type": "string"
                            },
                            "description": {
                                "type": "string"
                            },
                            "tags": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "content": {
                                "type": "object",
                                "description": "Free-form JSON content.",
                                "example": {
                                    "identifier": {
                                        "id": "label.leaf",
                                        "type": "label"
                                    },
                                    "someBoolProp": false
                                }
                            }
                        }
                    }
                },
                "description": "JSON:API representation of filterContext entity."
            },
            "JsonApiFilterContextOutDocument": {
                "required": ["data"],
                "type": "object",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/JsonApiFilterContextOut"
                    },
                    "links": {
                        "$ref": "#/components/schemas/ObjectLinks"
                    },
                    "included": {
                        "uniqueItems": true,
                        "type": "array",
                        "description": "Included resources",
                        "items": {
                            "anyOf": [
                                {
                                    "$ref": "#/components/schemas/JsonApiAttributeOutWithLinks"
                                },
                                {
                                    "$ref": "#/components/schemas/JsonApiDatasetOutWithLinks"
                                },
                                {
                                    "$ref": "#/components/schemas/JsonApiLabelOutWithLinks"
                                }
                            ]
                        }
                    }
                }
            },
            "JsonApiMetricInDocument": {
                "required": ["data"],
                "type": "object",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/JsonApiMetricIn"
                    }
                }
            },
            "JsonApiMetricIn": {
                "required": ["id", "type"],
                "type": "object",
                "properties": {
                    "id": {
                        "pattern": "^([.A-Za-z0-9_-]{1,255}:)?[.A-Za-z0-9_-]{1,255}$",
                        "type": "string",
                        "description": "API identifier of an object",
                        "example": "id1"
                    },
                    "type": {
                        "type": "string",
                        "description": "Object type",
                        "example": "metric"
                    },
                    "attributes": {
                        "type": "object",
                        "properties": {
                            "title": {
                                "type": "string"
                            },
                            "description": {
                                "type": "string"
                            },
                            "tags": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "content": {
                                "type": "object",
                                "properties": {
                                    "format": {
                                        "type": "string"
                                    },
                                    "maql": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "description": "JSON:API representation of metric entity."
            },
            "JsonApiMetricOutDocument": {
                "required": ["data"],
                "type": "object",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/JsonApiMetricOut"
                    },
                    "links": {
                        "$ref": "#/components/schemas/ObjectLinks"
                    },
                    "included": {
                        "uniqueItems": true,
                        "type": "array",
                        "description": "Included resources",
                        "items": {
                            "anyOf": [
                                {
                                    "$ref": "#/components/schemas/JsonApiFactOutWithLinks"
                                },
                                {
                                    "$ref": "#/components/schemas/JsonApiAttributeOutWithLinks"
                                },
                                {
                                    "$ref": "#/components/schemas/JsonApiLabelOutWithLinks"
                                },
                                {
                                    "$ref": "#/components/schemas/JsonApiMetricOutWithLinks"
                                }
                            ]
                        }
                    }
                }
            },
            "JsonApiVisualizationObjectInDocument": {
                "required": ["data"],
                "type": "object",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/JsonApiVisualizationObjectIn"
                    }
                }
            },
            "JsonApiVisualizationObjectIn": {
                "required": ["id", "type"],
                "type": "object",
                "properties": {
                    "id": {
                        "pattern": "^([.A-Za-z0-9_-]{1,255}:)?[.A-Za-z0-9_-]{1,255}$",
                        "type": "string",
                        "description": "API identifier of an object",
                        "example": "id1"
                    },
                    "type": {
                        "type": "string",
                        "description": "Object type",
                        "example": "visualizationObject"
                    },
                    "attributes": {
                        "type": "object",
                        "properties": {
                            "title": {
                                "type": "string"
                            },
                            "description": {
                                "type": "string"
                            },
                            "tags": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "content": {
                                "type": "object",
                                "description": "Free-form JSON content.",
                                "example": {
                                    "identifier": {
                                        "id": "label.leaf",
                                        "type": "label"
                                    },
                                    "someBoolProp": false
                                }
                            }
                        }
                    }
                },
                "description": "JSON:API representation of visualizationObject entity."
            },
            "JsonApiVisualizationObjectOutDocument": {
                "required": ["data"],
                "type": "object",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/JsonApiVisualizationObjectOut"
                    },
                    "links": {
                        "$ref": "#/components/schemas/ObjectLinks"
                    },
                    "included": {
                        "uniqueItems": true,
                        "type": "array",
                        "description": "Included resources",
                        "items": {
                            "anyOf": [
                                {
                                    "$ref": "#/components/schemas/JsonApiFactOutWithLinks"
                                },
                                {
                                    "$ref": "#/components/schemas/JsonApiAttributeOutWithLinks"
                                },
                                {
                                    "$ref": "#/components/schemas/JsonApiLabelOutWithLinks"
                                },
                                {
                                    "$ref": "#/components/schemas/JsonApiMetricOutWithLinks"
                                },
                                {
                                    "$ref": "#/components/schemas/JsonApiAnalyticalDashboardOutWithLinks"
                                },
                                {
                                    "$ref": "#/components/schemas/JsonApiDatasetOutWithLinks"
                                }
                            ]
                        }
                    }
                }
            },
            "JsonApiWorkspaceDataFilterInDocument": {
                "required": ["data"],
                "type": "object",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/JsonApiWorkspaceDataFilterIn"
                    }
                }
            },
            "JsonApiWorkspaceDataFilterIn": {
                "required": ["id", "type"],
                "type": "object",
                "properties": {
                    "id": {
                        "pattern": "^([.A-Za-z0-9_-]{1,255}:)?[.A-Za-z0-9_-]{1,255}$",
                        "type": "string",
                        "description": "API identifier of an object",
                        "example": "id1"
                    },
                    "type": {
                        "type": "string",
                        "description": "Object type",
                        "example": "workspaceDataFilter"
                    },
                    "attributes": {
                        "type": "object",
                        "properties": {
                            "title": {
                                "type": "string"
                            },
                            "description": {
                                "type": "string"
                            },
                            "columnName": {
                                "type": "string"
                            },
                            "dataSourceName": {
                                "type": "string"
                            }
                        }
                    },
                    "relationships": {
                        "type": "object",
                        "properties": {
                            "workspaceDataFilterSettings": {
                                "type": "object",
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/JsonApiRelToMany"
                                    }
                                }
                            }
                        }
                    }
                },
                "description": "JSON:API representation of workspaceDataFilter entity."
            },
            "JsonApiWorkspaceDataFilterOutDocument": {
                "required": ["data"],
                "type": "object",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/JsonApiWorkspaceDataFilterOut"
                    },
                    "links": {
                        "$ref": "#/components/schemas/ObjectLinks"
                    },
                    "included": {
                        "uniqueItems": true,
                        "type": "array",
                        "description": "Included resources",
                        "items": {
                            "anyOf": [
                                {
                                    "$ref": "#/components/schemas/JsonApiWorkspaceDataFilterSettingOutWithLinks"
                                }
                            ]
                        }
                    }
                }
            },
            "JsonApiAttributeOutDocument": {
                "required": ["data"],
                "type": "object",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/JsonApiAttributeOut"
                    },
                    "links": {
                        "$ref": "#/components/schemas/ObjectLinks"
                    },
                    "included": {
                        "uniqueItems": true,
                        "type": "array",
                        "description": "Included resources",
                        "items": {
                            "anyOf": [
                                {
                                    "$ref": "#/components/schemas/JsonApiDatasetOutWithLinks"
                                },
                                {
                                    "$ref": "#/components/schemas/JsonApiLabelOutWithLinks"
                                }
                            ]
                        }
                    }
                }
            },
            "JsonApiDatasetOutDocument": {
                "required": ["data"],
                "type": "object",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/JsonApiDatasetOut"
                    },
                    "links": {
                        "$ref": "#/components/schemas/ObjectLinks"
                    },
                    "included": {
                        "uniqueItems": true,
                        "type": "array",
                        "description": "Included resources",
                        "items": {
                            "anyOf": [
                                {
                                    "$ref": "#/components/schemas/JsonApiSourceTableOutWithLinks"
                                },
                                {
                                    "$ref": "#/components/schemas/JsonApiAttributeOutWithLinks"
                                },
                                {
                                    "$ref": "#/components/schemas/JsonApiFactOutWithLinks"
                                },
                                {
                                    "$ref": "#/components/schemas/JsonApiDatasetOutWithLinks"
                                }
                            ]
                        }
                    }
                }
            },
            "JsonApiFactOutDocument": {
                "required": ["data"],
                "type": "object",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/JsonApiFactOut"
                    },
                    "links": {
                        "$ref": "#/components/schemas/ObjectLinks"
                    },
                    "included": {
                        "uniqueItems": true,
                        "type": "array",
                        "description": "Included resources",
                        "items": {
                            "anyOf": [
                                {
                                    "$ref": "#/components/schemas/JsonApiDatasetOutWithLinks"
                                }
                            ]
                        }
                    }
                }
            },
            "JsonApiLabelOutDocument": {
                "required": ["data"],
                "type": "object",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/JsonApiLabelOut"
                    },
                    "links": {
                        "$ref": "#/components/schemas/ObjectLinks"
                    },
                    "included": {
                        "uniqueItems": true,
                        "type": "array",
                        "description": "Included resources",
                        "items": {
                            "anyOf": [
                                {
                                    "$ref": "#/components/schemas/JsonApiAttributeOutWithLinks"
                                }
                            ]
                        }
                    }
                }
            },
            "JsonApiSourceTablesOutDocument": {
                "required": ["data"],
                "type": "object",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/JsonApiSourceTablesOut"
                    },
                    "links": {
                        "$ref": "#/components/schemas/ObjectLinks"
                    },
                    "included": {
                        "uniqueItems": true,
                        "type": "array",
                        "description": "Included resources",
                        "items": {
                            "anyOf": [
                                {
                                    "$ref": "#/components/schemas/JsonApiSourceTableOutWithLinks"
                                }
                            ]
                        }
                    }
                }
            },
            "JsonApiSourceTableOutDocument": {
                "required": ["data"],
                "type": "object",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/JsonApiSourceTableOut"
                    },
                    "links": {
                        "$ref": "#/components/schemas/ObjectLinks"
                    },
                    "included": {
                        "uniqueItems": true,
                        "type": "array",
                        "description": "Included resources",
                        "items": {
                            "anyOf": [
                                {
                                    "$ref": "#/components/schemas/JsonApiSourceTablesOutWithLinks"
                                }
                            ]
                        }
                    }
                }
            },
            "JsonApiWorkspaceDataFilterSettingOutDocument": {
                "required": ["data"],
                "type": "object",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/JsonApiWorkspaceDataFilterSettingOut"
                    },
                    "links": {
                        "$ref": "#/components/schemas/ObjectLinks"
                    },
                    "included": {
                        "uniqueItems": true,
                        "type": "array",
                        "description": "Included resources",
                        "items": {
                            "anyOf": [
                                {
                                    "$ref": "#/components/schemas/JsonApiWorkspaceDataFilterOutWithLinks"
                                }
                            ]
                        }
                    }
                }
            }
        }
    }
}
