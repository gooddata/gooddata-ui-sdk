// (C) 2019-2024 GoodData Corporation
import { AxiosInstance } from "axios";
import {
    ActionsApi,
    ActionsApiInterface,
    ActionsApiGetNotificationsRequest,
    Notification,
    ActionsApiMarkAsReadNotificationRequest,
    ActionsApiMarkAsReadNotificationAllRequest,
    ActionsApiTestExistingNotificationChannelRequest,
    TestResponse,
    ActionsApiTestNotificationChannelRequest,
    TestNotification,
    TestDestinationRequest,
    AutomationNotification,
    Smtp,
    DefaultSmtp,
    InPlatform,
    Webhook,
    NotificationContent,
    WebhookMessage,
    DefaultSmtpTypeEnum,
    InPlatformTypeEnum,
    SmtpPortEnum,
    SmtpTypeEnum,
    WebhookTypeEnum,
    WebhookMessageData,
    WebhookMessageTypeEnum,
    WebhookAutomationInfo,
    WebhookRecipient,
    ExportResult,
    AlertDescription,
    AlertEvaluationRow,
    AlertDescriptionStatusEnum,
    ExportResultStatusEnum,
    MetricRecord,
    Notifications,
    NotificationsMeta,
    NotificationsMetaTotal,
} from "./generated/automation-json-api/index.js";

/**
 * Tiger execution client factory
 */
export const tigerAutomationClientFactory = (axios: AxiosInstance): ActionsApiInterface =>
    new ActionsApi(undefined, "", axios);

export type {
    ActionsApiInterface as AutomationActionsApiInterface,
    ActionsApiGetNotificationsRequest as AutomationActionsApiGetNotificationsRequest,
    Notification as AutomationNotification,
    ActionsApiMarkAsReadNotificationRequest as AutomationActionsApiMarkAsReadNotificationRequest,
    ActionsApiMarkAsReadNotificationAllRequest as AutomationActionsApiMarkAsReadNotificationAllRequest,
    ActionsApiTestExistingNotificationChannelRequest as AutomationActionsApiTestExistingNotificationChannelRequest,
    TestResponse as AutomationTestResponse,
    ActionsApiTestNotificationChannelRequest as AutomationActionsApiTestNotificationChannelRequest,
    TestNotification as AutomationTestNotification,
    TestDestinationRequest as AutomationTestDestinationRequest,
    AutomationNotification as AutomationAutomationNotification,
    Smtp as AutomationSmtp,
    DefaultSmtp as AutomationDefaultSmtp,
    InPlatform as AutomationInPlatform,
    Webhook as AutomationWebhook,
    NotificationContent as AutomationNotificationContent,
    WebhookMessage as AutomationWebhookMessage,
    DefaultSmtpTypeEnum as AutomationDefaultSmtpTypeEnum,
    InPlatformTypeEnum as AutomationInPlatformTypeEnum,
    SmtpPortEnum as AutomationSmtpPortEnum,
    SmtpTypeEnum as AutomationSmtpTypeEnum,
    WebhookTypeEnum as AutomationWebhookTypeEnum,
    WebhookMessageData as AutomationWebhookMessageData,
    WebhookMessageTypeEnum as AutomationWebhookMessageTypeEnum,
    WebhookAutomationInfo as AutomationWebhookAutomationInfo,
    WebhookRecipient as AutomationWebhookRecipient,
    ExportResult as AutomationExportResult,
    AlertDescription as AutomationAlertDescription,
    AlertEvaluationRow as AutomationAlertEvaluationRow,
    AlertDescriptionStatusEnum as AutomationAlertDescriptionStatusEnum,
    ExportResultStatusEnum as AutomationExportResultStatusEnum,
    MetricRecord as AutomationMetricRecord,
    Notifications as AutomationNotifications,
    NotificationsMeta as AutomationNotificationsMeta,
    NotificationsMetaTotal as AutomationNotificationsMetaTotal,
};
