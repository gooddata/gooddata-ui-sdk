{
    "name": "@gooddata/playground",
    "version": "1.0.0-alpha.0",
    "description": "GoodData.UI SDK - Developer Playground",
    "private": true,
    "repository": {
        "type": "git",
        "url": "https://github.com/gooddata/gooddata-ui-sdk.git",
        "directory": "examples/playground"
    },
    "author": "GoodData Corporation",
    "license": "LicenseRef-LICENSE",
    "type": "module",
    "files": [
        "dist",
        "src",
        "styles",
        "LICENSE"
    ],
    "dependenciesInfo": "This is package is SDk tool and is not distributed all dependencies must be defined as devDependencies due to FOSSA automated report generation",
    "devDependencies": {
        "@gooddata/catalog-export": "workspace:*",
        "@gooddata/eslint-config": "^4.1.0",
        "@gooddata/sdk-backend-base": "workspace:*",
        "@gooddata/sdk-backend-bear": "workspace:*",
        "@gooddata/sdk-backend-spi": "workspace:*",
        "@gooddata/sdk-backend-tiger": "workspace:*",
        "@gooddata/sdk-model": "workspace:*",
        "@gooddata/sdk-ui": "workspace:*",
        "@gooddata/sdk-ui-charts": "workspace:*",
        "@gooddata/sdk-ui-dashboard": "workspace:*",
        "@gooddata/sdk-ui-ext": "workspace:*",
        "@gooddata/sdk-ui-filters": "workspace:*",
        "@gooddata/sdk-ui-geo": "workspace:*",
        "@gooddata/sdk-ui-kit": "workspace:*",
        "@gooddata/sdk-ui-loaders": "workspace:*",
        "@gooddata/sdk-ui-pivot": "workspace:*",
        "@gooddata/sdk-ui-theme-provider": "workspace:*",
        "@types/lodash": "^4.14.202",
        "@types/react": "^18.2.0",
        "@types/react-dom": "^18.2.1",
        "@types/webpack-env": "^1.16.2",
        "@typescript-eslint/eslint-plugin": "^5.57.1",
        "@typescript-eslint/parser": "^5.57.1",
        "@welldone-software/why-did-you-render": "^7.0.1",
        "clean-webpack-plugin": "^4.0.0",
        "css-loader": "^6.7.1",
        "dotenv-webpack": "^7.0.2",
        "esbuild-loader": "^4.0.2",
        "eslint": "^8.25.0",
        "eslint-plugin-header": "^3.0.0",
        "eslint-plugin-import": "^2.22.0",
        "eslint-plugin-import-esm": "^1.2.1",
        "eslint-plugin-jest": "^27.1.1",
        "eslint-plugin-no-only-tests": "^2.4.0",
        "eslint-plugin-prettier": "^4.0.0",
        "eslint-plugin-react": "^7.31.10",
        "eslint-plugin-react-hooks": "^4.5.0",
        "eslint-plugin-regexp": "^1.9.0",
        "eslint-plugin-sonarjs": "^0.16.0",
        "eslint-plugin-tsdoc": "^0.2.14",
        "fork-ts-checker-webpack-plugin": "^9.0.2",
        "html-webpack-plugin": "^5.3.1",
        "lodash": "^4.17.19",
        "npm-run-all": "^4.1.5",
        "prettier": "~2.5.0",
        "prettier-loader": "^3.3.0",
        "react": "^18.2.0",
        "react-dom": "^18.2.0",
        "sass": "^1.52.3",
        "sass-loader": "^10.1.1",
        "source-map-loader": "^4.0.0",
        "speed-measure-webpack-plugin": "^1.5.0",
        "style-loader": "^3.3.1",
        "ts-invariant": "^0.7.5",
        "tslib": "^2.5.0",
        "typescript": "5.3.3",
        "webpack": "^5.58.0",
        "webpack-cli": "^4.9.2",
        "webpack-dev-server": "^4.9.1"
    },
    "scripts": {
        "prettier-check": "prettier --check '{src,stories,styles,__mocks__,examples/server/src,examples/src,examples/test}/**/*.{ts,js,tsx,jsx,json,scss,md,yaml,html}'",
        "prettier-write": "prettier --write '{src,stories,styles,__mocks__,examples/server/src,examples/src,examples/test}/**/*.{ts,js,tsx,jsx,json,scss,md,yaml,html}'",
        "eslint": "eslint -c .eslintrc.cjs src/",
        "eslint-ci": "mkdir -p ./ci/results && eslint -f checkstyle -o ci/results/eslint-results.xml -c .eslintrc.cjs src/",
        "validate": "npm run eslint && npm run prettier-check",
        "validate-ci": "npm run eslint-ci && npm run prettier-check",
        "play?": "# Default is the public proxy, other options: npm run play [sec,secure,stg,stg2,stg3,developer,public,reference,tiger-stg]",
        "play": "bash scripts/run-playground.sh",
        "playWithWdyr": "WDYR=true bash scripts/run-playground.sh",
        "build": "echo Build of playground is skipped by default. See the alternative 'build_' script.",
        "build_": "bash scripts/build-playground.sh ${EXAMPLES_BUILD_TYPE}",
        "refresh-md": "./scripts/refresh-md.sh && npm run build"
    }
}
